// deno-fmt-ignore-file
// deno-lint-ignore-file
// This code was bundled using `deno bundle` and it's not recommended to edit it manually

function getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
function createCommonjsModule(fn) {
    var module = {
        exports: {}
    };
    return fn(module, module.exports), module.exports;
}
var __VIRTUAL_FILE = createCommonjsModule(function(module, exports) {
    !function(t, e) {
        module.exports = e();
    }(self, function() {
        return (()=>{
            var t = {
                2067: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.Channel = void 0;
                    const i = n(r2(6729)), o = r2(5887), s = r2(1496);
                    function a(t3, e3) {
                        const { type: r3 , created: n2  } = t3, { type: i2 , created: o2  } = e3;
                        return r3 === s.TaskPriority.High && i2 !== s.TaskPriority.High ? -1 : i2 === s.TaskPriority.High && r3 !== s.TaskPriority.High ? 1 : i2 === s.TaskPriority.Tail && r3 !== s.TaskPriority.Tail ? -1 : r3 === s.TaskPriority.Tail && i2 !== s.TaskPriority.Tail ? 1 : n2 < o2 ? -1 : o2 < n2 ? 1 : 0;
                    }
                    class u extends i.default {
                        constructor(t3){
                            if (super(), typeof t3 != "string" || t3.length <= 0) throw new Error("Failed creating Channel: Invalid or empty name");
                            this._name = t3, this._tasks = [], this._running = false, this._autostart = true;
                        }
                        get autostart() {
                            return this._autostart;
                        }
                        get isEmpty() {
                            return !this.isRunning && this.tasks.length === 0;
                        }
                        get isRunning() {
                            return this._running;
                        }
                        get tasks() {
                            return this._tasks;
                        }
                        set autostart(t3) {
                            this._autostart = !!t3;
                        }
                        set isRunning(t3) {
                            this._running = t3;
                        }
                        clear(t3) {
                            if (t3) for(let e3 = this.tasks.length - 1; e3 >= 0; e3 -= 1)this.tasks[e3].type === t3 && this.tasks.splice(e3, 1);
                            else this.tasks.splice(0, 1 / 0);
                        }
                        enqueue(t3, e3 = s.TaskPriority.Normal, r3) {
                            if (r3) {
                                const t4 = this.getStackedItems(r3);
                                if (t4.length > 0) return t4[t4.length - 1].queuedPromise;
                            }
                            const n2 = new o.Task(t3, e3, r3);
                            return this.tasks.push(n2), this.sort(), this.autostart && this.start(), n2.queuedPromise;
                        }
                        getStackedItems(t3) {
                            return this.tasks.filter((e3)=>e3.stack && e3.stack === t3
                            );
                        }
                        retrieveNextItem() {
                            return this.tasks.shift();
                        }
                        sort() {
                            this.tasks.sort(a);
                        }
                        start() {
                            return !this.isRunning && (this.emit("started"), this.isRunning = true, setTimeout(()=>this._runNextItem()
                            , 0), true);
                        }
                        _runNextItem() {
                            const t3 = this.retrieveNextItem();
                            t3 ? t3.execute().then(()=>this._runNextItem()
                            ) : (this.isRunning = false, this.emit("stopped"));
                        }
                    }
                    e2.Channel = u;
                },
                3414: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.ChannelQueue = void 0;
                    const i = n(r2(6729)), o = r2(2067), s = r2(378);
                    class a extends i.default {
                        constructor(){
                            super(), this._channels = {};
                        }
                        get channels() {
                            return this._channels;
                        }
                        createChannel(t3) {
                            if (this.channelExists(t3)) throw new Error(`Cannot create channel: channel already exists: ${t3}`);
                            return this.channels[t3] = new o.Channel(t3), this.channels[t3];
                        }
                        createParallelChannel(t3, e3) {
                            if (this.channelExists(t3)) throw new Error(`Cannot create channel: channel already exists: ${t3}`);
                            const r3 = this.channels[t3] = new s.ParallelChannel(t3);
                            return e3 && (r3.parallelism = e3), r3;
                        }
                        channel(t3) {
                            return this.channelExists(t3) !== true ? this.createChannel(t3) : this.channels[t3];
                        }
                        channelExists(t3) {
                            return this.channels.hasOwnProperty(t3);
                        }
                    }
                    e2.ChannelQueue = a;
                },
                378: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.ParallelChannel = void 0;
                    const n = r2(2067);
                    class i extends n.Channel {
                        constructor(t3){
                            super(t3), this._parallelism = 2, this._runningTasks = [], this.canRunAcrossTaskTypes = false;
                        }
                        get isEmpty() {
                            return super.isEmpty && this._runningTasks.length <= 0;
                        }
                        get parallelism() {
                            return this._parallelism;
                        }
                        get runningTasks() {
                            return this._runningTasks;
                        }
                        set parallelism(t3) {
                            const e3 = Math.max(t3, 1);
                            this._parallelism = e3;
                        }
                        _runNextItem() {
                            const t3 = ()=>{
                                this.isRunning = false, this.emit("stopped");
                            };
                            let e3 = this.parallelism - this.runningTasks.length;
                            if (!(e3 <= 0)) if (this.runningTasks.length !== 0 || this.tasks.length !== 0) for(; e3 > 0;){
                                if (!this.canRunAcrossTaskTypes && this.runningTasks.length > 0 && this.tasks.length > 0 && this.runningTasks[0].type !== this.tasks[0].type) return;
                                e3 -= 1;
                                const r3 = this.retrieveNextItem();
                                if (!r3) return void t3();
                                this.runningTasks.push(r3), r3.execute().then(()=>{
                                    this.runningTasks.splice(this.runningTasks.indexOf(r3), 1), this._runNextItem();
                                });
                            }
                            else t3();
                        }
                    }
                    e2.ParallelChannel = i;
                },
                5887: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.Task = void 0;
                    const n = r2(1496);
                    e2.Task = class {
                        constructor(t3, e3 = n.TaskPriority.Normal, r3){
                            if (this._stack = null, this._resolveFn = null, this._rejectFn = null, t3 instanceof Promise != 1 && typeof t3 != "function") throw new Error("Invalid task item: Expected a Promise or Function");
                            this._target = typeof t3 == "function" ? t3 : ()=>t3
                            , this._stack = r3 != null ? r3 : null, this._type = e3, this._resolveFn = null, this._rejectFn = null, this._queuedPromise = new Promise((t4, e4)=>{
                                this._resolveFn = t4, this._rejectFn = e4;
                            });
                            const i = new Date();
                            this._created = i.getTime();
                        }
                        get created() {
                            return this._created;
                        }
                        get queuedPromise() {
                            return this._queuedPromise;
                        }
                        get stack() {
                            return this._stack;
                        }
                        get target() {
                            return this._target;
                        }
                        get type() {
                            return this._type;
                        }
                        execute() {
                            var t3;
                            const e3 = this.target;
                            let r3;
                            try {
                                r3 = e3();
                            } catch (e41) {
                                return (t3 = this._rejectFn) === null || t3 === void 0 || t3.call(this, e41), Promise.resolve();
                            }
                            return (r3 instanceof Promise ? r3 : Promise.resolve(r3)).then((t4)=>{
                                var e4;
                                (e4 = this._resolveFn) === null || e4 === void 0 || e4.call(this, t4);
                            }).catch((t4)=>{
                                var e4;
                                (e4 = this._rejectFn) === null || e4 === void 0 || e4.call(this, t4);
                            });
                        }
                    };
                },
                7083: function(t2, e2, r2) {
                    var n = this && this.__createBinding || (Object.create ? function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), Object.defineProperty(t3, n2, {
                            enumerable: true,
                            get: function() {
                                return e3[r3];
                            }
                        });
                    } : function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), t3[n2] = e3[r3];
                    }), i = this && this.__exportStar || function(t3, e3) {
                        for(var r3 in t3)r3 === "default" || Object.prototype.hasOwnProperty.call(e3, r3) || n(e3, t3, r3);
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), i(r2(2067), e2), i(r2(378), e2), i(r2(3414), e2), i(r2(5887), e2), i(r2(1496), e2);
                },
                1496: (t2, e2)=>{
                    var r2;
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.TaskPriority = void 0, (r2 = e2.TaskPriority || (e2.TaskPriority = {})).Normal = "normal", r2.High = "high-priority", r2.Tail = "tail";
                },
                5395: (t2, e2, r2)=>{
                    const { DROPBOX_DOMAIN: n  } = r2(8057);
                    t2.exports = {
                        generateAuthorisationURL: function(t3, e3) {
                            const r3 = encodeURIComponent(e3);
                            return `https://${n}/oauth2/authorize?response_type=token&client_id=${t3}&redirect_uri=${r3}`;
                        }
                    };
                },
                7735: (t2, e2, r2)=>{
                    const n = r2(5342), { request: i  } = r2(1284), { createDirectory: o , deleteFile: s , getDirectoryContents: a , getFileContents: u , putFileContents: c  } = r2(9703), { createFsInterface: l  } = r2(5637);
                    t2.exports = {
                        createClient: function(t3) {
                            const e3 = new n();
                            return e3.patch("request", i), {
                                request: i,
                                patcher: e3,
                                createDirectory: (r3)=>o(r3, t3, e3)
                                ,
                                deleteFile: (r3)=>s(r3, t3, e3)
                                ,
                                getDirectoryContents: (r3)=>a(r3, t3, e3)
                                ,
                                getFileContents: (r3)=>u(r3, t3, e3)
                                ,
                                putFileContents: (r3, n2)=>c(r3, n2, t3, e3)
                            };
                        },
                        createFsInterface: l
                    };
                },
                8057: (t2)=>{
                    t2.exports = {
                        DROPBOX_DOMAIN: "dropbox.com"
                    };
                },
                8894: (t2)=>{
                    t2.exports = {
                        convertDirectoryResult: function(t3) {
                            const e2 = t3[".tag"];
                            if (/^(file|folder)$/.test(e2) !== true) throw new Error(`Unrecognised item type: ${e2}`);
                            const r2 = e2 === "folder" ? "directory" : "file";
                            return {
                                name: t3.name,
                                path: t3.path_display,
                                type: r2,
                                id: t3.id,
                                size: t3.size || 0
                            };
                        },
                        urlSafeJSONStringify: function(t3) {
                            return JSON.stringify(t3).replace(/[\u007f-\uffff]/g, (t4)=>`\\u${`000${t4.charCodeAt(0).toString(16)}`.slice(-4)}`
                            );
                        }
                    };
                },
                5637: (t2)=>{
                    t2.exports = {
                        createFsInterface: function(t3) {
                            return {
                                mkdir: (e2, r2, n)=>{
                                    typeof r2 != "function" && console.warn("Options not supported for Dropbox mkdir"), t3.createDirectory(e2).then(()=>n(null)
                                    ).catch(n);
                                },
                                readdir: (e2, r2 = {}, n)=>{
                                    let i = n, o = r2;
                                    typeof r2 == "function" && (i = r2, o = {});
                                    const s = o.mode || "node";
                                    t3.getDirectoryContents(e2).then((t4)=>{
                                        if (/^(node|stat)$/.test(s) === false) throw new Error(`Invalid mode: ${s}`);
                                        i(null, t4.map((t5)=>s === "node" ? t5.name : Object.assign(t5, {
                                                isFile: ()=>t5.type === "file"
                                                ,
                                                isDirectory: ()=>t5.type === "directory"
                                            })
                                        ));
                                    }).catch(i);
                                },
                                readFile: (e2, r2 = {}, n)=>{
                                    let i = n;
                                    typeof r2 == "function" && (i = r2), t3.getFileContents(e2).then((t4)=>i(null, t4)
                                    ).catch(i);
                                },
                                writeFile: (e2, r2, n = {}, i)=>{
                                    let o = i;
                                    typeof n == "function" && (o = n), t3.putFileContents(e2, r2).then(()=>o()
                                    ).catch(o);
                                },
                                unlink: (e2, r2)=>{
                                    t3.deleteFile(e2).then(r2, r2);
                                }
                            };
                        }
                    };
                },
                3907: (t2, e2, r2)=>{
                    const { createClient: n , createFsInterface: i  } = r2(7735), { generateAuthorisationURL: o  } = r2(5395);
                    t2.exports = {
                        createClient: n,
                        createFsInterface: i,
                        generateAuthorisationURL: o
                    };
                },
                9703: (t2, e2, r2)=>{
                    const { convertDirectoryResult: n , urlSafeJSONStringify: i  } = r2(8894);
                    t2.exports = {
                        createDirectory: function(t3, e3, r3) {
                            const n2 = {
                                method: "POST",
                                url: "https://api.dropboxapi.com/2/files/create_folder_v2",
                                headers: {
                                    "Content-Type": "text/plain; charset=dropbox-cors-hack"
                                },
                                query: {
                                    authorization: `Bearer ${e3}`,
                                    reject_cors_preflight: "true"
                                },
                                body: JSON.stringify({
                                    path: t3,
                                    autorename: false
                                })
                            };
                            return r3.execute("request", n2).then(()=>{});
                        },
                        deleteFile: function(t3, e3, r3) {
                            const n2 = {
                                method: "POST",
                                url: "https://api.dropboxapi.com/2/files/delete_v2",
                                headers: {
                                    "Content-Type": "text/plain; charset=dropbox-cors-hack"
                                },
                                query: {
                                    authorization: `Bearer ${e3}`,
                                    reject_cors_preflight: "true"
                                },
                                body: JSON.stringify({
                                    path: t3
                                })
                            };
                            return r3.execute("request", n2).then(()=>{});
                        },
                        getDirectoryContents: function(t3, e3, r3) {
                            const i2 = t3 === "/" ? "" : t3, o = {
                                method: "POST",
                                url: "https://api.dropboxapi.com/2/files/list_folder",
                                headers: {
                                    "Content-Type": "text/plain; charset=dropbox-cors-hack"
                                },
                                query: {
                                    authorization: `Bearer ${e3}`,
                                    reject_cors_preflight: "true"
                                },
                                body: JSON.stringify({
                                    path: i2,
                                    recursive: false,
                                    limit: 2e3,
                                    include_media_info: false,
                                    include_deleted: false,
                                    include_has_explicit_shared_members: false,
                                    include_mounted_folders: true
                                })
                            };
                            return r3.execute("request", o).then((t4)=>{
                                const { entries: e4  } = t4.data;
                                return e4.map(n);
                            });
                        },
                        getFileContents: function(t3, e3, r3) {
                            const n2 = {
                                method: "GET",
                                url: "https://content.dropboxapi.com/2/files/download",
                                query: {
                                    arg: i({
                                        path: t3
                                    }),
                                    authorization: `Bearer ${e3}`,
                                    reject_cors_preflight: "true"
                                }
                            };
                            return r3.execute("request", n2).then((t4)=>t4.data
                            );
                        },
                        putFileContents: function(t3, e3, r3, n2) {
                            const i2 = {
                                method: "POST",
                                url: "https://content.dropboxapi.com/2/files/upload",
                                query: {
                                    arg: JSON.stringify({
                                        path: t3,
                                        mode: "overwrite"
                                    }),
                                    authorization: `Bearer ${r3}`,
                                    reject_cors_preflight: "true"
                                },
                                headers: {
                                    "Content-Type": "application/octet-stream"
                                },
                                body: e3
                            };
                            return n2.execute("request", i2).then(()=>{});
                        }
                    };
                },
                3476: (t2, e2, r2)=>{
                    const { handleError: n  } = r2(8017), { MIME_FOLDER: i  } = r2(8272);
                    t2.exports = {
                        createDirectory: function(t3, e3, { parentID: r3 , name: o  } = {}) {
                            const s = {
                                url: "https://www.googleapis.com/drive/v3/files",
                                method: "POST",
                                headers: {
                                    Authorization: `Bearer ${t3}`,
                                    "Content-Type": "application/json"
                                },
                                body: {
                                    mimeType: i,
                                    name: o,
                                    parents: r3 ? [
                                        r3
                                    ] : []
                                }
                            };
                            return e3.execute("request", s).then((t4)=>t4.data.id
                            ).catch(n);
                        }
                    };
                },
                450: (t2, e2, r2)=>{
                    const { handleError: n  } = r2(8017), { MIME_FOLDER: i  } = r2(8272);
                    function o(t3, e3, { currentFiles: r3 = [] , nextPageToken: s , formTree: a = false  } = {}) {
                        const u = {
                            url: "https://www.googleapis.com/drive/v3/files",
                            method: "GET",
                            query: {
                                corpora: "user",
                                pageSize: 1e3,
                                spaces: "drive",
                                fields: "files(id,name,mimeType,createdTime,modifiedTime,shared,size,parents,trashed),nextPageToken"
                            },
                            headers: {
                                Authorization: `Bearer ${t3}`
                            }
                        };
                        return s && (u.query.pageToken = s), e3.execute("request", u).then((n2)=>{
                            const s2 = n2.data, u2 = [
                                ...r3,
                                ...s2.files.filter((t4)=>!t4.trashed
                                ).map((t4)=>({
                                        id: t4.id,
                                        filename: t4.name,
                                        parents: [
                                            ...t4.parents || []
                                        ],
                                        mime: t4.mimeType,
                                        type: t4.mimeType === i ? "directory" : "file",
                                        created: t4.createdTime,
                                        modified: t4.modifiedTime,
                                        shared: t4.shared,
                                        size: t4.size ? parseInt(t4.size, 10) : 0
                                    })
                                )
                            ];
                            return s2.nextPageToken ? o(t3, e3, {
                                currentFiles: u2,
                                nextPageToken: s2.nextPageToken,
                                formTree: a
                            }) : a ? function(t4) {
                                const e4 = t4.map((t5)=>t5.id
                                ), r4 = [];
                                t4.forEach((t5)=>{
                                    t5.parents.forEach((t6)=>{
                                        e4.indexOf(t6) === -1 && r4.indexOf(t6) === -1 && r4.push(t6);
                                    });
                                });
                                const n3 = (e5)=>({
                                        id: e5 ? e5.id : null,
                                        filename: e5 ? e5.filename : null,
                                        files: e5 ? t4.filter((t5)=>t5.type === "file" && t5.parents.indexOf(e5.id) >= 0
                                        ) : t4.filter((t5)=>t5.type === "file" && (t5.parents.length === 0 || t5.parents.some((t6)=>r4.indexOf(t6) >= 0
                                            ))
                                        ),
                                        children: (e5 ? t4.filter((t5)=>t5.type === "directory" && t5.parents.indexOf(e5.id) >= 0
                                        ) : t4.filter((t5)=>t5.type === "directory" && (t5.parents.length === 0 || t5.parents.some((t6)=>r4.indexOf(t6) >= 0
                                            ))
                                        )).map((t5)=>n3(t5, e5 ? e5.id : null)
                                        )
                                    })
                                ;
                                return n3();
                            }(u2) : u2;
                        }).catch(n);
                    }
                    t2.exports = {
                        getDirectoryContents: o,
                        mapDirectoryContents: function(t3, e3, r3, n2) {
                            let i2;
                            i2 = !r3["@@dirresults"] || Date.now() - r3["@@dirresults"].updated > 1e4 ? o(t3, e3, {
                                formTree: false
                            }).then((t4)=>(r3["@@dirresults"] ? Object.assign(r3["@@dirresults"], {
                                    cachedContents: t4,
                                    updated: Date.now()
                                }) : Object.defineProperty(r3, "@@dirresults", {
                                    enumerable: false,
                                    writable: false,
                                    configurable: false,
                                    value: {
                                        cachedContents: t4,
                                        updated: Date.now()
                                    }
                                }), t4)
                            ) : Promise.resolve(r3["@@dirresults"].cachedContents);
                            const s = (t4, e4, r4 = [])=>{
                                const n3 = t4.find((t5)=>t5.id === e4
                                ), [i3] = n3.parents, o2 = t4.find((t5)=>t5.id === i3
                                );
                                return o2 ? s(t4, i3, [
                                    o2.filename,
                                    ...r4
                                ]) : r4;
                            };
                            return i2.then((t4)=>t4.map((e4)=>Object.assign(e4, {
                                        dirPath: `/${s(t4, e4.id).join("/")}`
                                    })
                                ).filter((t5)=>{
                                    return e4 = t5.dirPath, r4 = n2, e4.replace(/\/+$/, "") === r4.replace(/\/+$/, "");
                                    var e4, r4;
                                })
                            );
                        }
                    };
                },
                9256: (t2, e2, r2)=>{
                    const { encodeBase64: n , handleError: i  } = r2(8017), o = "--", s = "Content-Transfer-Encoding: base64", a = "Content-Type: application/json; charset=UTF-8", u = "Content-Type: text/plain; charset=UTF-8", c = "\r\n";
                    t2.exports = {
                        deleteFile: function(t3, e3, r3) {
                            const n2 = {
                                url: `https://www.googleapis.com/drive/v3/files/${r3}`,
                                method: "DELETE",
                                headers: {
                                    Authorization: `Bearer ${t3}`
                                }
                            };
                            return e3.execute("request", n2).then(()=>{}).catch(i);
                        },
                        getFileContents: function(t3, e3, r3) {
                            const n2 = {
                                url: `https://www.googleapis.com/drive/v3/files/${r3}`,
                                method: "GET",
                                query: {
                                    alt: "media"
                                },
                                headers: {
                                    Authorization: `Bearer ${t3}`
                                }
                            };
                            return e3.execute("request", n2).then((t4)=>t4.data
                            ).catch(i);
                        },
                        putFileContents: function(t3, e3, { parentID: r3 , id: l , contents: h = "" , name: f  } = {}) {
                            const d = `BCUP_DRV_UPL_${Math.floor(1e6 * Math.random())}`, p = l ? `https://www.googleapis.com/upload/drive/v3/files/${l}` : "https://www.googleapis.com/upload/drive/v3/files", g = l ? "PATCH" : "POST", y = {};
                            r3 && (y.parents = [
                                r3
                            ]), f && (y.name = f);
                            const m = JSON.stringify(y), v = [
                                c,
                                o,
                                d,
                                c,
                                a,
                                c,
                                c
                            ].join(""), b = [
                                c,
                                o,
                                d,
                                c,
                                u,
                                c,
                                s,
                                c,
                                c
                            ].join(""), _ = [
                                c,
                                o,
                                d,
                                o,
                                c
                            ].join(""), w = v.length + m.length + b.length + h.length + _.length, E = [];
                            [
                                v,
                                m,
                                b,
                                n(h),
                                _
                            ].forEach((t4)=>{
                                for(let e4 = 0; e4 < t4.length; e4 += 1)E.push(255 & t4.charCodeAt(e4));
                            });
                            const A = new Uint8Array(E).buffer, S = {
                                url: p,
                                method: g,
                                query: {
                                    uploadType: "multipart"
                                },
                                headers: {
                                    Authorization: `Bearer ${t3}`,
                                    "Content-Type": `multipart/related; boundary=${d}`,
                                    "Content-Length": w.toString()
                                },
                                body: A
                            };
                            return e3.execute("request", S).then((t4)=>t4.data.id
                            ).catch(i);
                        }
                    };
                },
                8017: (t2, e2, r2)=>{
                    const { Layerr: n  } = r2(3572), { fromByteArray: i  } = r2(9742);
                    t2.exports = {
                        encodeBase64: function(t3) {
                            const e3 = new TextEncoder().encode(t3);
                            return i(e3);
                        },
                        handleError: function(t3) {
                            if (t3.responseHeaders && t3.responseHeaders["www-authenticate"]) throw new n({
                                cause: t3,
                                info: {
                                    authFailure: /error=invalid_token/.test(t3.responseHeaders["www-authenticate"])
                                }
                            }, "Request failed");
                            throw new n(t3, "Request failed");
                        }
                    };
                },
                2042: (t2, e2, r2)=>{
                    const n = r2(5342), { request: i  } = r2(1284), { getDirectoryContents: o , mapDirectoryContents: s  } = r2(450), { deleteFile: a , getFileContents: u , putFileContents: c  } = r2(9256), { createDirectory: l  } = r2(3476);
                    t2.exports = {
                        createClient: function(t3) {
                            const e3 = new n();
                            e3.patch("request", i);
                            const r3 = {
                                request: i,
                                patcher: e3,
                                createDirectory: ({ name: r4 , parent: n2  } = {})=>l(t3, e3, {
                                        parentID: n2,
                                        name: r4
                                    })
                                ,
                                deleteFile: (r4)=>a(t3, e3, r4)
                                ,
                                getDirectoryContents: ({ tree: r4 = true  } = {})=>o(t3, e3, {
                                        formTree: r4
                                    })
                                ,
                                getFileContents: (r4)=>u(t3, e3, r4)
                                ,
                                mapDirectoryContents: (n2)=>s(t3, e3, r3, n2)
                                ,
                                putFileContents: ({ id: r4 , name: n2 , parent: i2 , contents: o2  } = {})=>c(t3, e3, {
                                        id: r4,
                                        contents: o2,
                                        name: n2,
                                        parentID: i2
                                    })
                            };
                            return r3;
                        }
                    };
                },
                8272: (t2)=>{
                    t2.exports = {
                        MIME_FOLDER: "application/vnd.google-apps.folder"
                    };
                },
                9742: (t2, e2)=>{
                    e2.byteLength = function(t3) {
                        var e3 = u(t3), r3 = e3[0], n2 = e3[1];
                        return 3 * (r3 + n2) / 4 - n2;
                    }, e2.toByteArray = function(t3) {
                        var e3, r3, o2 = u(t3), s2 = o2[0], a2 = o2[1], c2 = new i(function(t4, e4, r4) {
                            return 3 * (e4 + r4) / 4 - r4;
                        }(0, s2, a2)), l = 0, h = a2 > 0 ? s2 - 4 : s2;
                        for(r3 = 0; r3 < h; r3 += 4)e3 = n[t3.charCodeAt(r3)] << 18 | n[t3.charCodeAt(r3 + 1)] << 12 | n[t3.charCodeAt(r3 + 2)] << 6 | n[t3.charCodeAt(r3 + 3)], c2[l++] = e3 >> 16 & 255, c2[l++] = e3 >> 8 & 255, c2[l++] = 255 & e3;
                        return a2 === 2 && (e3 = n[t3.charCodeAt(r3)] << 2 | n[t3.charCodeAt(r3 + 1)] >> 4, c2[l++] = 255 & e3), a2 === 1 && (e3 = n[t3.charCodeAt(r3)] << 10 | n[t3.charCodeAt(r3 + 1)] << 4 | n[t3.charCodeAt(r3 + 2)] >> 2, c2[l++] = e3 >> 8 & 255, c2[l++] = 255 & e3), c2;
                    }, e2.fromByteArray = function(t3) {
                        for(var e3, n2 = t3.length, i2 = n2 % 3, o2 = [], s2 = 16383, a2 = 0, u2 = n2 - i2; a2 < u2; a2 += s2)o2.push(c(t3, a2, a2 + s2 > u2 ? u2 : a2 + s2));
                        return i2 === 1 ? (e3 = t3[n2 - 1], o2.push(r2[e3 >> 2] + r2[e3 << 4 & 63] + "==")) : i2 === 2 && (e3 = (t3[n2 - 2] << 8) + t3[n2 - 1], o2.push(r2[e3 >> 10] + r2[e3 >> 4 & 63] + r2[e3 << 2 & 63] + "=")), o2.join("");
                    };
                    for(var r2 = [], n = [], i = typeof Uint8Array != "undefined" ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, a = o.length; s < a; ++s)r2[s] = o[s], n[o.charCodeAt(s)] = s;
                    function u(t3) {
                        var e3 = t3.length;
                        if (e3 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                        var r3 = t3.indexOf("=");
                        return r3 === -1 && (r3 = e3), [
                            r3,
                            r3 === e3 ? 0 : 4 - r3 % 4
                        ];
                    }
                    function c(t3, e3, n2) {
                        for(var i2, o2, s2 = [], a2 = e3; a2 < n2; a2 += 3)i2 = (t3[a2] << 16 & 16711680) + (t3[a2 + 1] << 8 & 65280) + (255 & t3[a2 + 2]), s2.push(r2[(o2 = i2) >> 18 & 63] + r2[o2 >> 12 & 63] + r2[o2 >> 6 & 63] + r2[63 & o2]);
                        return s2.join("");
                    }
                    n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63;
                },
                9894: (t2)=>{
                    function e2(t3) {
                        this.dict = t3 || {};
                    }
                    e2.prototype.set = function(t3, e3, r2) {
                        if (typeof t3 != "object") {
                            r2 === void 0 && (r2 = true);
                            var n = this.has(t3);
                            return !r2 && n ? this.dict[n] = this.dict[n] + "," + e3 : this.dict[n || t3] = e3, n;
                        }
                        for(var i in t3)this.set(i, t3[i], e3);
                    }, e2.prototype.has = function(t3) {
                        for(var e3 = Object.keys(this.dict), r2 = (t3 = t3.toLowerCase(), 0); r2 < e3.length; r2++)if (e3[r2].toLowerCase() === t3) return e3[r2];
                        return false;
                    }, e2.prototype.get = function(t3) {
                        var e3, r2;
                        t3 = t3.toLowerCase();
                        var n = this.dict;
                        return Object.keys(n).forEach(function(i) {
                            r2 = i.toLowerCase(), t3 === r2 && (e3 = n[i]);
                        }), e3;
                    }, e2.prototype.swap = function(t3) {
                        var e3 = this.has(t3);
                        if (e3 !== t3) {
                            if (!e3) throw new Error('There is no header than matches "' + t3 + '"');
                            this.dict[t3] = this.dict[e3], delete this.dict[e3];
                        }
                    }, e2.prototype.del = function(t3) {
                        var e3 = this.has(t3);
                        return delete this.dict[e3 || t3];
                    }, t2.exports = function(t3) {
                        return new e2(t3);
                    }, t2.exports.httpify = function(t3, r2) {
                        var n = new e2(r2);
                        return t3.setHeader = function(t4, e3, r3) {
                            if (e3 !== void 0) return n.set(t4, e3, r3);
                        }, t3.hasHeader = function(t4) {
                            return n.has(t4);
                        }, t3.getHeader = function(t4) {
                            return n.get(t4);
                        }, t3.removeHeader = function(t4) {
                            return n.del(t4);
                        }, t3.headers = n.dict, n;
                    };
                },
                3636: (t2, e2, r2)=>{
                    const n = r2(3827).Z;
                    t2.exports = {
                        createNewRequest: function() {
                            return n ? new XMLHttpRequest() : new (r2(2323))();
                        }
                    };
                },
                5488: (t2, e2, r2)=>{
                    const { parse: n  } = r2(4150);
                    t2.exports = {
                        parseHeaders: function(t3) {
                            const e3 = n(t3);
                            return r3 = e3, Object.keys(r3).reduce((t4, e4)=>Object.assign(t4, {
                                    [e4.toLowerCase()]: r3[e4]
                                })
                            , {});
                            var r3;
                        }
                    };
                },
                1284: (t2, e2, r2)=>{
                    const { request: n  } = r2(3595), i = r2(3978);
                    t2.exports = {
                        Symbols: i,
                        request: n
                    };
                },
                3595: (t2, e2, r2)=>{
                    const n = r2(9894), i = r2(7563), o = r2(3827).Z, { Layerr: s  } = r2(3572), { createNewRequest: a  } = r2(3636), { parseHeaders: u  } = r2(5488), { ERR_ABORTED: c , ERR_REQUEST_FAILED: l , ERR_STATUS_INVALID: h  } = r2(3978), { STATUSES: f  } = r2(7377), d = /^application\/octet/, p = /^application\/json/, g = {
                        body: null,
                        factory: a,
                        headers: {},
                        method: "GET",
                        query: null,
                        responseType: "auto",
                        url: null
                    }, y = /application\/json/;
                    function m(t3) {
                        return !(!t3 || typeof t3 != "object" || `${t3}` != "[object FormData]");
                    }
                    function v(t3) {
                        return t3 >= 200 && t3 < 400;
                    }
                    t2.exports = {
                        request: function(t3) {
                            const e3 = typeof t3 == "string" ? {
                                url: t3
                            } : t3, r3 = Object.assign({}, g, typeof e3 == "object" ? e3 : {}), { body: a2 , factory: b , headers: _ , method: w , nodeJsOptions: E = null , query: A , responseType: S , url: P , validateStatus: x = v , withCredentials: T  } = r3, O = function(t4, e4) {
                                if (e4) {
                                    const r4 = i.stringify(e4);
                                    return r4 ? `${t4}?${r4}` : t4;
                                }
                                return t4;
                            }(P, A), C = {}, j = n(C);
                            Object.keys(_).forEach((t4)=>{
                                j.set(t4, _[t4]);
                            }), function(t4, e4) {
                                const { body: r4  } = t4;
                                !r4 || typeof r4 != "object" || m(r4) || e4.get("content-type") || e4.set("Content-Type", "application/json");
                            }(r3, j);
                            const D = b();
                            return D.nodejsSet && E && typeof E == "object" && D.nodejsSet(E), new Promise(function(t4, e4) {
                                const i2 = (t5 = l)=>{
                                    const r4 = D.response && !y.test(D.getResponseHeader("Content-Type")) ? `Request failed: ${D.status} ${D.statusText}: ${D.response}` : `Request failed: ${D.status} ${D.statusText}`, n2 = D.getAllResponseHeaders(), i3 = new s({
                                        info: {
                                            status: D.status,
                                            statusText: D.statusText,
                                            code: t5,
                                            responseHeaders: n2 ? u(n2) : {},
                                            responseBody: D.responseBody
                                        }
                                    }, r4);
                                    i3.status = D.status, i3.statusText = D.statusText, i3.code = t5, i3.responseHeaders = n2 ? u(n2) : {}, i3.responseBody = D.response, e4(i3);
                                };
                                D.addEventListener("load", ()=>{
                                    if (!x(D.status)) return i2(h);
                                    var e5, o2;
                                    t4((e5 = D, o2 = r3, Promise.resolve().then(()=>{
                                        const t5 = u(e5.getAllResponseHeaders()), r4 = n(t5);
                                        if (o2.responseType === "auto") {
                                            const n2 = r4.get("content-type");
                                            return d.test(n2) ? [
                                                e5.response,
                                                t5
                                            ] : p.test(n2) ? [
                                                e5.response && typeof e5.response == "object" ? e5.response : JSON.parse(e5.responseText),
                                                t5
                                            ] : [
                                                e5.responseText || e5.response,
                                                t5
                                            ];
                                        }
                                        return [
                                            e5.response,
                                            t5
                                        ];
                                    }).then(([t5, r4])=>({
                                            url: e5.responseURL,
                                            method: o2.method,
                                            headers: r4,
                                            data: t5,
                                            status: e5.status,
                                            statusText: f[e5.status]
                                        })
                                    )));
                                }), D.addEventListener("error", ()=>{
                                    i2();
                                }), D.addEventListener("abort", ()=>{
                                    const t5 = new s({
                                        info: {
                                            status: "",
                                            statusCode: 0,
                                            code: c
                                        }
                                    }, "Request failed: The request was aborted");
                                    t5.status = "", t5.statusCode = 0, t5.code = c, e4(t5);
                                }), D.open(w, O), typeof T == "boolean" && (D.withCredentials = T), Object.keys(C).forEach((t5)=>{
                                    D.setRequestHeader(t5, C[t5]);
                                }), S && (S.toLowerCase() === "buffer" && o ? D.responseType = "arraybuffer" : S !== "auto" && (D.responseType = S)), a2 !== null ? D.send(function(t5, e5) {
                                    return typeof t5 == "string" ? t5 : p.test(e5.get("content-type")) ? JSON.stringify(t5 || {}) : !t5 || typeof t5 != "object" || m(t5) || e5.get("content-type") ? t5 : JSON.stringify(t5);
                                }(a2, j)) : D.send();
                            });
                        }
                    };
                },
                7377: (t2)=>{
                    t2.exports = {
                        STATUSES: {
                            100: "Continue",
                            101: "Switching Protocols",
                            200: "OK",
                            201: "Created",
                            202: "Accepted",
                            203: "Non-Authoritative Information",
                            204: "No Content",
                            205: "Reset Content",
                            206: "Partial Content",
                            207: "Multi Status",
                            208: "Already Reported",
                            226: "IM Used",
                            300: "Multiple Choices",
                            301: "Moved Permanently",
                            302: "Found",
                            303: "See Other",
                            304: "Not Modified",
                            305: "Use Proxy",
                            306: "Switch Proxy",
                            307: "Temporary Redirect",
                            308: "Permanent Redirect",
                            400: "Bad Request",
                            401: "Unauthorized",
                            402: "Payment Required",
                            403: "Forbidden",
                            404: "Not Found",
                            405: "Method Not Allowed",
                            406: "Not Acceptable",
                            407: "Proxy Authentication Required",
                            408: "Request Time-out",
                            409: "Conflict",
                            410: "Gone",
                            411: "Length Required",
                            412: "Precondition Failed",
                            413: "Request Entity Too Large",
                            414: "Request-URI Too Large",
                            415: "Unsupported Media Type",
                            416: "Requested Range not Satisfiable",
                            417: "Expectation Failed",
                            418: 'I"m a teapot',
                            421: "Misdirected Request",
                            422: "Unprocessable Entity",
                            426: "Locked",
                            428: "Failed Dependency",
                            423: "Upgrade Required",
                            424: "Precondition Required",
                            429: "Too Many Requests",
                            431: "Request Header Fields Too Large",
                            451: "Unavailable For Legal Reasons",
                            500: "Internal Server Error",
                            501: "Not Implemented",
                            502: "Bad Gateway",
                            503: "Service Unavailable",
                            504: "Gateway Time-out",
                            505: "HTTP Version not Supported",
                            506: "Variant Also Negotiates",
                            507: "Insufficient Storage",
                            508: "Loop Detected",
                            510: "Not Extended",
                            511: "Network Authentication Required"
                        }
                    };
                },
                3978: (t2)=>{
                    t2.exports = {
                        ERR_ABORTED: 50,
                        ERR_REQUEST_FAILED: 51,
                        ERR_STATUS_INVALID: 52
                    };
                },
                4020: (t2)=>{
                    var e2 = "%[a-f0-9]{2}", r2 = new RegExp(e2, "gi"), n = new RegExp("(" + e2 + ")+", "gi");
                    function i(t3, e3) {
                        try {
                            return decodeURIComponent(t3.join(""));
                        } catch (t4) {}
                        if (t3.length === 1) return t3;
                        e3 = e3 || 1;
                        var r3 = t3.slice(0, e3), n2 = t3.slice(e3);
                        return Array.prototype.concat.call([], i(r3), i(n2));
                    }
                    function o(t3) {
                        try {
                            return decodeURIComponent(t3);
                        } catch (o2) {
                            for(var e3 = t3.match(r2), n2 = 1; n2 < e3.length; n2++)e3 = (t3 = i(e3, n2).join("")).match(r2);
                            return t3;
                        }
                    }
                    t2.exports = function(t3) {
                        if (typeof t3 != "string") throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof t3 + "`");
                        try {
                            return t3 = t3.replace(/\+/g, " "), decodeURIComponent(t3);
                        } catch (e3) {
                            return function(t4) {
                                for(var e4 = {
                                    "%FE%FF": "\uFFFD\uFFFD",
                                    "%FF%FE": "\uFFFD\uFFFD"
                                }, r3 = n.exec(t4); r3;){
                                    try {
                                        e4[r3[0]] = decodeURIComponent(r3[0]);
                                    } catch (t5) {
                                        var i2 = o(r3[0]);
                                        i2 !== r3[0] && (e4[r3[0]] = i2);
                                    }
                                    r3 = n.exec(t4);
                                }
                                e4["%C2"] = "\uFFFD";
                                for(var s = Object.keys(e4), a = 0; a < s.length; a++){
                                    var u = s[a];
                                    t4 = t4.replace(new RegExp(u, "g"), e4[u]);
                                }
                                return t4;
                            }(t3);
                        }
                    };
                },
                6729: (t2)=>{
                    var e2 = Object.prototype.hasOwnProperty, r2 = "~";
                    function n() {}
                    function i(t3, e3, r3) {
                        this.fn = t3, this.context = e3, this.once = r3 || false;
                    }
                    function o(t3, e3, n2, o2, s2) {
                        if (typeof n2 != "function") throw new TypeError("The listener must be a function");
                        var a2 = new i(n2, o2 || t3, s2), u = r2 ? r2 + e3 : e3;
                        return t3._events[u] ? t3._events[u].fn ? t3._events[u] = [
                            t3._events[u],
                            a2
                        ] : t3._events[u].push(a2) : (t3._events[u] = a2, t3._eventsCount++), t3;
                    }
                    function s(t3, e3) {
                        --t3._eventsCount == 0 ? t3._events = new n() : delete t3._events[e3];
                    }
                    function a() {
                        this._events = new n(), this._eventsCount = 0;
                    }
                    Object.create && (n.prototype = Object.create(null), new n().__proto__ || (r2 = false)), a.prototype.eventNames = function() {
                        var t3, n2, i2 = [];
                        if (this._eventsCount === 0) return i2;
                        for(n2 in t3 = this._events)e2.call(t3, n2) && i2.push(r2 ? n2.slice(1) : n2);
                        return Object.getOwnPropertySymbols ? i2.concat(Object.getOwnPropertySymbols(t3)) : i2;
                    }, a.prototype.listeners = function(t3) {
                        var e3 = r2 ? r2 + t3 : t3, n2 = this._events[e3];
                        if (!n2) return [];
                        if (n2.fn) return [
                            n2.fn
                        ];
                        for(var i2 = 0, o2 = n2.length, s2 = new Array(o2); i2 < o2; i2++)s2[i2] = n2[i2].fn;
                        return s2;
                    }, a.prototype.listenerCount = function(t3) {
                        var e3 = r2 ? r2 + t3 : t3, n2 = this._events[e3];
                        return n2 ? n2.fn ? 1 : n2.length : 0;
                    }, a.prototype.emit = function(t3, e3, n2, i2, o2, s2) {
                        var a2 = r2 ? r2 + t3 : t3;
                        if (!this._events[a2]) return false;
                        var u, c, l = this._events[a2], h = arguments.length;
                        if (l.fn) {
                            switch(l.once && this.removeListener(t3, l.fn, void 0, true), h){
                                case 1:
                                    return l.fn.call(l.context), true;
                                case 2:
                                    return l.fn.call(l.context, e3), true;
                                case 3:
                                    return l.fn.call(l.context, e3, n2), true;
                                case 4:
                                    return l.fn.call(l.context, e3, n2, i2), true;
                                case 5:
                                    return l.fn.call(l.context, e3, n2, i2, o2), true;
                                case 6:
                                    return l.fn.call(l.context, e3, n2, i2, o2, s2), true;
                            }
                            for(c = 1, u = new Array(h - 1); c < h; c++)u[c - 1] = arguments[c];
                            l.fn.apply(l.context, u);
                        } else {
                            var f, d = l.length;
                            for(c = 0; c < d; c++)switch(l[c].once && this.removeListener(t3, l[c].fn, void 0, true), h){
                                case 1:
                                    l[c].fn.call(l[c].context);
                                    break;
                                case 2:
                                    l[c].fn.call(l[c].context, e3);
                                    break;
                                case 3:
                                    l[c].fn.call(l[c].context, e3, n2);
                                    break;
                                case 4:
                                    l[c].fn.call(l[c].context, e3, n2, i2);
                                    break;
                                default:
                                    if (!u) for(f = 1, u = new Array(h - 1); f < h; f++)u[f - 1] = arguments[f];
                                    l[c].fn.apply(l[c].context, u);
                            }
                        }
                        return true;
                    }, a.prototype.on = function(t3, e3, r3) {
                        return o(this, t3, e3, r3, false);
                    }, a.prototype.once = function(t3, e3, r3) {
                        return o(this, t3, e3, r3, true);
                    }, a.prototype.removeListener = function(t3, e3, n2, i2) {
                        var o2 = r2 ? r2 + t3 : t3;
                        if (!this._events[o2]) return this;
                        if (!e3) return s(this, o2), this;
                        var a2 = this._events[o2];
                        if (a2.fn) a2.fn !== e3 || i2 && !a2.once || n2 && a2.context !== n2 || s(this, o2);
                        else {
                            for(var u = 0, c = [], l = a2.length; u < l; u++)(a2[u].fn !== e3 || i2 && !a2[u].once || n2 && a2[u].context !== n2) && c.push(a2[u]);
                            c.length ? this._events[o2] = c.length === 1 ? c[0] : c : s(this, o2);
                        }
                        return this;
                    }, a.prototype.removeAllListeners = function(t3) {
                        var e3;
                        return t3 ? (e3 = r2 ? r2 + t3 : t3, this._events[e3] && s(this, e3)) : (this._events = new n(), this._eventsCount = 0), this;
                    }, a.prototype.off = a.prototype.removeListener, a.prototype.addListener = a.prototype.on, a.prefixed = r2, a.EventEmitter = a, t2.exports = a;
                },
                5493: (t2, e2, r2)=>{
                    var n;
                    t2 = r2.nmd(t2), function() {
                        var i;
                        try {
                            i = typeof Intl != "undefined" && Intl.Collator !== void 0 ? Intl.Collator("generic", {
                                sensitivity: "base"
                            }) : null;
                        } catch (t31) {
                            console.log("Collator could not be initialized and wouldn't be used");
                        }
                        var o = r2(5538), s = [], a = [], u = {
                            get: function(t3, e3, r3) {
                                if (r3 && i && r3.useCollator) {
                                    var n2, u2, c, l, h, f, d = t3.length, p = e3.length;
                                    if (d === 0) return p;
                                    if (p === 0) return d;
                                    for(c = 0; c < p; ++c)s[c] = c, a[c] = e3.charCodeAt(c);
                                    for(s[p] = p, c = 0; c < d; ++c){
                                        for(u2 = c + 1, l = 0; l < p; ++l)n2 = u2, f = i.compare(t3.charAt(c), String.fromCharCode(a[l])) === 0, (u2 = s[l] + (f ? 0 : 1)) > (h = n2 + 1) && (u2 = h), u2 > (h = s[l + 1] + 1) && (u2 = h), s[l] = n2;
                                        s[l] = u2;
                                    }
                                    return u2;
                                }
                                return o.distance(t3, e3);
                            }
                        };
                        r2.amdD !== null && r2.amdO ? (n = (function() {
                            return u;
                        }).call(e2, r2, e2, t2)) === void 0 || (t2.exports = n) : t2 !== null && e2 !== void 0 && t2.exports === e2 ? t2.exports = u : typeof self != "undefined" && typeof self.postMessage == "function" && typeof self.importScripts == "function" ? self.Levenshtein = u : typeof window != "undefined" && window !== null && (window.Levenshtein = u);
                    }();
                },
                5538: (t2)=>{
                    const e2 = new Uint32Array(65536), r2 = (t3, r3)=>{
                        if (t3.length > r3.length) {
                            const e3 = r3;
                            r3 = t3, t3 = e3;
                        }
                        return t3.length === 0 ? r3.length : t3.length <= 32 ? ((t4, r4)=>{
                            const n = t4.length, i = r4.length, o = 1 << n - 1;
                            let s = -1, a = 0, u = n, c = n;
                            for(; c--;)e2[t4.charCodeAt(c)] |= 1 << c;
                            for(c = 0; c < i; c++){
                                let t5 = e2[r4.charCodeAt(c)];
                                const n2 = t5 | a;
                                t5 |= (t5 & s) + s ^ s, a |= ~(t5 | s), s &= t5, a & o && u++, s & o && u--, a = a << 1 | 1, s = s << 1 | ~(n2 | a), a &= n2;
                            }
                            for(c = n; c--;)e2[t4.charCodeAt(c)] = 0;
                            return u;
                        })(t3, r3) : ((t4, r4)=>{
                            const n = t4.length, i = r4.length, o = [], s = [], a = Math.ceil(n / 32), u = Math.ceil(i / 32);
                            let c = i;
                            for(let t5 = 0; t5 < a; t5++)s[t5] = -1, o[t5] = 0;
                            let l = 0;
                            for(; l < u - 1; l++){
                                let a2 = 0, u2 = -1;
                                const h2 = 32 * l, f2 = Math.min(32, i) + h2;
                                for(let t5 = h2; t5 < f2; t5++)e2[r4.charCodeAt(t5)] |= 1 << t5;
                                c = i;
                                for(let r5 = 0; r5 < n; r5++){
                                    const n2 = e2[t4.charCodeAt(r5)], i2 = s[r5 / 32 | 0] >>> r5 & 1, c2 = o[r5 / 32 | 0] >>> r5 & 1, l2 = n2 | a2, h3 = ((n2 | c2) & u2) + u2 ^ u2 | n2 | c2;
                                    let f3 = a2 | ~(h3 | u2), d2 = u2 & h3;
                                    f3 >>> 31 ^ i2 && (s[r5 / 32 | 0] ^= 1 << r5), d2 >>> 31 ^ c2 && (o[r5 / 32 | 0] ^= 1 << r5), f3 = f3 << 1 | i2, d2 = d2 << 1 | c2, u2 = d2 | ~(l2 | f3), a2 = f3 & l2;
                                }
                                for(let t53 = h2; t53 < f2; t53++)e2[r4.charCodeAt(t53)] = 0;
                            }
                            let h = 0, f = -1;
                            const d = 32 * l, p = Math.min(32, i - d) + d;
                            for(let t51 = d; t51 < p; t51++)e2[r4.charCodeAt(t51)] |= 1 << t51;
                            c = i;
                            for(let r5 = 0; r5 < n; r5++){
                                const n2 = e2[t4.charCodeAt(r5)], a2 = s[r5 / 32 | 0] >>> r5 & 1, u2 = o[r5 / 32 | 0] >>> r5 & 1, l2 = n2 | h, d2 = ((n2 | u2) & f) + f ^ f | n2 | u2;
                                let p2 = h | ~(d2 | f), g = f & d2;
                                c += p2 >>> i - 1 & 1, c -= g >>> i - 1 & 1, p2 >>> 31 ^ a2 && (s[r5 / 32 | 0] ^= 1 << r5), g >>> 31 ^ u2 && (o[r5 / 32 | 0] ^= 1 << r5), p2 = p2 << 1 | a2, g = g << 1 | u2, f = g | ~(l2 | p2), h = p2 & l2;
                            }
                            for(let t52 = d; t52 < p; t52++)e2[r4.charCodeAt(t52)] = 0;
                            return c;
                        })(t3, r3);
                    };
                    t2.exports = {
                        closest: (t3, e3)=>{
                            let n = 1 / 0, i = 0;
                            for(let o = 0; o < e3.length; o++){
                                const s = r2(t3, e3[o]);
                                s < n && (n = s, i = o);
                            }
                            return e3[i];
                        },
                        distance: r2
                    };
                },
                2806: (t2)=>{
                    t2.exports = function(t3, e2) {
                        for(var r2 = {}, n = Object.keys(t3), i = Array.isArray(e2), o = 0; o < n.length; o++){
                            var s = n[o], a = t3[s];
                            (i ? e2.indexOf(s) !== -1 : e2(s, a, t3)) && (r2[s] = a);
                        }
                        return r2;
                    };
                },
                3361: (t2, e2, r2)=>{
                    !function(t3) {
                        var e3 = {}, n = {};
                        function i(t4) {
                            function r3(e4, n2, i2) {
                                var o = t4.resolve();
                                return e4.forEach(function(s, a) {
                                    o = o.then(function() {
                                        var u;
                                        return (u = i2 ? n2.call(i2, s, a, e4) : o = n2(s, a, e4)) && u.then || (u = t4.resolve(u)), u.then(function(e5) {
                                            return e5 === r3.__BREAK ? t4.reject(new Error("break")) : e5;
                                        });
                                    });
                                }), o.catch(function(t5) {
                                    if (t5.message !== "break") throw t5;
                                }), o;
                            }
                            return t4 = t4.Promise || t4, r3.__BREAK = e3, r3;
                        }
                        if (typeof Promise != "undefined") n.forEachAsync = i(Promise);
                        else try {
                            n.forEachAsync = i(r2(9308));
                        } catch (t4) {
                            console.warn("This version of node doesn't support promises. Please `npm install --save bluebird` in your project.");
                        }
                        t3.forEachAsync = n.forEachAsync.forEachAsync = n.forEachAsync || function() {
                            throw new Error("You did not supply a Promises/A+ implementation. See the warning above.");
                        }, t3.forEachAsync.create = i;
                    }(e2 || window);
                },
                4221: (t2, e2, r2)=>{
                    function n(t3) {
                        return Array.isArray ? Array.isArray(t3) : c(t3) === "[object Array]";
                    }
                    function i(t3) {
                        return typeof t3 == "string";
                    }
                    function o(t3) {
                        return typeof t3 == "number";
                    }
                    function s(t3) {
                        return typeof t3 == "object";
                    }
                    function a(t3) {
                        return t3 != null;
                    }
                    function u(t3) {
                        return !t3.trim().length;
                    }
                    function c(t3) {
                        return t3 == null ? t3 === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(t3);
                    }
                    r2.r(e2), r2.d(e2, {
                        default: ()=>B
                    });
                    const l = Object.prototype.hasOwnProperty;
                    class h {
                        constructor(t3){
                            this._keys = [], this._keyMap = {};
                            let e3 = 0;
                            t3.forEach((t4)=>{
                                let r3 = f(t4);
                                e3 += r3.weight, this._keys.push(r3), this._keyMap[r3.id] = r3, e3 += r3.weight;
                            }), this._keys.forEach((t4)=>{
                                t4.weight /= e3;
                            });
                        }
                        get(t3) {
                            return this._keyMap[t3];
                        }
                        keys() {
                            return this._keys;
                        }
                        toJSON() {
                            return JSON.stringify(this._keys);
                        }
                    }
                    function f(t3) {
                        let e3 = null, r3 = null, o2 = null, s2 = 1;
                        if (i(t3) || n(t3)) o2 = t3, e3 = d(t3), r3 = p(t3);
                        else {
                            if (!l.call(t3, "name")) throw new Error("Missing name property in key");
                            const n2 = t3.name;
                            if (o2 = n2, l.call(t3, "weight") && (s2 = t3.weight, s2 <= 0)) throw new Error(((t4)=>`Property 'weight' in key '${t4}' must be a positive integer`
                            )(n2));
                            e3 = d(n2), r3 = p(n2);
                        }
                        return {
                            path: e3,
                            id: r3,
                            weight: s2,
                            src: o2
                        };
                    }
                    function d(t3) {
                        return n(t3) ? t3 : t3.split(".");
                    }
                    function p(t3) {
                        return n(t3) ? t3.join(".") : t3;
                    }
                    var g = {
                        isCaseSensitive: false,
                        includeScore: false,
                        keys: [],
                        shouldSort: true,
                        sortFn: (t3, e3)=>t3.score === e3.score ? t3.idx < e3.idx ? -1 : 1 : t3.score < e3.score ? -1 : 1
                        ,
                        includeMatches: false,
                        findAllMatches: false,
                        minMatchCharLength: 1,
                        location: 0,
                        threshold: 0.6,
                        distance: 100,
                        useExtendedSearch: false,
                        getFn: function(t3, e3) {
                            let r3 = [], u2 = false;
                            const l2 = (t4, e4, h2)=>{
                                if (a(t4)) if (e4[h2]) {
                                    const f2 = t4[e4[h2]];
                                    if (!a(f2)) return;
                                    if (h2 === e4.length - 1 && (i(f2) || o(f2) || function(t5) {
                                        return t5 === true || t5 === false || function(t6) {
                                            return s(t6) && t6 !== null;
                                        }(t5) && c(t5) == "[object Boolean]";
                                    }(f2))) r3.push(function(t5) {
                                        return t5 == null ? "" : function(t6) {
                                            if (typeof t6 == "string") return t6;
                                            let e5 = t6 + "";
                                            return e5 == "0" && 1 / t6 == -1 / 0 ? "-0" : e5;
                                        }(t5);
                                    }(f2));
                                    else if (n(f2)) {
                                        u2 = true;
                                        for(let t5 = 0, r4 = f2.length; t5 < r4; t5 += 1)l2(f2[t5], e4, h2 + 1);
                                    } else e4.length && l2(f2, e4, h2 + 1);
                                } else r3.push(t4);
                            };
                            return l2(t3, i(e3) ? e3.split(".") : e3, 0), u2 ? r3 : r3[0];
                        },
                        ignoreLocation: false,
                        ignoreFieldNorm: false
                    };
                    const y = /[^ ]+/g;
                    class m {
                        constructor({ getFn: t3 = g.getFn  } = {}){
                            this.norm = function(t4 = 3) {
                                const e3 = new Map(), r3 = Math.pow(10, t4);
                                return {
                                    get (t5) {
                                        const n2 = t5.match(y).length;
                                        if (e3.has(n2)) return e3.get(n2);
                                        const i2 = 1 / Math.sqrt(n2), o2 = parseFloat(Math.round(i2 * r3) / r3);
                                        return e3.set(n2, o2), o2;
                                    },
                                    clear () {
                                        e3.clear();
                                    }
                                };
                            }(3), this.getFn = t3, this.isCreated = false, this.setIndexRecords();
                        }
                        setSources(t3 = []) {
                            this.docs = t3;
                        }
                        setIndexRecords(t3 = []) {
                            this.records = t3;
                        }
                        setKeys(t3 = []) {
                            this.keys = t3, this._keysMap = {}, t3.forEach((t4, e3)=>{
                                this._keysMap[t4.id] = e3;
                            });
                        }
                        create() {
                            !this.isCreated && this.docs.length && (this.isCreated = true, i(this.docs[0]) ? this.docs.forEach((t3, e3)=>{
                                this._addString(t3, e3);
                            }) : this.docs.forEach((t3, e3)=>{
                                this._addObject(t3, e3);
                            }), this.norm.clear());
                        }
                        add(t3) {
                            const e3 = this.size();
                            i(t3) ? this._addString(t3, e3) : this._addObject(t3, e3);
                        }
                        removeAt(t3) {
                            this.records.splice(t3, 1);
                            for(let e3 = t3, r3 = this.size(); e3 < r3; e3 += 1)this.records[e3].i -= 1;
                        }
                        getValueForItemAtKeyId(t3, e3) {
                            return t3[this._keysMap[e3]];
                        }
                        size() {
                            return this.records.length;
                        }
                        _addString(t3, e3) {
                            if (!a(t3) || u(t3)) return;
                            let r3 = {
                                v: t3,
                                i: e3,
                                n: this.norm.get(t3)
                            };
                            this.records.push(r3);
                        }
                        _addObject(t3, e3) {
                            let r3 = {
                                i: e3,
                                $: {}
                            };
                            this.keys.forEach((e4, o2)=>{
                                let s2 = this.getFn(t3, e4.path);
                                if (a(s2)) {
                                    if (n(s2)) {
                                        let t4 = [];
                                        const e5 = [
                                            {
                                                nestedArrIndex: -1,
                                                value: s2
                                            }
                                        ];
                                        for(; e5.length;){
                                            const { nestedArrIndex: r4 , value: o3  } = e5.pop();
                                            if (a(o3)) if (i(o3) && !u(o3)) {
                                                let e6 = {
                                                    v: o3,
                                                    i: r4,
                                                    n: this.norm.get(o3)
                                                };
                                                t4.push(e6);
                                            } else n(o3) && o3.forEach((t5, r5)=>{
                                                e5.push({
                                                    nestedArrIndex: r5,
                                                    value: t5
                                                });
                                            });
                                        }
                                        r3.$[o2] = t4;
                                    } else if (!u(s2)) {
                                        let t4 = {
                                            v: s2,
                                            n: this.norm.get(s2)
                                        };
                                        r3.$[o2] = t4;
                                    }
                                }
                            }), this.records.push(r3);
                        }
                        toJSON() {
                            return {
                                keys: this.keys,
                                records: this.records
                            };
                        }
                    }
                    function v(t3, e3, { getFn: r3 = g.getFn  } = {}) {
                        const n2 = new m({
                            getFn: r3
                        });
                        return n2.setKeys(t3.map(f)), n2.setSources(e3), n2.create(), n2;
                    }
                    function b(t3, { errors: e3 = 0 , currentLocation: r3 = 0 , expectedLocation: n2 = 0 , distance: i2 = g.distance , ignoreLocation: o2 = g.ignoreLocation  } = {}) {
                        const s2 = e3 / t3.length;
                        if (o2) return s2;
                        const a2 = Math.abs(n2 - r3);
                        return i2 ? s2 + a2 / i2 : a2 ? 1 : s2;
                    }
                    const _ = 32;
                    function w(t3) {
                        let e3 = {};
                        for(let r3 = 0, n2 = t3.length; r3 < n2; r3 += 1){
                            const i2 = t3.charAt(r3);
                            e3[i2] = (e3[i2] || 0) | 1 << n2 - r3 - 1;
                        }
                        return e3;
                    }
                    class E {
                        constructor(t3, { location: e3 = g.location , threshold: r3 = g.threshold , distance: n2 = g.distance , includeMatches: i2 = g.includeMatches , findAllMatches: o2 = g.findAllMatches , minMatchCharLength: s2 = g.minMatchCharLength , isCaseSensitive: a2 = g.isCaseSensitive , ignoreLocation: u2 = g.ignoreLocation  } = {}){
                            if (this.options = {
                                location: e3,
                                threshold: r3,
                                distance: n2,
                                includeMatches: i2,
                                findAllMatches: o2,
                                minMatchCharLength: s2,
                                isCaseSensitive: a2,
                                ignoreLocation: u2
                            }, this.pattern = a2 ? t3 : t3.toLowerCase(), this.chunks = [], !this.pattern.length) return;
                            const c2 = (t4, e4)=>{
                                this.chunks.push({
                                    pattern: t4,
                                    alphabet: w(t4),
                                    startIndex: e4
                                });
                            }, l2 = this.pattern.length;
                            if (l2 > 32) {
                                let t4 = 0;
                                const e4 = l2 % 32, r4 = l2 - e4;
                                for(; t4 < r4;)c2(this.pattern.substr(t4, 32), t4), t4 += _;
                                if (e4) {
                                    const t5 = l2 - 32;
                                    c2(this.pattern.substr(t5), t5);
                                }
                            } else c2(this.pattern, 0);
                        }
                        searchIn(t3) {
                            const { isCaseSensitive: e3 , includeMatches: r3  } = this.options;
                            if (e3 || (t3 = t3.toLowerCase()), this.pattern === t3) {
                                let e4 = {
                                    isMatch: true,
                                    score: 0
                                };
                                return r3 && (e4.indices = [
                                    [
                                        0,
                                        t3.length - 1
                                    ]
                                ]), e4;
                            }
                            const { location: n2 , distance: i2 , threshold: o2 , findAllMatches: s2 , minMatchCharLength: a2 , ignoreLocation: u2  } = this.options;
                            let c2 = [], l2 = 0, h2 = false;
                            this.chunks.forEach(({ pattern: e4 , alphabet: f3 , startIndex: d2  })=>{
                                const { isMatch: p2 , score: y2 , indices: m2  } = function(t4, e5, r4, { location: n3 = g.location , distance: i3 = g.distance , threshold: o3 = g.threshold , findAllMatches: s3 = g.findAllMatches , minMatchCharLength: a3 = g.minMatchCharLength , includeMatches: u3 = g.includeMatches , ignoreLocation: c3 = g.ignoreLocation  } = {}) {
                                    if (e5.length > 32) throw new Error("Pattern length exceeds max of 32.");
                                    const l3 = e5.length, h3 = t4.length, f4 = Math.max(0, Math.min(n3, h3));
                                    let d3 = o3, p3 = f4;
                                    const y3 = a3 > 1 || u3, m3 = y3 ? Array(h3) : [];
                                    let v2;
                                    for(; (v2 = t4.indexOf(e5, p3)) > -1;){
                                        let t5 = b(e5, {
                                            currentLocation: v2,
                                            expectedLocation: f4,
                                            distance: i3,
                                            ignoreLocation: c3
                                        });
                                        if (d3 = Math.min(t5, d3), p3 = v2 + l3, y3) {
                                            let t6 = 0;
                                            for(; t6 < l3;)m3[v2 + t6] = 1, t6 += 1;
                                        }
                                    }
                                    p3 = -1;
                                    let w2 = [], E3 = 1, A2 = l3 + h3;
                                    const S2 = 1 << l3 - 1;
                                    for(let n41 = 0; n41 < l3; n41 += 1){
                                        let o4 = 0, a4 = A2;
                                        for(; o4 < a4;)b(e5, {
                                            errors: n41,
                                            currentLocation: f4 + a4,
                                            expectedLocation: f4,
                                            distance: i3,
                                            ignoreLocation: c3
                                        }) <= d3 ? o4 = a4 : A2 = a4, a4 = Math.floor((A2 - o4) / 2 + o4);
                                        A2 = a4;
                                        let u4 = Math.max(1, f4 - a4 + 1), g2 = s3 ? h3 : Math.min(f4 + a4, h3) + l3, v3 = Array(g2 + 2);
                                        v3[g2 + 1] = (1 << n41) - 1;
                                        for(let o5 = g2; o5 >= u4; o5 -= 1){
                                            let s4 = o5 - 1, a5 = r4[t4.charAt(s4)];
                                            if (y3 && (m3[s4] = +!!a5), v3[o5] = (v3[o5 + 1] << 1 | 1) & a5, n41 && (v3[o5] |= (w2[o5 + 1] | w2[o5]) << 1 | 1 | w2[o5 + 1]), v3[o5] & S2 && (E3 = b(e5, {
                                                errors: n41,
                                                currentLocation: s4,
                                                expectedLocation: f4,
                                                distance: i3,
                                                ignoreLocation: c3
                                            }), E3 <= d3)) {
                                                if (d3 = E3, p3 = s4, p3 <= f4) break;
                                                u4 = Math.max(1, 2 * f4 - p3);
                                            }
                                        }
                                        if (b(e5, {
                                            errors: n41 + 1,
                                            currentLocation: f4,
                                            expectedLocation: f4,
                                            distance: i3,
                                            ignoreLocation: c3
                                        }) > d3) break;
                                        w2 = v3;
                                    }
                                    const P2 = {
                                        isMatch: p3 >= 0,
                                        score: Math.max(1e-3, E3)
                                    };
                                    if (y3) {
                                        const t5 = function(t6 = [], e6 = g.minMatchCharLength) {
                                            let r5 = [], n4 = -1, i4 = -1, o4 = 0;
                                            for(let s4 = t6.length; o4 < s4; o4 += 1){
                                                let s5 = t6[o4];
                                                s5 && n4 === -1 ? n4 = o4 : s5 || n4 === -1 || (i4 = o4 - 1, i4 - n4 + 1 >= e6 && r5.push([
                                                    n4,
                                                    i4
                                                ]), n4 = -1);
                                            }
                                            return t6[o4 - 1] && o4 - n4 >= e6 && r5.push([
                                                n4,
                                                o4 - 1
                                            ]), r5;
                                        }(m3, a3);
                                        t5.length ? u3 && (P2.indices = t5) : P2.isMatch = false;
                                    }
                                    return P2;
                                }(t3, e4, f3, {
                                    location: n2 + d2,
                                    distance: i2,
                                    threshold: o2,
                                    findAllMatches: s2,
                                    minMatchCharLength: a2,
                                    includeMatches: r3,
                                    ignoreLocation: u2
                                });
                                p2 && (h2 = true), l2 += y2, p2 && m2 && (c2 = [
                                    ...c2,
                                    ...m2
                                ]);
                            });
                            let f2 = {
                                isMatch: h2,
                                score: h2 ? l2 / this.chunks.length : 1
                            };
                            return h2 && r3 && (f2.indices = c2), f2;
                        }
                    }
                    class A {
                        constructor(t3){
                            this.pattern = t3;
                        }
                        static isMultiMatch(t3) {
                            return S(t3, this.multiRegex);
                        }
                        static isSingleMatch(t3) {
                            return S(t3, this.singleRegex);
                        }
                        search() {}
                    }
                    function S(t3, e3) {
                        const r3 = t3.match(e3);
                        return r3 ? r3[1] : null;
                    }
                    class P extends A {
                        constructor(t3, { location: e3 = g.location , threshold: r3 = g.threshold , distance: n2 = g.distance , includeMatches: i2 = g.includeMatches , findAllMatches: o2 = g.findAllMatches , minMatchCharLength: s2 = g.minMatchCharLength , isCaseSensitive: a2 = g.isCaseSensitive , ignoreLocation: u2 = g.ignoreLocation  } = {}){
                            super(t3), this._bitapSearch = new E(t3, {
                                location: e3,
                                threshold: r3,
                                distance: n2,
                                includeMatches: i2,
                                findAllMatches: o2,
                                minMatchCharLength: s2,
                                isCaseSensitive: a2,
                                ignoreLocation: u2
                            });
                        }
                        static get type() {
                            return "fuzzy";
                        }
                        static get multiRegex() {
                            return /^"(.*)"$/;
                        }
                        static get singleRegex() {
                            return /^(.*)$/;
                        }
                        search(t3) {
                            return this._bitapSearch.searchIn(t3);
                        }
                    }
                    class x extends A {
                        constructor(t3){
                            super(t3);
                        }
                        static get type() {
                            return "include";
                        }
                        static get multiRegex() {
                            return /^'"(.*)"$/;
                        }
                        static get singleRegex() {
                            return /^'(.*)$/;
                        }
                        search(t3) {
                            let e3, r3 = 0;
                            const n2 = [], i2 = this.pattern.length;
                            for(; (e3 = t3.indexOf(this.pattern, r3)) > -1;)r3 = e3 + i2, n2.push([
                                e3,
                                r3 - 1
                            ]);
                            const o2 = !!n2.length;
                            return {
                                isMatch: o2,
                                score: o2 ? 0 : 1,
                                indices: n2
                            };
                        }
                    }
                    const T = [
                        class extends A {
                            constructor(t3){
                                super(t3);
                            }
                            static get type() {
                                return "exact";
                            }
                            static get multiRegex() {
                                return /^="(.*)"$/;
                            }
                            static get singleRegex() {
                                return /^=(.*)$/;
                            }
                            search(t3) {
                                const e3 = t3 === this.pattern;
                                return {
                                    isMatch: e3,
                                    score: e3 ? 0 : 1,
                                    indices: [
                                        0,
                                        this.pattern.length - 1
                                    ]
                                };
                            }
                        },
                        x,
                        class extends A {
                            constructor(t3){
                                super(t3);
                            }
                            static get type() {
                                return "prefix-exact";
                            }
                            static get multiRegex() {
                                return /^\^"(.*)"$/;
                            }
                            static get singleRegex() {
                                return /^\^(.*)$/;
                            }
                            search(t3) {
                                const e3 = t3.startsWith(this.pattern);
                                return {
                                    isMatch: e3,
                                    score: e3 ? 0 : 1,
                                    indices: [
                                        0,
                                        this.pattern.length - 1
                                    ]
                                };
                            }
                        },
                        class extends A {
                            constructor(t3){
                                super(t3);
                            }
                            static get type() {
                                return "inverse-prefix-exact";
                            }
                            static get multiRegex() {
                                return /^!\^"(.*)"$/;
                            }
                            static get singleRegex() {
                                return /^!\^(.*)$/;
                            }
                            search(t3) {
                                const e3 = !t3.startsWith(this.pattern);
                                return {
                                    isMatch: e3,
                                    score: e3 ? 0 : 1,
                                    indices: [
                                        0,
                                        t3.length - 1
                                    ]
                                };
                            }
                        },
                        class extends A {
                            constructor(t3){
                                super(t3);
                            }
                            static get type() {
                                return "inverse-suffix-exact";
                            }
                            static get multiRegex() {
                                return /^!"(.*)"\$$/;
                            }
                            static get singleRegex() {
                                return /^!(.*)\$$/;
                            }
                            search(t3) {
                                const e3 = !t3.endsWith(this.pattern);
                                return {
                                    isMatch: e3,
                                    score: e3 ? 0 : 1,
                                    indices: [
                                        0,
                                        t3.length - 1
                                    ]
                                };
                            }
                        },
                        class extends A {
                            constructor(t3){
                                super(t3);
                            }
                            static get type() {
                                return "suffix-exact";
                            }
                            static get multiRegex() {
                                return /^"(.*)"\$$/;
                            }
                            static get singleRegex() {
                                return /^(.*)\$$/;
                            }
                            search(t3) {
                                const e3 = t3.endsWith(this.pattern);
                                return {
                                    isMatch: e3,
                                    score: e3 ? 0 : 1,
                                    indices: [
                                        t3.length - this.pattern.length,
                                        t3.length - 1
                                    ]
                                };
                            }
                        },
                        class extends A {
                            constructor(t3){
                                super(t3);
                            }
                            static get type() {
                                return "inverse-exact";
                            }
                            static get multiRegex() {
                                return /^!"(.*)"$/;
                            }
                            static get singleRegex() {
                                return /^!(.*)$/;
                            }
                            search(t3) {
                                const e3 = t3.indexOf(this.pattern) === -1;
                                return {
                                    isMatch: e3,
                                    score: e3 ? 0 : 1,
                                    indices: [
                                        0,
                                        t3.length - 1
                                    ]
                                };
                            }
                        },
                        P
                    ], O = T.length, C = / +(?=([^\"]*\"[^\"]*\")*[^\"]*$)/, j = new Set([
                        P.type,
                        x.type
                    ]);
                    const D = [];
                    function I(t3, e3) {
                        for(let r3 = 0, n2 = D.length; r3 < n2; r3 += 1){
                            let n3 = D[r3];
                            if (n3.condition(t3, e3)) return new n3(t3, e3);
                        }
                        return new E(t3, e3);
                    }
                    const k = "$and", F = (t3)=>!(!t3.$and && !t3.$or)
                    , R = (t3)=>({
                            [k]: Object.keys(t3).map((e3)=>({
                                    [e3]: t3[e3]
                                })
                            )
                        })
                    ;
                    function M(t3, e3, { auto: r3 = true  } = {}) {
                        const o2 = (t4)=>{
                            let a2 = Object.keys(t4);
                            const u2 = ((t5)=>!!t5.$path
                            )(t4);
                            if (!u2 && a2.length > 1 && !F(t4)) return o2(R(t4));
                            if (((t5)=>!n(t5) && s(t5) && !F(t5)
                            )(t4)) {
                                const n2 = u2 ? t4.$path : a2[0], o3 = u2 ? t4.$val : t4[n2];
                                if (!i(o3)) throw new Error(((t5)=>`Invalid value for key ${t5}`
                                )(n2));
                                const s2 = {
                                    keyId: p(n2),
                                    pattern: o3
                                };
                                return r3 && (s2.searcher = I(o3, e3)), s2;
                            }
                            let c2 = {
                                children: [],
                                operator: a2[0]
                            };
                            return a2.forEach((e4)=>{
                                const r4 = t4[e4];
                                n(r4) && r4.forEach((t5)=>{
                                    c2.children.push(o2(t5));
                                });
                            }), c2;
                        };
                        return F(t3) || (t3 = R(t3)), o2(t3);
                    }
                    function N(t3, e3) {
                        const r3 = t3.matches;
                        e3.matches = [], a(r3) && r3.forEach((t4)=>{
                            if (!a(t4.indices) || !t4.indices.length) return;
                            const { indices: r4 , value: n2  } = t4;
                            let i2 = {
                                indices: r4,
                                value: n2
                            };
                            t4.key && (i2.key = t4.key.src), t4.idx > -1 && (i2.refIndex = t4.idx), e3.matches.push(i2);
                        });
                    }
                    function L(t3, e3) {
                        e3.score = t3.score;
                    }
                    class U {
                        constructor(t3, e3 = {}, r3){
                            this.options = {
                                ...g,
                                ...e3
                            }, this.options.useExtendedSearch, this._keyStore = new h(this.options.keys), this.setCollection(t3, r3);
                        }
                        setCollection(t3, e3) {
                            if (this._docs = t3, e3 && !(e3 instanceof m)) throw new Error("Incorrect 'index' type");
                            this._myIndex = e3 || v(this.options.keys, this._docs, {
                                getFn: this.options.getFn
                            });
                        }
                        add(t3) {
                            a(t3) && (this._docs.push(t3), this._myIndex.add(t3));
                        }
                        remove(t3 = ()=>false
                        ) {
                            const e3 = [];
                            for(let r3 = 0, n2 = this._docs.length; r3 < n2; r3 += 1){
                                const i2 = this._docs[r3];
                                t3(i2, r3) && (this.removeAt(r3), r3 -= 1, n2 -= 1, e3.push(i2));
                            }
                            return e3;
                        }
                        removeAt(t3) {
                            this._docs.splice(t3, 1), this._myIndex.removeAt(t3);
                        }
                        getIndex() {
                            return this._myIndex;
                        }
                        search(t3, { limit: e3 = -1  } = {}) {
                            const { includeMatches: r3 , includeScore: n2 , shouldSort: s2 , sortFn: a2 , ignoreFieldNorm: u2  } = this.options;
                            let c2 = i(t3) ? i(this._docs[0]) ? this._searchStringList(t3) : this._searchObjectList(t3) : this._searchLogical(t3);
                            return function(t4, { ignoreFieldNorm: e4 = g.ignoreFieldNorm  }) {
                                t4.forEach((t5)=>{
                                    let r4 = 1;
                                    t5.matches.forEach(({ key: t6 , norm: n3 , score: i2  })=>{
                                        const o2 = t6 ? t6.weight : null;
                                        r4 *= Math.pow(i2 === 0 && o2 ? Number.EPSILON : i2, (o2 || 1) * (e4 ? 1 : n3));
                                    }), t5.score = r4;
                                });
                            }(c2, {
                                ignoreFieldNorm: u2
                            }), s2 && c2.sort(a2), o(e3) && e3 > -1 && (c2 = c2.slice(0, e3)), function(t4, e4, { includeMatches: r4 = g.includeMatches , includeScore: n3 = g.includeScore  } = {}) {
                                const i2 = [];
                                return r4 && i2.push(N), n3 && i2.push(L), t4.map((t5)=>{
                                    const { idx: r5  } = t5, n4 = {
                                        item: e4[r5],
                                        refIndex: r5
                                    };
                                    return i2.length && i2.forEach((e5)=>{
                                        e5(t5, n4);
                                    }), n4;
                                });
                            }(c2, this._docs, {
                                includeMatches: r3,
                                includeScore: n2
                            });
                        }
                        _searchStringList(t3) {
                            const e3 = I(t3, this.options), { records: r3  } = this._myIndex, n2 = [];
                            return r3.forEach(({ v: t4 , i: r4 , n: i2  })=>{
                                if (!a(t4)) return;
                                const { isMatch: o2 , score: s2 , indices: u2  } = e3.searchIn(t4);
                                o2 && n2.push({
                                    item: t4,
                                    idx: r4,
                                    matches: [
                                        {
                                            score: s2,
                                            value: t4,
                                            norm: i2,
                                            indices: u2
                                        }
                                    ]
                                });
                            }), n2;
                        }
                        _searchLogical(t3) {
                            const e3 = M(t3, this.options), r3 = (t4, e4, n3)=>{
                                if (!t4.children) {
                                    const { keyId: r4 , searcher: i3  } = t4, o3 = this._findMatches({
                                        key: this._keyStore.get(r4),
                                        value: this._myIndex.getValueForItemAtKeyId(e4, r4),
                                        searcher: i3
                                    });
                                    return o3 && o3.length ? [
                                        {
                                            idx: n3,
                                            item: e4,
                                            matches: o3
                                        }
                                    ] : [];
                                }
                                switch(t4.operator){
                                    case k:
                                        {
                                            const i3 = [];
                                            for(let o3 = 0, s2 = t4.children.length; o3 < s2; o3 += 1){
                                                const s3 = t4.children[o3], a2 = r3(s3, e4, n3);
                                                if (!a2.length) return [];
                                                i3.push(...a2);
                                            }
                                            return i3;
                                        }
                                    case "$or":
                                        {
                                            const i3 = [];
                                            for(let o3 = 0, s2 = t4.children.length; o3 < s2; o3 += 1){
                                                const s3 = t4.children[o3], a2 = r3(s3, e4, n3);
                                                if (a2.length) {
                                                    i3.push(...a2);
                                                    break;
                                                }
                                            }
                                            return i3;
                                        }
                                }
                            }, n2 = this._myIndex.records, i2 = {}, o2 = [];
                            return n2.forEach(({ $: t4 , i: n3  })=>{
                                if (a(t4)) {
                                    let s2 = r3(e3, t4, n3);
                                    s2.length && (i2[n3] || (i2[n3] = {
                                        idx: n3,
                                        item: t4,
                                        matches: []
                                    }, o2.push(i2[n3])), s2.forEach(({ matches: t5  })=>{
                                        i2[n3].matches.push(...t5);
                                    }));
                                }
                            }), o2;
                        }
                        _searchObjectList(t3) {
                            const e3 = I(t3, this.options), { keys: r3 , records: n2  } = this._myIndex, i2 = [];
                            return n2.forEach(({ $: t4 , i: n3  })=>{
                                if (!a(t4)) return;
                                let o2 = [];
                                r3.forEach((r4, n4)=>{
                                    o2.push(...this._findMatches({
                                        key: r4,
                                        value: t4[n4],
                                        searcher: e3
                                    }));
                                }), o2.length && i2.push({
                                    idx: n3,
                                    item: t4,
                                    matches: o2
                                });
                            }), i2;
                        }
                        _findMatches({ key: t3 , value: e3 , searcher: r3  }) {
                            if (!a(e3)) return [];
                            let i2 = [];
                            if (n(e3)) e3.forEach(({ v: e4 , i: n2 , n: o2  })=>{
                                if (!a(e4)) return;
                                const { isMatch: s2 , score: u2 , indices: c2  } = r3.searchIn(e4);
                                s2 && i2.push({
                                    score: u2,
                                    key: t3,
                                    value: e4,
                                    idx: n2,
                                    norm: o2,
                                    indices: c2
                                });
                            });
                            else {
                                const { v: n2 , n: o2  } = e3, { isMatch: s2 , score: a2 , indices: u2  } = r3.searchIn(n2);
                                s2 && i2.push({
                                    score: a2,
                                    key: t3,
                                    value: n2,
                                    norm: o2,
                                    indices: u2
                                });
                            }
                            return i2;
                        }
                    }
                    U.version = "6.4.6", U.createIndex = v, U.parseIndex = function(t3, { getFn: e3 = g.getFn  } = {}) {
                        const { keys: r3 , records: n2  } = t3, i2 = new m({
                            getFn: e3
                        });
                        return i2.setKeys(r3), i2.setIndexRecords(n2), i2;
                    }, U.config = g, U.parseQuery = M, function(...t3) {
                        D.push(...t3);
                    }(class {
                        constructor(t3, { isCaseSensitive: e3 = g.isCaseSensitive , includeMatches: r3 = g.includeMatches , minMatchCharLength: n2 = g.minMatchCharLength , ignoreLocation: i2 = g.ignoreLocation , findAllMatches: o2 = g.findAllMatches , location: s2 = g.location , threshold: a2 = g.threshold , distance: u2 = g.distance  } = {}){
                            this.query = null, this.options = {
                                isCaseSensitive: e3,
                                includeMatches: r3,
                                minMatchCharLength: n2,
                                findAllMatches: o2,
                                ignoreLocation: i2,
                                location: s2,
                                threshold: a2,
                                distance: u2
                            }, this.pattern = e3 ? t3 : t3.toLowerCase(), this.query = function(t4, e4 = {}) {
                                return t4.split("|").map((t5)=>{
                                    let r4 = t5.trim().split(C).filter((t6)=>t6 && !!t6.trim()
                                    ), n3 = [];
                                    for(let t61 = 0, i3 = r4.length; t61 < i3; t61 += 1){
                                        const i4 = r4[t61];
                                        let o3 = false, s3 = -1;
                                        for(; !o3 && ++s3 < O;){
                                            const t7 = T[s3];
                                            let r5 = t7.isMultiMatch(i4);
                                            r5 && (n3.push(new t7(r5, e4)), o3 = true);
                                        }
                                        if (!o3) for(s3 = -1; ++s3 < O;){
                                            const t7 = T[s3];
                                            let r5 = t7.isSingleMatch(i4);
                                            if (r5) {
                                                n3.push(new t7(r5, e4));
                                                break;
                                            }
                                        }
                                    }
                                    return n3;
                                });
                            }(this.pattern, this.options);
                        }
                        static condition(t3, e3) {
                            return e3.useExtendedSearch;
                        }
                        searchIn(t3) {
                            const e3 = this.query;
                            if (!e3) return {
                                isMatch: false,
                                score: 1
                            };
                            const { includeMatches: r3 , isCaseSensitive: n2  } = this.options;
                            t3 = n2 ? t3 : t3.toLowerCase();
                            let i2 = 0, o2 = [], s2 = 0;
                            for(let n3 = 0, a2 = e3.length; n3 < a2; n3 += 1){
                                const a3 = e3[n3];
                                o2.length = 0, i2 = 0;
                                for(let e4 = 0, n4 = a3.length; e4 < n4; e4 += 1){
                                    const n5 = a3[e4], { isMatch: u2 , indices: c2 , score: l2  } = n5.search(t3);
                                    if (!u2) {
                                        s2 = 0, i2 = 0, o2.length = 0;
                                        break;
                                    }
                                    if (i2 += 1, s2 += l2, r3) {
                                        const t4 = n5.constructor.type;
                                        j.has(t4) ? o2 = [
                                            ...o2,
                                            ...c2
                                        ] : o2.push(c2);
                                    }
                                }
                                if (i2) {
                                    let t4 = {
                                        isMatch: true,
                                        score: s2 / i2
                                    };
                                    return r3 && (t4.indices = o2), t4;
                                }
                            }
                            return {
                                isMatch: false,
                                score: 1
                            };
                        }
                    });
                    const B = U;
                },
                4150: (t2, e2)=>{
                    function r2(t3) {
                        for(var e3 = {}, r3 = {}, n = 0; n < t3.length; n += 2){
                            var i = t3[n], o = i.toLowerCase(), s = e3[o], a = t3[n + 1];
                            r3.hasOwnProperty(s) ? (i !== s && (r3[i] = r3[s], delete r3[s]), typeof r3[i] == "string" ? r3[i] = [
                                r3[i],
                                a
                            ] : r3[i].push(a)) : r3[i] = a, e3[o] = i;
                        }
                        return r3;
                    }
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.parse = function(t3) {
                        for(var e3 = [], n = t3.replace(/\r?\n$/, "").split(/\r?\n/), i = 0; i < n.length; i++){
                            var o = n[i], s = o.indexOf(":"), a = o.substr(0, s).trim(), u = o.substr(s + 1).trim();
                            e3.push(a, u);
                        }
                        return r2(e3);
                    }, e2.http = function(t3) {
                        if (t3.rawHeaders) return r2(t3.rawHeaders);
                        var e3 = {};
                        return Object.keys(t3.headers).forEach(function(r3) {
                            var n = t3.headers[r3];
                            n.length === 1 ? e3[r3] = n[0] : e3[r3] = n;
                        }), e3;
                    }, e2.array = r2;
                },
                8908: (t2, e2, r2)=>{
                    var n;
                    n = typeof window != "undefined" ? window : r2.g !== void 0 ? r2.g : typeof self != "undefined" ? self : {}, t2.exports = n;
                },
                3715: (t2, e2, r2)=>{
                    var n = e2;
                    n.utils = r2(6436), n.common = r2(5772), n.sha = r2(9041), n.ripemd = r2(2949), n.hmac = r2(2344), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
                },
                5772: (t2, e2, r2)=>{
                    var n = r2(6436), i = r2(9746);
                    function o() {
                        this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
                    }
                    e2.BlockHash = o, o.prototype.update = function(t3, e3) {
                        if (t3 = n.toArray(t3, e3), this.pending ? this.pending = this.pending.concat(t3) : this.pending = t3, this.pendingTotal += t3.length, this.pending.length >= this._delta8) {
                            var r3 = (t3 = this.pending).length % this._delta8;
                            this.pending = t3.slice(t3.length - r3, t3.length), this.pending.length === 0 && (this.pending = null), t3 = n.join32(t3, 0, t3.length - r3, this.endian);
                            for(var i2 = 0; i2 < t3.length; i2 += this._delta32)this._update(t3, i2, i2 + this._delta32);
                        }
                        return this;
                    }, o.prototype.digest = function(t3) {
                        return this.update(this._pad()), i(this.pending === null), this._digest(t3);
                    }, o.prototype._pad = function() {
                        var t3 = this.pendingTotal, e3 = this._delta8, r3 = e3 - (t3 + this.padLength) % e3, n2 = new Array(r3 + this.padLength);
                        n2[0] = 128;
                        for(var i2 = 1; i2 < r3; i2++)n2[i2] = 0;
                        if (t3 <<= 3, this.endian === "big") {
                            for(var o2 = 8; o2 < this.padLength; o2++)n2[i2++] = 0;
                            n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = t3 >>> 24 & 255, n2[i2++] = t3 >>> 16 & 255, n2[i2++] = t3 >>> 8 & 255, n2[i2++] = 255 & t3;
                        } else for(n2[i2++] = 255 & t3, n2[i2++] = t3 >>> 8 & 255, n2[i2++] = t3 >>> 16 & 255, n2[i2++] = t3 >>> 24 & 255, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, o2 = 8; o2 < this.padLength; o2++)n2[i2++] = 0;
                        return n2;
                    };
                },
                2344: (t2, e2, r2)=>{
                    var n = r2(6436), i = r2(9746);
                    function o(t3, e3, r3) {
                        if (!(this instanceof o)) return new o(t3, e3, r3);
                        this.Hash = t3, this.blockSize = t3.blockSize / 8, this.outSize = t3.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(e3, r3));
                    }
                    t2.exports = o, o.prototype._init = function(t3) {
                        t3.length > this.blockSize && (t3 = new this.Hash().update(t3).digest()), i(t3.length <= this.blockSize);
                        for(var e3 = t3.length; e3 < this.blockSize; e3++)t3.push(0);
                        for(e3 = 0; e3 < t3.length; e3++)t3[e3] ^= 54;
                        for(this.inner = new this.Hash().update(t3), e3 = 0; e3 < t3.length; e3++)t3[e3] ^= 106;
                        this.outer = new this.Hash().update(t3);
                    }, o.prototype.update = function(t3, e3) {
                        return this.inner.update(t3, e3), this;
                    }, o.prototype.digest = function(t3) {
                        return this.outer.update(this.inner.digest()), this.outer.digest(t3);
                    };
                },
                2949: (t2, e2, r2)=>{
                    var n = r2(6436), i = r2(5772), o = n.rotl32, s = n.sum32, a = n.sum32_3, u = n.sum32_4, c = i.BlockHash;
                    function l() {
                        if (!(this instanceof l)) return new l();
                        c.call(this), this.h = [
                            1732584193,
                            4023233417,
                            2562383102,
                            271733878,
                            3285377520
                        ], this.endian = "little";
                    }
                    function h(t3, e3, r3, n2) {
                        return t3 <= 15 ? e3 ^ r3 ^ n2 : t3 <= 31 ? e3 & r3 | ~e3 & n2 : t3 <= 47 ? (e3 | ~r3) ^ n2 : t3 <= 63 ? e3 & n2 | r3 & ~n2 : e3 ^ (r3 | ~n2);
                    }
                    function f(t3) {
                        return t3 <= 15 ? 0 : t3 <= 31 ? 1518500249 : t3 <= 47 ? 1859775393 : t3 <= 63 ? 2400959708 : 2840853838;
                    }
                    function d(t3) {
                        return t3 <= 15 ? 1352829926 : t3 <= 31 ? 1548603684 : t3 <= 47 ? 1836072691 : t3 <= 63 ? 2053994217 : 0;
                    }
                    n.inherits(l, c), e2.ripemd160 = l, l.blockSize = 512, l.outSize = 160, l.hmacStrength = 192, l.padLength = 64, l.prototype._update = function(t3, e3) {
                        for(var r3 = this.h[0], n2 = this.h[1], i2 = this.h[2], c2 = this.h[3], l2 = this.h[4], v = r3, b = n2, _ = i2, w = c2, E = l2, A = 0; A < 80; A++){
                            var S = s(o(u(r3, h(A, n2, i2, c2), t3[p[A] + e3], f(A)), y[A]), l2);
                            r3 = l2, l2 = c2, c2 = o(i2, 10), i2 = n2, n2 = S, S = s(o(u(v, h(79 - A, b, _, w), t3[g[A] + e3], d(A)), m[A]), E), v = E, E = w, w = o(_, 10), _ = b, b = S;
                        }
                        S = a(this.h[1], i2, w), this.h[1] = a(this.h[2], c2, E), this.h[2] = a(this.h[3], l2, v), this.h[3] = a(this.h[4], r3, b), this.h[4] = a(this.h[0], n2, _), this.h[0] = S;
                    }, l.prototype._digest = function(t3) {
                        return t3 === "hex" ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
                    };
                    var p = [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        7,
                        4,
                        13,
                        1,
                        10,
                        6,
                        15,
                        3,
                        12,
                        0,
                        9,
                        5,
                        2,
                        14,
                        11,
                        8,
                        3,
                        10,
                        14,
                        4,
                        9,
                        15,
                        8,
                        1,
                        2,
                        7,
                        0,
                        6,
                        13,
                        11,
                        5,
                        12,
                        1,
                        9,
                        11,
                        10,
                        0,
                        8,
                        12,
                        4,
                        13,
                        3,
                        7,
                        15,
                        14,
                        5,
                        6,
                        2,
                        4,
                        0,
                        5,
                        9,
                        7,
                        12,
                        2,
                        10,
                        14,
                        1,
                        3,
                        8,
                        11,
                        6,
                        15,
                        13
                    ], g = [
                        5,
                        14,
                        7,
                        0,
                        9,
                        2,
                        11,
                        4,
                        13,
                        6,
                        15,
                        8,
                        1,
                        10,
                        3,
                        12,
                        6,
                        11,
                        3,
                        7,
                        0,
                        13,
                        5,
                        10,
                        14,
                        15,
                        8,
                        12,
                        4,
                        9,
                        1,
                        2,
                        15,
                        5,
                        1,
                        3,
                        7,
                        14,
                        6,
                        9,
                        11,
                        8,
                        12,
                        2,
                        10,
                        0,
                        4,
                        13,
                        8,
                        6,
                        4,
                        1,
                        3,
                        11,
                        15,
                        0,
                        5,
                        12,
                        2,
                        13,
                        9,
                        7,
                        10,
                        14,
                        12,
                        15,
                        10,
                        4,
                        1,
                        5,
                        8,
                        7,
                        6,
                        2,
                        13,
                        14,
                        0,
                        3,
                        9,
                        11
                    ], y = [
                        11,
                        14,
                        15,
                        12,
                        5,
                        8,
                        7,
                        9,
                        11,
                        13,
                        14,
                        15,
                        6,
                        7,
                        9,
                        8,
                        7,
                        6,
                        8,
                        13,
                        11,
                        9,
                        7,
                        15,
                        7,
                        12,
                        15,
                        9,
                        11,
                        7,
                        13,
                        12,
                        11,
                        13,
                        6,
                        7,
                        14,
                        9,
                        13,
                        15,
                        14,
                        8,
                        13,
                        6,
                        5,
                        12,
                        7,
                        5,
                        11,
                        12,
                        14,
                        15,
                        14,
                        15,
                        9,
                        8,
                        9,
                        14,
                        5,
                        6,
                        8,
                        6,
                        5,
                        12,
                        9,
                        15,
                        5,
                        11,
                        6,
                        8,
                        13,
                        12,
                        5,
                        12,
                        13,
                        14,
                        11,
                        8,
                        5,
                        6
                    ], m = [
                        8,
                        9,
                        9,
                        11,
                        13,
                        15,
                        15,
                        5,
                        7,
                        7,
                        8,
                        11,
                        14,
                        14,
                        12,
                        6,
                        9,
                        13,
                        15,
                        7,
                        12,
                        8,
                        9,
                        11,
                        7,
                        7,
                        12,
                        7,
                        6,
                        15,
                        13,
                        11,
                        9,
                        7,
                        15,
                        11,
                        8,
                        6,
                        6,
                        14,
                        12,
                        13,
                        5,
                        14,
                        13,
                        13,
                        7,
                        5,
                        15,
                        5,
                        8,
                        11,
                        14,
                        14,
                        6,
                        14,
                        6,
                        9,
                        12,
                        9,
                        12,
                        5,
                        15,
                        8,
                        8,
                        5,
                        12,
                        9,
                        12,
                        5,
                        14,
                        6,
                        8,
                        13,
                        6,
                        5,
                        15,
                        13,
                        11,
                        11
                    ];
                },
                9041: (t2, e2, r2)=>{
                    e2.sha1 = r2(4761), e2.sha224 = r2(799), e2.sha256 = r2(9344), e2.sha384 = r2(772), e2.sha512 = r2(5900);
                },
                4761: (t2, e2, r2)=>{
                    var n = r2(6436), i = r2(5772), o = r2(7038), s = n.rotl32, a = n.sum32, u = n.sum32_5, c = o.ft_1, l = i.BlockHash, h = [
                        1518500249,
                        1859775393,
                        2400959708,
                        3395469782
                    ];
                    function f() {
                        if (!(this instanceof f)) return new f();
                        l.call(this), this.h = [
                            1732584193,
                            4023233417,
                            2562383102,
                            271733878,
                            3285377520
                        ], this.W = new Array(80);
                    }
                    n.inherits(f, l), t2.exports = f, f.blockSize = 512, f.outSize = 160, f.hmacStrength = 80, f.padLength = 64, f.prototype._update = function(t3, e3) {
                        for(var r3 = this.W, n2 = 0; n2 < 16; n2++)r3[n2] = t3[e3 + n2];
                        for(; n2 < r3.length; n2++)r3[n2] = s(r3[n2 - 3] ^ r3[n2 - 8] ^ r3[n2 - 14] ^ r3[n2 - 16], 1);
                        var i2 = this.h[0], o2 = this.h[1], l2 = this.h[2], f2 = this.h[3], d = this.h[4];
                        for(n2 = 0; n2 < r3.length; n2++){
                            var p = ~~(n2 / 20), g = u(s(i2, 5), c(p, o2, l2, f2), d, r3[n2], h[p]);
                            d = f2, f2 = l2, l2 = s(o2, 30), o2 = i2, i2 = g;
                        }
                        this.h[0] = a(this.h[0], i2), this.h[1] = a(this.h[1], o2), this.h[2] = a(this.h[2], l2), this.h[3] = a(this.h[3], f2), this.h[4] = a(this.h[4], d);
                    }, f.prototype._digest = function(t3) {
                        return t3 === "hex" ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                    };
                },
                799: (t2, e2, r2)=>{
                    var n = r2(6436), i = r2(9344);
                    function o() {
                        if (!(this instanceof o)) return new o();
                        i.call(this), this.h = [
                            3238371032,
                            914150663,
                            812702999,
                            4144912697,
                            4290775857,
                            1750603025,
                            1694076839,
                            3204075428
                        ];
                    }
                    n.inherits(o, i), t2.exports = o, o.blockSize = 512, o.outSize = 224, o.hmacStrength = 192, o.padLength = 64, o.prototype._digest = function(t3) {
                        return t3 === "hex" ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
                    };
                },
                9344: (t2, e2, r2)=>{
                    var n = r2(6436), i = r2(5772), o = r2(7038), s = r2(9746), a = n.sum32, u = n.sum32_4, c = n.sum32_5, l = o.ch32, h = o.maj32, f = o.s0_256, d = o.s1_256, p = o.g0_256, g = o.g1_256, y = i.BlockHash, m = [
                        1116352408,
                        1899447441,
                        3049323471,
                        3921009573,
                        961987163,
                        1508970993,
                        2453635748,
                        2870763221,
                        3624381080,
                        310598401,
                        607225278,
                        1426881987,
                        1925078388,
                        2162078206,
                        2614888103,
                        3248222580,
                        3835390401,
                        4022224774,
                        264347078,
                        604807628,
                        770255983,
                        1249150122,
                        1555081692,
                        1996064986,
                        2554220882,
                        2821834349,
                        2952996808,
                        3210313671,
                        3336571891,
                        3584528711,
                        113926993,
                        338241895,
                        666307205,
                        773529912,
                        1294757372,
                        1396182291,
                        1695183700,
                        1986661051,
                        2177026350,
                        2456956037,
                        2730485921,
                        2820302411,
                        3259730800,
                        3345764771,
                        3516065817,
                        3600352804,
                        4094571909,
                        275423344,
                        430227734,
                        506948616,
                        659060556,
                        883997877,
                        958139571,
                        1322822218,
                        1537002063,
                        1747873779,
                        1955562222,
                        2024104815,
                        2227730452,
                        2361852424,
                        2428436474,
                        2756734187,
                        3204031479,
                        3329325298
                    ];
                    function v() {
                        if (!(this instanceof v)) return new v();
                        y.call(this), this.h = [
                            1779033703,
                            3144134277,
                            1013904242,
                            2773480762,
                            1359893119,
                            2600822924,
                            528734635,
                            1541459225
                        ], this.k = m, this.W = new Array(64);
                    }
                    n.inherits(v, y), t2.exports = v, v.blockSize = 512, v.outSize = 256, v.hmacStrength = 192, v.padLength = 64, v.prototype._update = function(t3, e3) {
                        for(var r3 = this.W, n2 = 0; n2 < 16; n2++)r3[n2] = t3[e3 + n2];
                        for(; n2 < r3.length; n2++)r3[n2] = u(g(r3[n2 - 2]), r3[n2 - 7], p(r3[n2 - 15]), r3[n2 - 16]);
                        var i2 = this.h[0], o2 = this.h[1], y2 = this.h[2], m2 = this.h[3], v2 = this.h[4], b = this.h[5], _ = this.h[6], w = this.h[7];
                        for(s(this.k.length === r3.length), n2 = 0; n2 < r3.length; n2++){
                            var E = c(w, d(v2), l(v2, b, _), this.k[n2], r3[n2]), A = a(f(i2), h(i2, o2, y2));
                            w = _, _ = b, b = v2, v2 = a(m2, E), m2 = y2, y2 = o2, o2 = i2, i2 = a(E, A);
                        }
                        this.h[0] = a(this.h[0], i2), this.h[1] = a(this.h[1], o2), this.h[2] = a(this.h[2], y2), this.h[3] = a(this.h[3], m2), this.h[4] = a(this.h[4], v2), this.h[5] = a(this.h[5], b), this.h[6] = a(this.h[6], _), this.h[7] = a(this.h[7], w);
                    }, v.prototype._digest = function(t3) {
                        return t3 === "hex" ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                    };
                },
                772: (t2, e2, r2)=>{
                    var n = r2(6436), i = r2(5900);
                    function o() {
                        if (!(this instanceof o)) return new o();
                        i.call(this), this.h = [
                            3418070365,
                            3238371032,
                            1654270250,
                            914150663,
                            2438529370,
                            812702999,
                            355462360,
                            4144912697,
                            1731405415,
                            4290775857,
                            2394180231,
                            1750603025,
                            3675008525,
                            1694076839,
                            1203062813,
                            3204075428
                        ];
                    }
                    n.inherits(o, i), t2.exports = o, o.blockSize = 1024, o.outSize = 384, o.hmacStrength = 192, o.padLength = 128, o.prototype._digest = function(t3) {
                        return t3 === "hex" ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
                    };
                },
                5900: (t2, e2, r2)=>{
                    var n = r2(6436), i = r2(5772), o = r2(9746), s = n.rotr64_hi, a = n.rotr64_lo, u = n.shr64_hi, c = n.shr64_lo, l = n.sum64, h = n.sum64_hi, f = n.sum64_lo, d = n.sum64_4_hi, p = n.sum64_4_lo, g = n.sum64_5_hi, y = n.sum64_5_lo, m = i.BlockHash, v = [
                        1116352408,
                        3609767458,
                        1899447441,
                        602891725,
                        3049323471,
                        3964484399,
                        3921009573,
                        2173295548,
                        961987163,
                        4081628472,
                        1508970993,
                        3053834265,
                        2453635748,
                        2937671579,
                        2870763221,
                        3664609560,
                        3624381080,
                        2734883394,
                        310598401,
                        1164996542,
                        607225278,
                        1323610764,
                        1426881987,
                        3590304994,
                        1925078388,
                        4068182383,
                        2162078206,
                        991336113,
                        2614888103,
                        633803317,
                        3248222580,
                        3479774868,
                        3835390401,
                        2666613458,
                        4022224774,
                        944711139,
                        264347078,
                        2341262773,
                        604807628,
                        2007800933,
                        770255983,
                        1495990901,
                        1249150122,
                        1856431235,
                        1555081692,
                        3175218132,
                        1996064986,
                        2198950837,
                        2554220882,
                        3999719339,
                        2821834349,
                        766784016,
                        2952996808,
                        2566594879,
                        3210313671,
                        3203337956,
                        3336571891,
                        1034457026,
                        3584528711,
                        2466948901,
                        113926993,
                        3758326383,
                        338241895,
                        168717936,
                        666307205,
                        1188179964,
                        773529912,
                        1546045734,
                        1294757372,
                        1522805485,
                        1396182291,
                        2643833823,
                        1695183700,
                        2343527390,
                        1986661051,
                        1014477480,
                        2177026350,
                        1206759142,
                        2456956037,
                        344077627,
                        2730485921,
                        1290863460,
                        2820302411,
                        3158454273,
                        3259730800,
                        3505952657,
                        3345764771,
                        106217008,
                        3516065817,
                        3606008344,
                        3600352804,
                        1432725776,
                        4094571909,
                        1467031594,
                        275423344,
                        851169720,
                        430227734,
                        3100823752,
                        506948616,
                        1363258195,
                        659060556,
                        3750685593,
                        883997877,
                        3785050280,
                        958139571,
                        3318307427,
                        1322822218,
                        3812723403,
                        1537002063,
                        2003034995,
                        1747873779,
                        3602036899,
                        1955562222,
                        1575990012,
                        2024104815,
                        1125592928,
                        2227730452,
                        2716904306,
                        2361852424,
                        442776044,
                        2428436474,
                        593698344,
                        2756734187,
                        3733110249,
                        3204031479,
                        2999351573,
                        3329325298,
                        3815920427,
                        3391569614,
                        3928383900,
                        3515267271,
                        566280711,
                        3940187606,
                        3454069534,
                        4118630271,
                        4000239992,
                        116418474,
                        1914138554,
                        174292421,
                        2731055270,
                        289380356,
                        3203993006,
                        460393269,
                        320620315,
                        685471733,
                        587496836,
                        852142971,
                        1086792851,
                        1017036298,
                        365543100,
                        1126000580,
                        2618297676,
                        1288033470,
                        3409855158,
                        1501505948,
                        4234509866,
                        1607167915,
                        987167468,
                        1816402316,
                        1246189591
                    ];
                    function b() {
                        if (!(this instanceof b)) return new b();
                        m.call(this), this.h = [
                            1779033703,
                            4089235720,
                            3144134277,
                            2227873595,
                            1013904242,
                            4271175723,
                            2773480762,
                            1595750129,
                            1359893119,
                            2917565137,
                            2600822924,
                            725511199,
                            528734635,
                            4215389547,
                            1541459225,
                            327033209
                        ], this.k = v, this.W = new Array(160);
                    }
                    function _(t3, e3, r3, n2, i2) {
                        var o2 = t3 & r3 ^ ~t3 & i2;
                        return o2 < 0 && (o2 += 4294967296), o2;
                    }
                    function w(t3, e3, r3, n2, i2, o2) {
                        var s2 = e3 & n2 ^ ~e3 & o2;
                        return s2 < 0 && (s2 += 4294967296), s2;
                    }
                    function E(t3, e3, r3, n2, i2) {
                        var o2 = t3 & r3 ^ t3 & i2 ^ r3 & i2;
                        return o2 < 0 && (o2 += 4294967296), o2;
                    }
                    function A(t3, e3, r3, n2, i2, o2) {
                        var s2 = e3 & n2 ^ e3 & o2 ^ n2 & o2;
                        return s2 < 0 && (s2 += 4294967296), s2;
                    }
                    function S(t3, e3) {
                        var r3 = s(t3, e3, 28) ^ s(e3, t3, 2) ^ s(e3, t3, 7);
                        return r3 < 0 && (r3 += 4294967296), r3;
                    }
                    function P(t3, e3) {
                        var r3 = a(t3, e3, 28) ^ a(e3, t3, 2) ^ a(e3, t3, 7);
                        return r3 < 0 && (r3 += 4294967296), r3;
                    }
                    function x(t3, e3) {
                        var r3 = a(t3, e3, 14) ^ a(t3, e3, 18) ^ a(e3, t3, 9);
                        return r3 < 0 && (r3 += 4294967296), r3;
                    }
                    function T(t3, e3) {
                        var r3 = s(t3, e3, 1) ^ s(t3, e3, 8) ^ u(t3, e3, 7);
                        return r3 < 0 && (r3 += 4294967296), r3;
                    }
                    function O(t3, e3) {
                        var r3 = a(t3, e3, 1) ^ a(t3, e3, 8) ^ c(t3, e3, 7);
                        return r3 < 0 && (r3 += 4294967296), r3;
                    }
                    function C(t3, e3) {
                        var r3 = a(t3, e3, 19) ^ a(e3, t3, 29) ^ c(t3, e3, 6);
                        return r3 < 0 && (r3 += 4294967296), r3;
                    }
                    n.inherits(b, m), t2.exports = b, b.blockSize = 1024, b.outSize = 512, b.hmacStrength = 192, b.padLength = 128, b.prototype._prepareBlock = function(t3, e3) {
                        for(var r3 = this.W, n2 = 0; n2 < 32; n2++)r3[n2] = t3[e3 + n2];
                        for(; n2 < r3.length; n2 += 2){
                            var i2 = (y2 = r3[n2 - 4], m2 = r3[n2 - 3], v2 = void 0, (v2 = s(y2, m2, 19) ^ s(m2, y2, 29) ^ u(y2, m2, 6)) < 0 && (v2 += 4294967296), v2), o2 = C(r3[n2 - 4], r3[n2 - 3]), a2 = r3[n2 - 14], c2 = r3[n2 - 13], l2 = T(r3[n2 - 30], r3[n2 - 29]), h2 = O(r3[n2 - 30], r3[n2 - 29]), f2 = r3[n2 - 32], g2 = r3[n2 - 31];
                            r3[n2] = d(i2, o2, a2, c2, l2, h2, f2, g2), r3[n2 + 1] = p(i2, o2, a2, c2, l2, h2, f2, g2);
                        }
                        var y2, m2, v2;
                    }, b.prototype._update = function(t3, e3) {
                        this._prepareBlock(t3, e3);
                        var r3, n2, i2, a2 = this.W, u2 = this.h[0], c2 = this.h[1], d2 = this.h[2], p2 = this.h[3], m2 = this.h[4], v2 = this.h[5], b2 = this.h[6], T2 = this.h[7], O2 = this.h[8], C2 = this.h[9], j = this.h[10], D = this.h[11], I = this.h[12], k = this.h[13], F = this.h[14], R = this.h[15];
                        o(this.k.length === a2.length);
                        for(var M = 0; M < a2.length; M += 2){
                            var N = F, L = R, U = (i2 = void 0, (i2 = s(r3 = O2, n2 = C2, 14) ^ s(r3, n2, 18) ^ s(n2, r3, 9)) < 0 && (i2 += 4294967296), i2), B = x(O2, C2), V = _(O2, 0, j, 0, I), $ = w(0, C2, 0, D, 0, k), G = this.k[M], z = this.k[M + 1], H = a2[M], q = a2[M + 1], Y = g(N, L, U, B, V, $, G, z, H, q), K = y(N, L, U, B, V, $, G, z, H, q);
                            N = S(u2, c2), L = P(u2, c2), U = E(u2, 0, d2, 0, m2), B = A(0, c2, 0, p2, 0, v2);
                            var Z = h(N, L, U, B), J = f(N, L, U, B);
                            F = I, R = k, I = j, k = D, j = O2, D = C2, O2 = h(b2, T2, Y, K), C2 = f(T2, T2, Y, K), b2 = m2, T2 = v2, m2 = d2, v2 = p2, d2 = u2, p2 = c2, u2 = h(Y, K, Z, J), c2 = f(Y, K, Z, J);
                        }
                        l(this.h, 0, u2, c2), l(this.h, 2, d2, p2), l(this.h, 4, m2, v2), l(this.h, 6, b2, T2), l(this.h, 8, O2, C2), l(this.h, 10, j, D), l(this.h, 12, I, k), l(this.h, 14, F, R);
                    }, b.prototype._digest = function(t3) {
                        return t3 === "hex" ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                    };
                },
                7038: (t2, e2, r2)=>{
                    var n = r2(6436).rotr32;
                    function i(t3, e3, r3) {
                        return t3 & e3 ^ ~t3 & r3;
                    }
                    function o(t3, e3, r3) {
                        return t3 & e3 ^ t3 & r3 ^ e3 & r3;
                    }
                    function s(t3, e3, r3) {
                        return t3 ^ e3 ^ r3;
                    }
                    e2.ft_1 = function(t3, e3, r3, n2) {
                        return t3 === 0 ? i(e3, r3, n2) : t3 === 1 || t3 === 3 ? s(e3, r3, n2) : t3 === 2 ? o(e3, r3, n2) : void 0;
                    }, e2.ch32 = i, e2.maj32 = o, e2.p32 = s, e2.s0_256 = function(t3) {
                        return n(t3, 2) ^ n(t3, 13) ^ n(t3, 22);
                    }, e2.s1_256 = function(t3) {
                        return n(t3, 6) ^ n(t3, 11) ^ n(t3, 25);
                    }, e2.g0_256 = function(t3) {
                        return n(t3, 7) ^ n(t3, 18) ^ t3 >>> 3;
                    }, e2.g1_256 = function(t3) {
                        return n(t3, 17) ^ n(t3, 19) ^ t3 >>> 10;
                    };
                },
                6436: (t2, e2, r2)=>{
                    var n = r2(9746), i = r2(5717);
                    function o(t3, e3) {
                        return (64512 & t3.charCodeAt(e3)) == 55296 && !(e3 < 0 || e3 + 1 >= t3.length) && (64512 & t3.charCodeAt(e3 + 1)) == 56320;
                    }
                    function s(t3) {
                        return (t3 >>> 24 | t3 >>> 8 & 65280 | t3 << 8 & 16711680 | (255 & t3) << 24) >>> 0;
                    }
                    function a(t3) {
                        return t3.length === 1 ? "0" + t3 : t3;
                    }
                    function u(t3) {
                        return t3.length === 7 ? "0" + t3 : t3.length === 6 ? "00" + t3 : t3.length === 5 ? "000" + t3 : t3.length === 4 ? "0000" + t3 : t3.length === 3 ? "00000" + t3 : t3.length === 2 ? "000000" + t3 : t3.length === 1 ? "0000000" + t3 : t3;
                    }
                    e2.inherits = i, e2.toArray = function(t3, e3) {
                        if (Array.isArray(t3)) return t3.slice();
                        if (!t3) return [];
                        var r3 = [];
                        if (typeof t3 == "string") if (e3) {
                            if (e3 === "hex") for((t3 = t3.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t3 = "0" + t3), i2 = 0; i2 < t3.length; i2 += 2)r3.push(parseInt(t3[i2] + t3[i2 + 1], 16));
                        } else for(var n2 = 0, i2 = 0; i2 < t3.length; i2++){
                            var s2 = t3.charCodeAt(i2);
                            s2 < 128 ? r3[n2++] = s2 : s2 < 2048 ? (r3[n2++] = s2 >> 6 | 192, r3[n2++] = 63 & s2 | 128) : o(t3, i2) ? (s2 = 65536 + ((1023 & s2) << 10) + (1023 & t3.charCodeAt(++i2)), r3[n2++] = s2 >> 18 | 240, r3[n2++] = s2 >> 12 & 63 | 128, r3[n2++] = s2 >> 6 & 63 | 128, r3[n2++] = 63 & s2 | 128) : (r3[n2++] = s2 >> 12 | 224, r3[n2++] = s2 >> 6 & 63 | 128, r3[n2++] = 63 & s2 | 128);
                        }
                        else for(i2 = 0; i2 < t3.length; i2++)r3[i2] = 0 | t3[i2];
                        return r3;
                    }, e2.toHex = function(t3) {
                        for(var e3 = "", r3 = 0; r3 < t3.length; r3++)e3 += a(t3[r3].toString(16));
                        return e3;
                    }, e2.htonl = s, e2.toHex32 = function(t3, e3) {
                        for(var r3 = "", n2 = 0; n2 < t3.length; n2++){
                            var i2 = t3[n2];
                            e3 === "little" && (i2 = s(i2)), r3 += u(i2.toString(16));
                        }
                        return r3;
                    }, e2.zero2 = a, e2.zero8 = u, e2.join32 = function(t3, e3, r3, i2) {
                        var o2 = r3 - e3;
                        n(o2 % 4 == 0);
                        for(var s2 = new Array(o2 / 4), a2 = 0, u2 = e3; a2 < s2.length; a2++, u2 += 4){
                            var c;
                            c = i2 === "big" ? t3[u2] << 24 | t3[u2 + 1] << 16 | t3[u2 + 2] << 8 | t3[u2 + 3] : t3[u2 + 3] << 24 | t3[u2 + 2] << 16 | t3[u2 + 1] << 8 | t3[u2], s2[a2] = c >>> 0;
                        }
                        return s2;
                    }, e2.split32 = function(t3, e3) {
                        for(var r3 = new Array(4 * t3.length), n2 = 0, i2 = 0; n2 < t3.length; n2++, i2 += 4){
                            var o2 = t3[n2];
                            e3 === "big" ? (r3[i2] = o2 >>> 24, r3[i2 + 1] = o2 >>> 16 & 255, r3[i2 + 2] = o2 >>> 8 & 255, r3[i2 + 3] = 255 & o2) : (r3[i2 + 3] = o2 >>> 24, r3[i2 + 2] = o2 >>> 16 & 255, r3[i2 + 1] = o2 >>> 8 & 255, r3[i2] = 255 & o2);
                        }
                        return r3;
                    }, e2.rotr32 = function(t3, e3) {
                        return t3 >>> e3 | t3 << 32 - e3;
                    }, e2.rotl32 = function(t3, e3) {
                        return t3 << e3 | t3 >>> 32 - e3;
                    }, e2.sum32 = function(t3, e3) {
                        return t3 + e3 >>> 0;
                    }, e2.sum32_3 = function(t3, e3, r3) {
                        return t3 + e3 + r3 >>> 0;
                    }, e2.sum32_4 = function(t3, e3, r3, n2) {
                        return t3 + e3 + r3 + n2 >>> 0;
                    }, e2.sum32_5 = function(t3, e3, r3, n2, i2) {
                        return t3 + e3 + r3 + n2 + i2 >>> 0;
                    }, e2.sum64 = function(t3, e3, r3, n2) {
                        var i2 = t3[e3], o2 = n2 + t3[e3 + 1] >>> 0, s2 = (o2 < n2 ? 1 : 0) + r3 + i2;
                        t3[e3] = s2 >>> 0, t3[e3 + 1] = o2;
                    }, e2.sum64_hi = function(t3, e3, r3, n2) {
                        return (e3 + n2 >>> 0 < e3 ? 1 : 0) + t3 + r3 >>> 0;
                    }, e2.sum64_lo = function(t3, e3, r3, n2) {
                        return e3 + n2 >>> 0;
                    }, e2.sum64_4_hi = function(t3, e3, r3, n2, i2, o2, s2, a2) {
                        var u2 = 0, c = e3;
                        return u2 += (c = c + n2 >>> 0) < e3 ? 1 : 0, u2 += (c = c + o2 >>> 0) < o2 ? 1 : 0, t3 + r3 + i2 + s2 + (u2 += (c = c + a2 >>> 0) < a2 ? 1 : 0) >>> 0;
                    }, e2.sum64_4_lo = function(t3, e3, r3, n2, i2, o2, s2, a2) {
                        return e3 + n2 + o2 + a2 >>> 0;
                    }, e2.sum64_5_hi = function(t3, e3, r3, n2, i2, o2, s2, a2, u2, c) {
                        var l = 0, h = e3;
                        return l += (h = h + n2 >>> 0) < e3 ? 1 : 0, l += (h = h + o2 >>> 0) < o2 ? 1 : 0, l += (h = h + a2 >>> 0) < a2 ? 1 : 0, t3 + r3 + i2 + s2 + u2 + (l += (h = h + c >>> 0) < c ? 1 : 0) >>> 0;
                    }, e2.sum64_5_lo = function(t3, e3, r3, n2, i2, o2, s2, a2, u2, c) {
                        return e3 + n2 + o2 + a2 + c >>> 0;
                    }, e2.rotr64_hi = function(t3, e3, r3) {
                        return (e3 << 32 - r3 | t3 >>> r3) >>> 0;
                    }, e2.rotr64_lo = function(t3, e3, r3) {
                        return (t3 << 32 - r3 | e3 >>> r3) >>> 0;
                    }, e2.shr64_hi = function(t3, e3, r3) {
                        return t3 >>> r3;
                    }, e2.shr64_lo = function(t3, e3, r3) {
                        return (t3 << 32 - r3 | e3 >>> r3) >>> 0;
                    };
                },
                8557: (t2)=>{
                    t2.exports = {
                        sequence: function(...t3) {
                            if (t3.length === 0) throw new Error("Failed creating sequence: No functions provided");
                            return function(...e2) {
                                let r2 = e2;
                                const n = this;
                                for(; t3.length > 0;)r2 = [
                                    t3.shift().apply(n, r2)
                                ];
                                return r2[0];
                            };
                        }
                    };
                },
                5342: (t2, e2, r2)=>{
                    const { sequence: n  } = r2(8557), i = "@@HOTPATCHER", o = ()=>{};
                    function s(t3) {
                        return {
                            original: t3,
                            methods: [
                                t3
                            ],
                            final: false
                        };
                    }
                    t2.exports = class {
                        constructor(){
                            this._configuration = {
                                registry: {},
                                getEmptyAction: "null"
                            }, this.__type__ = i;
                        }
                        get configuration() {
                            return this._configuration;
                        }
                        get getEmptyAction() {
                            return this.configuration.getEmptyAction;
                        }
                        set getEmptyAction(t3) {
                            this.configuration.getEmptyAction = t3;
                        }
                        control(t3, e3 = false) {
                            if (!t3 || t3.__type__ !== i) throw new Error("Failed taking control of target HotPatcher instance: Invalid type or object");
                            return Object.keys(t3.configuration.registry).forEach((r3)=>{
                                this.configuration.registry.hasOwnProperty(r3) ? e3 && (this.configuration.registry[r3] = Object.assign({}, t3.configuration.registry[r3])) : this.configuration.registry[r3] = Object.assign({}, t3.configuration.registry[r3]);
                            }), t3._configuration = this.configuration, this;
                        }
                        execute(t3, ...e3) {
                            return (this.get(t3) || o)(...e3);
                        }
                        get(t3) {
                            const e3 = this.configuration.registry[t3];
                            if (!e3) switch(this.getEmptyAction){
                                case "null":
                                    return null;
                                case "throw":
                                    throw new Error(`Failed handling method request: No method provided for override: ${t3}`);
                                default:
                                    throw new Error(`Failed handling request which resulted in an empty method: Invalid empty-action specified: ${this.getEmptyAction}`);
                            }
                            return n(...e3.methods);
                        }
                        isPatched(t3) {
                            return !!this.configuration.registry[t3];
                        }
                        patch(t3, e3, { chain: r3 = false  } = {}) {
                            if (this.configuration.registry[t3] && this.configuration.registry[t3].final) throw new Error(`Failed patching '${t3}': Method marked as being final`);
                            if (typeof e3 != "function") throw new Error(`Failed patching '${t3}': Provided method is not a function`);
                            if (r3) this.configuration.registry[t3] ? this.configuration.registry[t3].methods.push(e3) : this.configuration.registry[t3] = s(e3);
                            else if (this.isPatched(t3)) {
                                const { original: r4  } = this.configuration.registry[t3];
                                this.configuration.registry[t3] = Object.assign(s(e3), {
                                    original: r4
                                });
                            } else this.configuration.registry[t3] = s(e3);
                            return this;
                        }
                        patchInline(t3, e3, ...r3) {
                            return this.isPatched(t3) || this.patch(t3, e3), this.execute(t3, ...r3);
                        }
                        plugin(t3, ...e3) {
                            return e3.forEach((e4)=>{
                                this.patch(t3, e4, {
                                    chain: true
                                });
                            }), this;
                        }
                        restore(t3) {
                            if (!this.isPatched(t3)) throw new Error(`Failed restoring method: No method present for key: ${t3}`);
                            if (typeof this.configuration.registry[t3].original != "function") throw new Error(`Failed restoring method: Original method not found or of invalid type for key: ${t3}`);
                            this.configuration.registry[t3].methods = [
                                this.configuration.registry[t3].original
                            ];
                        }
                        setFinal(t3) {
                            if (!this.configuration.registry.hasOwnProperty(t3)) throw new Error(`Failed marking '${t3}' as final: No method found for key`);
                            return this.configuration.registry[t3].final = true, this;
                        }
                    };
                },
                5717: (t2)=>{
                    typeof Object.create == "function" ? t2.exports = function(t3, e2) {
                        e2 && (t3.super_ = e2, t3.prototype = Object.create(e2.prototype, {
                            constructor: {
                                value: t3,
                                enumerable: false,
                                writable: true,
                                configurable: true
                            }
                        }));
                    } : t2.exports = function(t3, e2) {
                        if (e2) {
                            t3.super_ = e2;
                            var r2 = function() {};
                            r2.prototype = e2.prototype, t3.prototype = new r2(), t3.prototype.constructor = t3;
                        }
                    };
                },
                4122: (t2)=>{
                    t2.exports = function(t3) {
                        var e2 = {};
                        function r2(n) {
                            if (e2[n]) return e2[n].exports;
                            var i = e2[n] = {
                                i: n,
                                l: false,
                                exports: {}
                            };
                            return t3[n].call(i.exports, i, i.exports, r2), i.l = true, i.exports;
                        }
                        return r2.m = t3, r2.c = e2, r2.d = function(t4, e3, n) {
                            r2.o(t4, e3) || Object.defineProperty(t4, e3, {
                                enumerable: true,
                                get: n
                            });
                        }, r2.r = function(t4) {
                            typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(t4, Symbol.toStringTag, {
                                value: "Module"
                            }), Object.defineProperty(t4, "__esModule", {
                                value: true
                            });
                        }, r2.t = function(t4, e3) {
                            if (1 & e3 && (t4 = r2(t4)), 8 & e3) return t4;
                            if (4 & e3 && typeof t4 == "object" && t4 && t4.__esModule) return t4;
                            var n = Object.create(null);
                            if (r2.r(n), Object.defineProperty(n, "default", {
                                enumerable: true,
                                value: t4
                            }), 2 & e3 && typeof t4 != "string") for(var i in t4)r2.d(n, i, (function(e4) {
                                return t4[e4];
                            }).bind(null, i));
                            return n;
                        }, r2.n = function(t4) {
                            var e3 = t4 && t4.__esModule ? function() {
                                return t4.default;
                            } : function() {
                                return t4;
                            };
                            return r2.d(e3, "a", e3), e3;
                        }, r2.o = function(t4, e3) {
                            return Object.prototype.hasOwnProperty.call(t4, e3);
                        }, r2.p = "", r2(r2.s = 10);
                    }([
                        function(t3, e2, r2) {
                            function n(t4, e3) {
                                if (t4.byteLength !== e3.byteLength) return false;
                                for(var r3 = new Uint8Array(t4), n2 = new Uint8Array(e3), i2 = 0; i2 < t4.byteLength; i2 += 1)if (r3[i2] !== n2[i2]) return false;
                                return true;
                            }
                            function i(t4, e3) {
                                var r3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
                                return new Uint8Array(t4).findIndex(function(t5, i2, o2) {
                                    if (i2 < r3) return false;
                                    var s2 = o2.slice(i2, i2 + e3.byteLength).buffer;
                                    return Boolean(n(e3, s2));
                                });
                            }
                            function o(t4) {
                                var e3 = Array.from(new Uint8Array(t4)).map(function(t5) {
                                    return String.fromCharCode(t5);
                                }).join("");
                                return btoa(e3);
                            }
                            function s(t4) {
                                for(var e3, r3 = new Uint8Array(t4), n2 = "", i2 = 0; i2 < r3.byteLength; i2 += 1)(e3 = r3[i2].toString(16)).length < 2 && (e3 = "0" + e3), n2 += e3;
                                return n2;
                            }
                            function a(t4) {
                                return new TextDecoder().decode(t4);
                            }
                            function u(t4) {
                                for(var e3 = atob(t4), r3 = new Uint8Array(new ArrayBuffer(e3.length)), n2 = 0; n2 < e3.length; n2 += 1)r3[n2] = e3.charCodeAt(n2);
                                return r3.buffer;
                            }
                            function c(t4) {
                                if (t4.length <= 0) throw new Error("Failed concatenating array buffers: At least one must be passed");
                                var e3 = t4.reduce(function(t5, e4) {
                                    return t5 + e4.byteLength;
                                }, 0), r3 = new Uint8Array(e3), n2 = 0;
                                return t4.forEach(function(t5) {
                                    r3.set(new Uint8Array(t5), n2), n2 += t5.byteLength;
                                }), r3.buffer;
                            }
                            function l(t4) {
                                var e3 = t4.match(/[\da-f]{2}/gi).map(function(t5) {
                                    return parseInt(t5, 16);
                                });
                                return new Uint8Array(e3).buffer;
                            }
                            function h(t4) {
                                return new TextEncoder().encode(t4);
                            }
                            r2.d(e2, "e", function() {
                                return n;
                            }), r2.d(e2, "a", function() {
                                return i;
                            }), r2.d(e2, "b", function() {
                                return o;
                            }), r2.d(e2, "c", function() {
                                return s;
                            }), r2.d(e2, "d", function() {
                                return a;
                            }), r2.d(e2, "f", function() {
                                return u;
                            }), r2.d(e2, "g", function() {
                                return c;
                            }), r2.d(e2, "h", function() {
                                return l;
                            }), r2.d(e2, "i", function() {
                                return h;
                            });
                        },
                        function(t3, e2, r2) {
                            r2.d(e2, "a", function() {
                                return n;
                            }), r2.d(e2, "b", function() {
                                return i;
                            }), r2.d(e2, "c", function() {
                                return o;
                            }), r2.d(e2, "d", function() {
                                return s;
                            }), r2.d(e2, "e", function() {
                                return a;
                            }), r2.d(e2, "f", function() {
                                return u;
                            }), r2.d(e2, "g", function() {
                                return c;
                            }), r2.d(e2, "h", function() {
                                return l;
                            }), r2.d(e2, "i", function() {
                                return h;
                            }), r2.d(e2, "j", function() {
                                return f;
                            });
                            var n = r2(2).a.CBC, i = "sha256", o = 25e4, s = 32, a = "aes-256-cbc", u = "aes-256-gcm", c = "sha256", l = 32, h = 12, f = 4;
                        },
                        function(t3, e2, r2) {
                            var n;
                            r2.d(e2, "a", function() {
                                return n;
                            }), function(t4) {
                                t4.CBC = "cbc", t4.GCM = "gcm";
                            }(n || (n = {}));
                        },
                        function(t3, e2, r2) {
                            r2.d(e2, "b", function() {
                                return n;
                            }), r2.d(e2, "a", function() {
                                return i;
                            });
                            function n() {
                                return "iocane/2".split("").map(function(t4) {
                                    return t4.charCodeAt(0);
                                });
                            }
                            function i() {
                                return [
                                    1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1
                                ];
                            }
                        },
                        function(t3, e2, r2) {
                            (function(t4) {
                                r2.d(e2, "a", function() {
                                    return a;
                                }), r2.d(e2, "b", function() {
                                    return c;
                                });
                                var n = r2(3), i = r2(0), o = r2(1);
                                function s(t5) {
                                    return Object(i.g)(t5.reduce(function(t6, e3) {
                                        var r3, n2, o2;
                                        if (typeof e3 == "string" || typeof e3 == "number") r3 = Object(i.i)("".concat(e3));
                                        else {
                                            if (!(e3 instanceof ArrayBuffer)) throw new Error("Failed packing data: Invalid component type: ".concat(typeof e3));
                                            r3 = e3;
                                        }
                                        return t6.push((n2 = r3.byteLength, o2 = new ArrayBuffer(4), new DataView(o2).setUint32(0, n2, false), o2)), t6.push(r3), t6;
                                    }, []));
                                }
                                function a(t5) {
                                    var e3 = new Uint8Array(Object(n.a)()).buffer, r3 = [
                                        u(t5)
                                    ];
                                    return t5.content && r3.push(s([
                                        e3
                                    ]), t5.content, e3), r3.push(function(t6) {
                                        var e4 = t6.auth;
                                        return s([
                                            JSON.stringify({
                                                auth: e4
                                            })
                                        ]);
                                    }(t5)), Object(i.g)(r3);
                                }
                                function u(t5) {
                                    var e3 = new Uint8Array(Object(n.b)()).buffer, r3 = t5.iv, o2 = t5.salt, a2 = t5.rounds, u2 = t5.method, c2 = JSON.stringify({
                                        iv: r3,
                                        salt: o2,
                                        rounds: a2,
                                        method: u2
                                    });
                                    return Object(i.g)([
                                        e3,
                                        s([
                                            c2
                                        ])
                                    ]);
                                }
                                function c(e3) {
                                    var r3 = 0, s2 = new Uint8Array(Object(n.b)()).buffer, a2 = s2.byteLength, u2 = e3.slice(0, a2);
                                    if (!Object(i.e)(u2, s2)) throw new Error("Failed unpacking data: Signature mismatch");
                                    r3 = a2;
                                    var c2 = new DataView(e3), l = c2.getUint32(r3);
                                    r3 += o.j;
                                    var h = e3.slice(r3, r3 + l);
                                    r3 += l;
                                    var f = c2.getUint32(r3);
                                    r3 += o.j;
                                    var d = e3.slice(r3, r3 + f);
                                    r3 += f;
                                    var p = t4.from(Object(n.a)());
                                    if (!Object(i.e)(p, d)) throw new Error("Decoding error: Encrypted content length is corrupt");
                                    var g = Object(i.a)(e3, d, r3);
                                    if (g === -1) throw new Error("Decoding error: Encrypted content corrupt or incomplete");
                                    var y = e3.slice(r3, g);
                                    r3 = g + f;
                                    var m = c2.getUint32(r3);
                                    r3 += o.j;
                                    var v = e3.slice(r3, r3 + m);
                                    r3 += m;
                                    var b = JSON.parse(Object(i.d)(h)), _ = b.iv, w = b.salt, E = b.rounds, A = b.method;
                                    return {
                                        content: y,
                                        iv: _,
                                        salt: w,
                                        auth: JSON.parse(Object(i.d)(v)).auth,
                                        rounds: E,
                                        method: A
                                    };
                                }
                            }).call(this, r2(5).Buffer);
                        },
                        function(t3, e2, r2) {
                            (function(t4) {
                                var n = r2(7), i = r2(8), o = r2(9);
                                function s() {
                                    return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
                                }
                                function a(t5, e3) {
                                    if (s() < e3) throw new RangeError("Invalid typed array length");
                                    return u.TYPED_ARRAY_SUPPORT ? (t5 = new Uint8Array(e3)).__proto__ = u.prototype : (t5 === null && (t5 = new u(e3)), t5.length = e3), t5;
                                }
                                function u(t5, e3, r3) {
                                    if (!(u.TYPED_ARRAY_SUPPORT || this instanceof u)) return new u(t5, e3, r3);
                                    if (typeof t5 == "number") {
                                        if (typeof e3 == "string") throw new Error("If encoding is specified then the first argument must be a string");
                                        return h(this, t5);
                                    }
                                    return c(this, t5, e3, r3);
                                }
                                function c(t5, e3, r3, n2) {
                                    if (typeof e3 == "number") throw new TypeError('"value" argument must not be a number');
                                    return typeof ArrayBuffer != "undefined" && e3 instanceof ArrayBuffer ? function(t6, e4, r4, n3) {
                                        if (e4.byteLength, r4 < 0 || e4.byteLength < r4) throw new RangeError("'offset' is out of bounds");
                                        if (e4.byteLength < r4 + (n3 || 0)) throw new RangeError("'length' is out of bounds");
                                        return e4 = r4 === void 0 && n3 === void 0 ? new Uint8Array(e4) : n3 === void 0 ? new Uint8Array(e4, r4) : new Uint8Array(e4, r4, n3), u.TYPED_ARRAY_SUPPORT ? (t6 = e4).__proto__ = u.prototype : t6 = f(t6, e4), t6;
                                    }(t5, e3, r3, n2) : typeof e3 == "string" ? function(t6, e4, r4) {
                                        if (typeof r4 == "string" && r4 !== "" || (r4 = "utf8"), !u.isEncoding(r4)) throw new TypeError('"encoding" must be a valid string encoding');
                                        var n3 = 0 | p(e4, r4), i2 = (t6 = a(t6, n3)).write(e4, r4);
                                        return i2 !== n3 && (t6 = t6.slice(0, i2)), t6;
                                    }(t5, e3, r3) : function(t6, e4) {
                                        if (u.isBuffer(e4)) {
                                            var r4 = 0 | d(e4.length);
                                            return (t6 = a(t6, r4)).length === 0 || e4.copy(t6, 0, 0, r4), t6;
                                        }
                                        if (e4) {
                                            if (typeof ArrayBuffer != "undefined" && e4.buffer instanceof ArrayBuffer || "length" in e4) return typeof e4.length != "number" || (n3 = e4.length) != n3 ? a(t6, 0) : f(t6, e4);
                                            if (e4.type === "Buffer" && o(e4.data)) return f(t6, e4.data);
                                        }
                                        var n3;
                                        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
                                    }(t5, e3);
                                }
                                function l(t5) {
                                    if (typeof t5 != "number") throw new TypeError('"size" argument must be a number');
                                    if (t5 < 0) throw new RangeError('"size" argument must not be negative');
                                }
                                function h(t5, e3) {
                                    if (l(e3), t5 = a(t5, e3 < 0 ? 0 : 0 | d(e3)), !u.TYPED_ARRAY_SUPPORT) for(var r3 = 0; r3 < e3; ++r3)t5[r3] = 0;
                                    return t5;
                                }
                                function f(t5, e3) {
                                    var r3 = e3.length < 0 ? 0 : 0 | d(e3.length);
                                    t5 = a(t5, r3);
                                    for(var n2 = 0; n2 < r3; n2 += 1)t5[n2] = 255 & e3[n2];
                                    return t5;
                                }
                                function d(t5) {
                                    if (t5 >= s()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s().toString(16) + " bytes");
                                    return 0 | t5;
                                }
                                function p(t5, e3) {
                                    if (u.isBuffer(t5)) return t5.length;
                                    if (typeof ArrayBuffer != "undefined" && typeof ArrayBuffer.isView == "function" && (ArrayBuffer.isView(t5) || t5 instanceof ArrayBuffer)) return t5.byteLength;
                                    typeof t5 != "string" && (t5 = "" + t5);
                                    var r3 = t5.length;
                                    if (r3 === 0) return 0;
                                    for(var n2 = false;;)switch(e3){
                                        case "ascii":
                                        case "latin1":
                                        case "binary":
                                            return r3;
                                        case "utf8":
                                        case "utf-8":
                                        case void 0:
                                            return V(t5).length;
                                        case "ucs2":
                                        case "ucs-2":
                                        case "utf16le":
                                        case "utf-16le":
                                            return 2 * r3;
                                        case "hex":
                                            return r3 >>> 1;
                                        case "base64":
                                            return $(t5).length;
                                        default:
                                            if (n2) return V(t5).length;
                                            e3 = ("" + e3).toLowerCase(), n2 = true;
                                    }
                                }
                                function g(t5, e3, r3) {
                                    var n2 = false;
                                    if ((e3 === void 0 || e3 < 0) && (e3 = 0), e3 > this.length) return "";
                                    if ((r3 === void 0 || r3 > this.length) && (r3 = this.length), r3 <= 0) return "";
                                    if ((r3 >>>= 0) <= (e3 >>>= 0)) return "";
                                    for(t5 || (t5 = "utf8");;)switch(t5){
                                        case "hex":
                                            return j(this, e3, r3);
                                        case "utf8":
                                        case "utf-8":
                                            return x(this, e3, r3);
                                        case "ascii":
                                            return O(this, e3, r3);
                                        case "latin1":
                                        case "binary":
                                            return C(this, e3, r3);
                                        case "base64":
                                            return P(this, e3, r3);
                                        case "ucs2":
                                        case "ucs-2":
                                        case "utf16le":
                                        case "utf-16le":
                                            return D(this, e3, r3);
                                        default:
                                            if (n2) throw new TypeError("Unknown encoding: " + t5);
                                            t5 = (t5 + "").toLowerCase(), n2 = true;
                                    }
                                }
                                function y(t5, e3, r3) {
                                    var n2 = t5[e3];
                                    t5[e3] = t5[r3], t5[r3] = n2;
                                }
                                function m(t5, e3, r3, n2, i2) {
                                    if (t5.length === 0) return -1;
                                    if (typeof r3 == "string" ? (n2 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), r3 = +r3, isNaN(r3) && (r3 = i2 ? 0 : t5.length - 1), r3 < 0 && (r3 = t5.length + r3), r3 >= t5.length) {
                                        if (i2) return -1;
                                        r3 = t5.length - 1;
                                    } else if (r3 < 0) {
                                        if (!i2) return -1;
                                        r3 = 0;
                                    }
                                    if (typeof e3 == "string" && (e3 = u.from(e3, n2)), u.isBuffer(e3)) return e3.length === 0 ? -1 : v(t5, e3, r3, n2, i2);
                                    if (typeof e3 == "number") return e3 &= 255, u.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf == "function" ? i2 ? Uint8Array.prototype.indexOf.call(t5, e3, r3) : Uint8Array.prototype.lastIndexOf.call(t5, e3, r3) : v(t5, [
                                        e3
                                    ], r3, n2, i2);
                                    throw new TypeError("val must be string, number or Buffer");
                                }
                                function v(t5, e3, r3, n2, i2) {
                                    var o2, s2 = 1, a2 = t5.length, u2 = e3.length;
                                    if (n2 !== void 0 && ((n2 = String(n2).toLowerCase()) === "ucs2" || n2 === "ucs-2" || n2 === "utf16le" || n2 === "utf-16le")) {
                                        if (t5.length < 2 || e3.length < 2) return -1;
                                        s2 = 2, a2 /= 2, u2 /= 2, r3 /= 2;
                                    }
                                    function c2(t6, e4) {
                                        return s2 === 1 ? t6[e4] : t6.readUInt16BE(e4 * s2);
                                    }
                                    if (i2) {
                                        var l2 = -1;
                                        for(o2 = r3; o2 < a2; o2++)if (c2(t5, o2) === c2(e3, l2 === -1 ? 0 : o2 - l2)) {
                                            if (l2 === -1 && (l2 = o2), o2 - l2 + 1 === u2) return l2 * s2;
                                        } else l2 !== -1 && (o2 -= o2 - l2), l2 = -1;
                                    } else for(r3 + u2 > a2 && (r3 = a2 - u2), o2 = r3; o2 >= 0; o2--){
                                        for(var h2 = true, f2 = 0; f2 < u2; f2++)if (c2(t5, o2 + f2) !== c2(e3, f2)) {
                                            h2 = false;
                                            break;
                                        }
                                        if (h2) return o2;
                                    }
                                    return -1;
                                }
                                function b(t5, e3, r3, n2) {
                                    r3 = Number(r3) || 0;
                                    var i2 = t5.length - r3;
                                    n2 ? (n2 = Number(n2)) > i2 && (n2 = i2) : n2 = i2;
                                    var o2 = e3.length;
                                    if (o2 % 2 != 0) throw new TypeError("Invalid hex string");
                                    n2 > o2 / 2 && (n2 = o2 / 2);
                                    for(var s2 = 0; s2 < n2; ++s2){
                                        var a2 = parseInt(e3.substr(2 * s2, 2), 16);
                                        if (isNaN(a2)) return s2;
                                        t5[r3 + s2] = a2;
                                    }
                                    return s2;
                                }
                                function _(t5, e3, r3, n2) {
                                    return G(V(e3, t5.length - r3), t5, r3, n2);
                                }
                                function w(t5, e3, r3, n2) {
                                    return G(function(t6) {
                                        for(var e4 = [], r4 = 0; r4 < t6.length; ++r4)e4.push(255 & t6.charCodeAt(r4));
                                        return e4;
                                    }(e3), t5, r3, n2);
                                }
                                function E(t5, e3, r3, n2) {
                                    return w(t5, e3, r3, n2);
                                }
                                function A(t5, e3, r3, n2) {
                                    return G($(e3), t5, r3, n2);
                                }
                                function S(t5, e3, r3, n2) {
                                    return G(function(t6, e4) {
                                        for(var r4, n3, i2, o2 = [], s2 = 0; s2 < t6.length && !((e4 -= 2) < 0); ++s2)n3 = (r4 = t6.charCodeAt(s2)) >> 8, i2 = r4 % 256, o2.push(i2), o2.push(n3);
                                        return o2;
                                    }(e3, t5.length - r3), t5, r3, n2);
                                }
                                function P(t5, e3, r3) {
                                    return e3 === 0 && r3 === t5.length ? n.fromByteArray(t5) : n.fromByteArray(t5.slice(e3, r3));
                                }
                                function x(t5, e3, r3) {
                                    r3 = Math.min(t5.length, r3);
                                    for(var n2 = [], i2 = e3; i2 < r3;){
                                        var o2, s2, a2, u2, c2 = t5[i2], l2 = null, h2 = c2 > 239 ? 4 : c2 > 223 ? 3 : c2 > 191 ? 2 : 1;
                                        if (i2 + h2 <= r3) switch(h2){
                                            case 1:
                                                c2 < 128 && (l2 = c2);
                                                break;
                                            case 2:
                                                (192 & (o2 = t5[i2 + 1])) == 128 && (u2 = (31 & c2) << 6 | 63 & o2) > 127 && (l2 = u2);
                                                break;
                                            case 3:
                                                o2 = t5[i2 + 1], s2 = t5[i2 + 2], (192 & o2) == 128 && (192 & s2) == 128 && (u2 = (15 & c2) << 12 | (63 & o2) << 6 | 63 & s2) > 2047 && (u2 < 55296 || u2 > 57343) && (l2 = u2);
                                                break;
                                            case 4:
                                                o2 = t5[i2 + 1], s2 = t5[i2 + 2], a2 = t5[i2 + 3], (192 & o2) == 128 && (192 & s2) == 128 && (192 & a2) == 128 && (u2 = (15 & c2) << 18 | (63 & o2) << 12 | (63 & s2) << 6 | 63 & a2) > 65535 && u2 < 1114112 && (l2 = u2);
                                        }
                                        l2 === null ? (l2 = 65533, h2 = 1) : l2 > 65535 && (l2 -= 65536, n2.push(l2 >>> 10 & 1023 | 55296), l2 = 56320 | 1023 & l2), n2.push(l2), i2 += h2;
                                    }
                                    return function(t6) {
                                        var e4 = t6.length;
                                        if (e4 <= T) return String.fromCharCode.apply(String, t6);
                                        for(var r4 = "", n3 = 0; n3 < e4;)r4 += String.fromCharCode.apply(String, t6.slice(n3, n3 += T));
                                        return r4;
                                    }(n2);
                                }
                                e2.Buffer = u, e2.SlowBuffer = function(t5) {
                                    return +t5 != t5 && (t5 = 0), u.alloc(+t5);
                                }, e2.INSPECT_MAX_BYTES = 50, u.TYPED_ARRAY_SUPPORT = t4.TYPED_ARRAY_SUPPORT !== void 0 ? t4.TYPED_ARRAY_SUPPORT : function() {
                                    try {
                                        var t5 = new Uint8Array(1);
                                        return t5.__proto__ = {
                                            __proto__: Uint8Array.prototype,
                                            foo: function() {
                                                return 42;
                                            }
                                        }, t5.foo() === 42 && typeof t5.subarray == "function" && t5.subarray(1, 1).byteLength === 0;
                                    } catch (t6) {
                                        return false;
                                    }
                                }(), e2.kMaxLength = s(), u.poolSize = 8192, u._augment = function(t5) {
                                    return t5.__proto__ = u.prototype, t5;
                                }, u.from = function(t5, e3, r3) {
                                    return c(null, t5, e3, r3);
                                }, u.TYPED_ARRAY_SUPPORT && (u.prototype.__proto__ = Uint8Array.prototype, u.__proto__ = Uint8Array, typeof Symbol != "undefined" && Symbol.species && u[Symbol.species] === u && Object.defineProperty(u, Symbol.species, {
                                    value: null,
                                    configurable: true
                                })), u.alloc = function(t5, e3, r3) {
                                    return function(t6, e4, r4, n2) {
                                        return l(e4), e4 <= 0 ? a(t6, e4) : r4 !== void 0 ? typeof n2 == "string" ? a(t6, e4).fill(r4, n2) : a(t6, e4).fill(r4) : a(t6, e4);
                                    }(null, t5, e3, r3);
                                }, u.allocUnsafe = function(t5) {
                                    return h(null, t5);
                                }, u.allocUnsafeSlow = function(t5) {
                                    return h(null, t5);
                                }, u.isBuffer = function(t5) {
                                    return !(t5 == null || !t5._isBuffer);
                                }, u.compare = function(t5, e3) {
                                    if (!u.isBuffer(t5) || !u.isBuffer(e3)) throw new TypeError("Arguments must be Buffers");
                                    if (t5 === e3) return 0;
                                    for(var r3 = t5.length, n2 = e3.length, i2 = 0, o2 = Math.min(r3, n2); i2 < o2; ++i2)if (t5[i2] !== e3[i2]) {
                                        r3 = t5[i2], n2 = e3[i2];
                                        break;
                                    }
                                    return r3 < n2 ? -1 : n2 < r3 ? 1 : 0;
                                }, u.isEncoding = function(t5) {
                                    switch(String(t5).toLowerCase()){
                                        case "hex":
                                        case "utf8":
                                        case "utf-8":
                                        case "ascii":
                                        case "latin1":
                                        case "binary":
                                        case "base64":
                                        case "ucs2":
                                        case "ucs-2":
                                        case "utf16le":
                                        case "utf-16le":
                                            return true;
                                        default:
                                            return false;
                                    }
                                }, u.concat = function(t5, e3) {
                                    if (!o(t5)) throw new TypeError('"list" argument must be an Array of Buffers');
                                    if (t5.length === 0) return u.alloc(0);
                                    var r3;
                                    if (e3 === void 0) for(e3 = 0, r3 = 0; r3 < t5.length; ++r3)e3 += t5[r3].length;
                                    var n2 = u.allocUnsafe(e3), i2 = 0;
                                    for(r3 = 0; r3 < t5.length; ++r3){
                                        var s2 = t5[r3];
                                        if (!u.isBuffer(s2)) throw new TypeError('"list" argument must be an Array of Buffers');
                                        s2.copy(n2, i2), i2 += s2.length;
                                    }
                                    return n2;
                                }, u.byteLength = p, u.prototype._isBuffer = true, u.prototype.swap16 = function() {
                                    var t5 = this.length;
                                    if (t5 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                                    for(var e3 = 0; e3 < t5; e3 += 2)y(this, e3, e3 + 1);
                                    return this;
                                }, u.prototype.swap32 = function() {
                                    var t5 = this.length;
                                    if (t5 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                                    for(var e3 = 0; e3 < t5; e3 += 4)y(this, e3, e3 + 3), y(this, e3 + 1, e3 + 2);
                                    return this;
                                }, u.prototype.swap64 = function() {
                                    var t5 = this.length;
                                    if (t5 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                                    for(var e3 = 0; e3 < t5; e3 += 8)y(this, e3, e3 + 7), y(this, e3 + 1, e3 + 6), y(this, e3 + 2, e3 + 5), y(this, e3 + 3, e3 + 4);
                                    return this;
                                }, u.prototype.toString = function() {
                                    var t5 = 0 | this.length;
                                    return t5 === 0 ? "" : arguments.length === 0 ? x(this, 0, t5) : g.apply(this, arguments);
                                }, u.prototype.equals = function(t5) {
                                    if (!u.isBuffer(t5)) throw new TypeError("Argument must be a Buffer");
                                    return this === t5 || u.compare(this, t5) === 0;
                                }, u.prototype.inspect = function() {
                                    var t5 = "", r3 = e2.INSPECT_MAX_BYTES;
                                    return this.length > 0 && (t5 = this.toString("hex", 0, r3).match(/.{2}/g).join(" "), this.length > r3 && (t5 += " ... ")), "<Buffer " + t5 + ">";
                                }, u.prototype.compare = function(t5, e3, r3, n2, i2) {
                                    if (!u.isBuffer(t5)) throw new TypeError("Argument must be a Buffer");
                                    if (e3 === void 0 && (e3 = 0), r3 === void 0 && (r3 = t5 ? t5.length : 0), n2 === void 0 && (n2 = 0), i2 === void 0 && (i2 = this.length), e3 < 0 || r3 > t5.length || n2 < 0 || i2 > this.length) throw new RangeError("out of range index");
                                    if (n2 >= i2 && e3 >= r3) return 0;
                                    if (n2 >= i2) return -1;
                                    if (e3 >= r3) return 1;
                                    if (this === t5) return 0;
                                    for(var o2 = (i2 >>>= 0) - (n2 >>>= 0), s2 = (r3 >>>= 0) - (e3 >>>= 0), a2 = Math.min(o2, s2), c2 = this.slice(n2, i2), l2 = t5.slice(e3, r3), h2 = 0; h2 < a2; ++h2)if (c2[h2] !== l2[h2]) {
                                        o2 = c2[h2], s2 = l2[h2];
                                        break;
                                    }
                                    return o2 < s2 ? -1 : s2 < o2 ? 1 : 0;
                                }, u.prototype.includes = function(t5, e3, r3) {
                                    return this.indexOf(t5, e3, r3) !== -1;
                                }, u.prototype.indexOf = function(t5, e3, r3) {
                                    return m(this, t5, e3, r3, true);
                                }, u.prototype.lastIndexOf = function(t5, e3, r3) {
                                    return m(this, t5, e3, r3, false);
                                }, u.prototype.write = function(t5, e3, r3, n2) {
                                    if (e3 === void 0) n2 = "utf8", r3 = this.length, e3 = 0;
                                    else if (r3 === void 0 && typeof e3 == "string") n2 = e3, r3 = this.length, e3 = 0;
                                    else {
                                        if (!isFinite(e3)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                                        e3 |= 0, isFinite(r3) ? (r3 |= 0, n2 === void 0 && (n2 = "utf8")) : (n2 = r3, r3 = void 0);
                                    }
                                    var i2 = this.length - e3;
                                    if ((r3 === void 0 || r3 > i2) && (r3 = i2), t5.length > 0 && (r3 < 0 || e3 < 0) || e3 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                                    n2 || (n2 = "utf8");
                                    for(var o2 = false;;)switch(n2){
                                        case "hex":
                                            return b(this, t5, e3, r3);
                                        case "utf8":
                                        case "utf-8":
                                            return _(this, t5, e3, r3);
                                        case "ascii":
                                            return w(this, t5, e3, r3);
                                        case "latin1":
                                        case "binary":
                                            return E(this, t5, e3, r3);
                                        case "base64":
                                            return A(this, t5, e3, r3);
                                        case "ucs2":
                                        case "ucs-2":
                                        case "utf16le":
                                        case "utf-16le":
                                            return S(this, t5, e3, r3);
                                        default:
                                            if (o2) throw new TypeError("Unknown encoding: " + n2);
                                            n2 = ("" + n2).toLowerCase(), o2 = true;
                                    }
                                }, u.prototype.toJSON = function() {
                                    return {
                                        type: "Buffer",
                                        data: Array.prototype.slice.call(this._arr || this, 0)
                                    };
                                };
                                var T = 4096;
                                function O(t5, e3, r3) {
                                    var n2 = "";
                                    r3 = Math.min(t5.length, r3);
                                    for(var i2 = e3; i2 < r3; ++i2)n2 += String.fromCharCode(127 & t5[i2]);
                                    return n2;
                                }
                                function C(t5, e3, r3) {
                                    var n2 = "";
                                    r3 = Math.min(t5.length, r3);
                                    for(var i2 = e3; i2 < r3; ++i2)n2 += String.fromCharCode(t5[i2]);
                                    return n2;
                                }
                                function j(t5, e3, r3) {
                                    var n2 = t5.length;
                                    (!e3 || e3 < 0) && (e3 = 0), (!r3 || r3 < 0 || r3 > n2) && (r3 = n2);
                                    for(var i2 = "", o2 = e3; o2 < r3; ++o2)i2 += B(t5[o2]);
                                    return i2;
                                }
                                function D(t5, e3, r3) {
                                    for(var n2 = t5.slice(e3, r3), i2 = "", o2 = 0; o2 < n2.length; o2 += 2)i2 += String.fromCharCode(n2[o2] + 256 * n2[o2 + 1]);
                                    return i2;
                                }
                                function I(t5, e3, r3) {
                                    if (t5 % 1 != 0 || t5 < 0) throw new RangeError("offset is not uint");
                                    if (t5 + e3 > r3) throw new RangeError("Trying to access beyond buffer length");
                                }
                                function k(t5, e3, r3, n2, i2, o2) {
                                    if (!u.isBuffer(t5)) throw new TypeError('"buffer" argument must be a Buffer instance');
                                    if (e3 > i2 || e3 < o2) throw new RangeError('"value" argument is out of bounds');
                                    if (r3 + n2 > t5.length) throw new RangeError("Index out of range");
                                }
                                function F(t5, e3, r3, n2) {
                                    e3 < 0 && (e3 = 65535 + e3 + 1);
                                    for(var i2 = 0, o2 = Math.min(t5.length - r3, 2); i2 < o2; ++i2)t5[r3 + i2] = (e3 & 255 << 8 * (n2 ? i2 : 1 - i2)) >>> 8 * (n2 ? i2 : 1 - i2);
                                }
                                function R(t5, e3, r3, n2) {
                                    e3 < 0 && (e3 = 4294967295 + e3 + 1);
                                    for(var i2 = 0, o2 = Math.min(t5.length - r3, 4); i2 < o2; ++i2)t5[r3 + i2] = e3 >>> 8 * (n2 ? i2 : 3 - i2) & 255;
                                }
                                function M(t5, e3, r3, n2, i2, o2) {
                                    if (r3 + n2 > t5.length) throw new RangeError("Index out of range");
                                    if (r3 < 0) throw new RangeError("Index out of range");
                                }
                                function N(t5, e3, r3, n2, o2) {
                                    return o2 || M(t5, 0, r3, 4), i.write(t5, e3, r3, n2, 23, 4), r3 + 4;
                                }
                                function L(t5, e3, r3, n2, o2) {
                                    return o2 || M(t5, 0, r3, 8), i.write(t5, e3, r3, n2, 52, 8), r3 + 8;
                                }
                                u.prototype.slice = function(t5, e3) {
                                    var r3, n2 = this.length;
                                    if ((t5 = ~~t5) < 0 ? (t5 += n2) < 0 && (t5 = 0) : t5 > n2 && (t5 = n2), (e3 = e3 === void 0 ? n2 : ~~e3) < 0 ? (e3 += n2) < 0 && (e3 = 0) : e3 > n2 && (e3 = n2), e3 < t5 && (e3 = t5), u.TYPED_ARRAY_SUPPORT) (r3 = this.subarray(t5, e3)).__proto__ = u.prototype;
                                    else {
                                        var i2 = e3 - t5;
                                        r3 = new u(i2, void 0);
                                        for(var o2 = 0; o2 < i2; ++o2)r3[o2] = this[o2 + t5];
                                    }
                                    return r3;
                                }, u.prototype.readUIntLE = function(t5, e3, r3) {
                                    t5 |= 0, e3 |= 0, r3 || I(t5, e3, this.length);
                                    for(var n2 = this[t5], i2 = 1, o2 = 0; ++o2 < e3 && (i2 *= 256);)n2 += this[t5 + o2] * i2;
                                    return n2;
                                }, u.prototype.readUIntBE = function(t5, e3, r3) {
                                    t5 |= 0, e3 |= 0, r3 || I(t5, e3, this.length);
                                    for(var n2 = this[t5 + --e3], i2 = 1; e3 > 0 && (i2 *= 256);)n2 += this[t5 + --e3] * i2;
                                    return n2;
                                }, u.prototype.readUInt8 = function(t5, e3) {
                                    return e3 || I(t5, 1, this.length), this[t5];
                                }, u.prototype.readUInt16LE = function(t5, e3) {
                                    return e3 || I(t5, 2, this.length), this[t5] | this[t5 + 1] << 8;
                                }, u.prototype.readUInt16BE = function(t5, e3) {
                                    return e3 || I(t5, 2, this.length), this[t5] << 8 | this[t5 + 1];
                                }, u.prototype.readUInt32LE = function(t5, e3) {
                                    return e3 || I(t5, 4, this.length), (this[t5] | this[t5 + 1] << 8 | this[t5 + 2] << 16) + 16777216 * this[t5 + 3];
                                }, u.prototype.readUInt32BE = function(t5, e3) {
                                    return e3 || I(t5, 4, this.length), 16777216 * this[t5] + (this[t5 + 1] << 16 | this[t5 + 2] << 8 | this[t5 + 3]);
                                }, u.prototype.readIntLE = function(t5, e3, r3) {
                                    t5 |= 0, e3 |= 0, r3 || I(t5, e3, this.length);
                                    for(var n2 = this[t5], i2 = 1, o2 = 0; ++o2 < e3 && (i2 *= 256);)n2 += this[t5 + o2] * i2;
                                    return n2 >= (i2 *= 128) && (n2 -= Math.pow(2, 8 * e3)), n2;
                                }, u.prototype.readIntBE = function(t5, e3, r3) {
                                    t5 |= 0, e3 |= 0, r3 || I(t5, e3, this.length);
                                    for(var n2 = e3, i2 = 1, o2 = this[t5 + --n2]; n2 > 0 && (i2 *= 256);)o2 += this[t5 + --n2] * i2;
                                    return o2 >= (i2 *= 128) && (o2 -= Math.pow(2, 8 * e3)), o2;
                                }, u.prototype.readInt8 = function(t5, e3) {
                                    return e3 || I(t5, 1, this.length), 128 & this[t5] ? -1 * (255 - this[t5] + 1) : this[t5];
                                }, u.prototype.readInt16LE = function(t5, e3) {
                                    e3 || I(t5, 2, this.length);
                                    var r3 = this[t5] | this[t5 + 1] << 8;
                                    return 32768 & r3 ? 4294901760 | r3 : r3;
                                }, u.prototype.readInt16BE = function(t5, e3) {
                                    e3 || I(t5, 2, this.length);
                                    var r3 = this[t5 + 1] | this[t5] << 8;
                                    return 32768 & r3 ? 4294901760 | r3 : r3;
                                }, u.prototype.readInt32LE = function(t5, e3) {
                                    return e3 || I(t5, 4, this.length), this[t5] | this[t5 + 1] << 8 | this[t5 + 2] << 16 | this[t5 + 3] << 24;
                                }, u.prototype.readInt32BE = function(t5, e3) {
                                    return e3 || I(t5, 4, this.length), this[t5] << 24 | this[t5 + 1] << 16 | this[t5 + 2] << 8 | this[t5 + 3];
                                }, u.prototype.readFloatLE = function(t5, e3) {
                                    return e3 || I(t5, 4, this.length), i.read(this, t5, true, 23, 4);
                                }, u.prototype.readFloatBE = function(t5, e3) {
                                    return e3 || I(t5, 4, this.length), i.read(this, t5, false, 23, 4);
                                }, u.prototype.readDoubleLE = function(t5, e3) {
                                    return e3 || I(t5, 8, this.length), i.read(this, t5, true, 52, 8);
                                }, u.prototype.readDoubleBE = function(t5, e3) {
                                    return e3 || I(t5, 8, this.length), i.read(this, t5, false, 52, 8);
                                }, u.prototype.writeUIntLE = function(t5, e3, r3, n2) {
                                    t5 = +t5, e3 |= 0, r3 |= 0, n2 || k(this, t5, e3, r3, Math.pow(2, 8 * r3) - 1, 0);
                                    var i2 = 1, o2 = 0;
                                    for(this[e3] = 255 & t5; ++o2 < r3 && (i2 *= 256);)this[e3 + o2] = t5 / i2 & 255;
                                    return e3 + r3;
                                }, u.prototype.writeUIntBE = function(t5, e3, r3, n2) {
                                    t5 = +t5, e3 |= 0, r3 |= 0, n2 || k(this, t5, e3, r3, Math.pow(2, 8 * r3) - 1, 0);
                                    var i2 = r3 - 1, o2 = 1;
                                    for(this[e3 + i2] = 255 & t5; --i2 >= 0 && (o2 *= 256);)this[e3 + i2] = t5 / o2 & 255;
                                    return e3 + r3;
                                }, u.prototype.writeUInt8 = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 1, 255, 0), u.TYPED_ARRAY_SUPPORT || (t5 = Math.floor(t5)), this[e3] = 255 & t5, e3 + 1;
                                }, u.prototype.writeUInt16LE = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[e3] = 255 & t5, this[e3 + 1] = t5 >>> 8) : F(this, t5, e3, true), e3 + 2;
                                }, u.prototype.writeUInt16BE = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[e3] = t5 >>> 8, this[e3 + 1] = 255 & t5) : F(this, t5, e3, false), e3 + 2;
                                }, u.prototype.writeUInt32LE = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[e3 + 3] = t5 >>> 24, this[e3 + 2] = t5 >>> 16, this[e3 + 1] = t5 >>> 8, this[e3] = 255 & t5) : R(this, t5, e3, true), e3 + 4;
                                }, u.prototype.writeUInt32BE = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[e3] = t5 >>> 24, this[e3 + 1] = t5 >>> 16, this[e3 + 2] = t5 >>> 8, this[e3 + 3] = 255 & t5) : R(this, t5, e3, false), e3 + 4;
                                }, u.prototype.writeIntLE = function(t5, e3, r3, n2) {
                                    if (t5 = +t5, e3 |= 0, !n2) {
                                        var i2 = Math.pow(2, 8 * r3 - 1);
                                        k(this, t5, e3, r3, i2 - 1, -i2);
                                    }
                                    var o2 = 0, s2 = 1, a2 = 0;
                                    for(this[e3] = 255 & t5; ++o2 < r3 && (s2 *= 256);)t5 < 0 && a2 === 0 && this[e3 + o2 - 1] !== 0 && (a2 = 1), this[e3 + o2] = (t5 / s2 >> 0) - a2 & 255;
                                    return e3 + r3;
                                }, u.prototype.writeIntBE = function(t5, e3, r3, n2) {
                                    if (t5 = +t5, e3 |= 0, !n2) {
                                        var i2 = Math.pow(2, 8 * r3 - 1);
                                        k(this, t5, e3, r3, i2 - 1, -i2);
                                    }
                                    var o2 = r3 - 1, s2 = 1, a2 = 0;
                                    for(this[e3 + o2] = 255 & t5; --o2 >= 0 && (s2 *= 256);)t5 < 0 && a2 === 0 && this[e3 + o2 + 1] !== 0 && (a2 = 1), this[e3 + o2] = (t5 / s2 >> 0) - a2 & 255;
                                    return e3 + r3;
                                }, u.prototype.writeInt8 = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 1, 127, -128), u.TYPED_ARRAY_SUPPORT || (t5 = Math.floor(t5)), t5 < 0 && (t5 = 255 + t5 + 1), this[e3] = 255 & t5, e3 + 1;
                                }, u.prototype.writeInt16LE = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[e3] = 255 & t5, this[e3 + 1] = t5 >>> 8) : F(this, t5, e3, true), e3 + 2;
                                }, u.prototype.writeInt16BE = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[e3] = t5 >>> 8, this[e3 + 1] = 255 & t5) : F(this, t5, e3, false), e3 + 2;
                                }, u.prototype.writeInt32LE = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 4, 2147483647, -2147483648), u.TYPED_ARRAY_SUPPORT ? (this[e3] = 255 & t5, this[e3 + 1] = t5 >>> 8, this[e3 + 2] = t5 >>> 16, this[e3 + 3] = t5 >>> 24) : R(this, t5, e3, true), e3 + 4;
                                }, u.prototype.writeInt32BE = function(t5, e3, r3) {
                                    return t5 = +t5, e3 |= 0, r3 || k(this, t5, e3, 4, 2147483647, -2147483648), t5 < 0 && (t5 = 4294967295 + t5 + 1), u.TYPED_ARRAY_SUPPORT ? (this[e3] = t5 >>> 24, this[e3 + 1] = t5 >>> 16, this[e3 + 2] = t5 >>> 8, this[e3 + 3] = 255 & t5) : R(this, t5, e3, false), e3 + 4;
                                }, u.prototype.writeFloatLE = function(t5, e3, r3) {
                                    return N(this, t5, e3, true, r3);
                                }, u.prototype.writeFloatBE = function(t5, e3, r3) {
                                    return N(this, t5, e3, false, r3);
                                }, u.prototype.writeDoubleLE = function(t5, e3, r3) {
                                    return L(this, t5, e3, true, r3);
                                }, u.prototype.writeDoubleBE = function(t5, e3, r3) {
                                    return L(this, t5, e3, false, r3);
                                }, u.prototype.copy = function(t5, e3, r3, n2) {
                                    if (r3 || (r3 = 0), n2 || n2 === 0 || (n2 = this.length), e3 >= t5.length && (e3 = t5.length), e3 || (e3 = 0), n2 > 0 && n2 < r3 && (n2 = r3), n2 === r3) return 0;
                                    if (t5.length === 0 || this.length === 0) return 0;
                                    if (e3 < 0) throw new RangeError("targetStart out of bounds");
                                    if (r3 < 0 || r3 >= this.length) throw new RangeError("sourceStart out of bounds");
                                    if (n2 < 0) throw new RangeError("sourceEnd out of bounds");
                                    n2 > this.length && (n2 = this.length), t5.length - e3 < n2 - r3 && (n2 = t5.length - e3 + r3);
                                    var i2, o2 = n2 - r3;
                                    if (this === t5 && r3 < e3 && e3 < n2) for(i2 = o2 - 1; i2 >= 0; --i2)t5[i2 + e3] = this[i2 + r3];
                                    else if (o2 < 1e3 || !u.TYPED_ARRAY_SUPPORT) for(i2 = 0; i2 < o2; ++i2)t5[i2 + e3] = this[i2 + r3];
                                    else Uint8Array.prototype.set.call(t5, this.subarray(r3, r3 + o2), e3);
                                    return o2;
                                }, u.prototype.fill = function(t5, e3, r3, n2) {
                                    if (typeof t5 == "string") {
                                        if (typeof e3 == "string" ? (n2 = e3, e3 = 0, r3 = this.length) : typeof r3 == "string" && (n2 = r3, r3 = this.length), t5.length === 1) {
                                            var i2 = t5.charCodeAt(0);
                                            i2 < 256 && (t5 = i2);
                                        }
                                        if (n2 !== void 0 && typeof n2 != "string") throw new TypeError("encoding must be a string");
                                        if (typeof n2 == "string" && !u.isEncoding(n2)) throw new TypeError("Unknown encoding: " + n2);
                                    } else typeof t5 == "number" && (t5 &= 255);
                                    if (e3 < 0 || this.length < e3 || this.length < r3) throw new RangeError("Out of range index");
                                    if (r3 <= e3) return this;
                                    var o2;
                                    if (e3 >>>= 0, r3 = r3 === void 0 ? this.length : r3 >>> 0, t5 || (t5 = 0), typeof t5 == "number") for(o2 = e3; o2 < r3; ++o2)this[o2] = t5;
                                    else {
                                        var s2 = u.isBuffer(t5) ? t5 : V(new u(t5, n2).toString()), a2 = s2.length;
                                        for(o2 = 0; o2 < r3 - e3; ++o2)this[o2 + e3] = s2[o2 % a2];
                                    }
                                    return this;
                                };
                                var U = /[^+\/0-9A-Za-z-_]/g;
                                function B(t5) {
                                    return t5 < 16 ? "0" + t5.toString(16) : t5.toString(16);
                                }
                                function V(t5, e3) {
                                    var r3;
                                    e3 = e3 || 1 / 0;
                                    for(var n2 = t5.length, i2 = null, o2 = [], s2 = 0; s2 < n2; ++s2){
                                        if ((r3 = t5.charCodeAt(s2)) > 55295 && r3 < 57344) {
                                            if (!i2) {
                                                if (r3 > 56319) {
                                                    (e3 -= 3) > -1 && o2.push(239, 191, 189);
                                                    continue;
                                                }
                                                if (s2 + 1 === n2) {
                                                    (e3 -= 3) > -1 && o2.push(239, 191, 189);
                                                    continue;
                                                }
                                                i2 = r3;
                                                continue;
                                            }
                                            if (r3 < 56320) {
                                                (e3 -= 3) > -1 && o2.push(239, 191, 189), i2 = r3;
                                                continue;
                                            }
                                            r3 = 65536 + (i2 - 55296 << 10 | r3 - 56320);
                                        } else i2 && (e3 -= 3) > -1 && o2.push(239, 191, 189);
                                        if (i2 = null, r3 < 128) {
                                            if ((e3 -= 1) < 0) break;
                                            o2.push(r3);
                                        } else if (r3 < 2048) {
                                            if ((e3 -= 2) < 0) break;
                                            o2.push(r3 >> 6 | 192, 63 & r3 | 128);
                                        } else if (r3 < 65536) {
                                            if ((e3 -= 3) < 0) break;
                                            o2.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
                                        } else {
                                            if (!(r3 < 1114112)) throw new Error("Invalid code point");
                                            if ((e3 -= 4) < 0) break;
                                            o2.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
                                        }
                                    }
                                    return o2;
                                }
                                function $(t5) {
                                    return n.toByteArray(function(t6) {
                                        if ((t6 = (function(t7) {
                                            return t7.trim ? t7.trim() : t7.replace(/^\s+|\s+$/g, "");
                                        })(t6).replace(U, "")).length < 2) return "";
                                        for(; t6.length % 4 != 0;)t6 += "=";
                                        return t6;
                                    }(t5));
                                }
                                function G(t5, e3, r3, n2) {
                                    for(var i2 = 0; i2 < n2 && !(i2 + r3 >= e3.length || i2 >= t5.length); ++i2)e3[i2 + r3] = t5[i2];
                                    return i2;
                                }
                            }).call(this, r2(6));
                        },
                        function(t3, e2) {
                            var r2;
                            r2 = function() {
                                return this;
                            }();
                            try {
                                r2 = r2 || new Function("return this")();
                            } catch (t4) {
                                typeof window == "object" && (r2 = window);
                            }
                            t3.exports = r2;
                        },
                        function(t3, e2, r2) {
                            e2.byteLength = function(t4) {
                                var e3 = c(t4), r3 = e3[0], n2 = e3[1];
                                return 3 * (r3 + n2) / 4 - n2;
                            }, e2.toByteArray = function(t4) {
                                var e3, r3, n2 = c(t4), s2 = n2[0], a2 = n2[1], u2 = new o(function(t5, e4, r4) {
                                    return 3 * (e4 + r4) / 4 - r4;
                                }(0, s2, a2)), l2 = 0, h = a2 > 0 ? s2 - 4 : s2;
                                for(r3 = 0; r3 < h; r3 += 4)e3 = i[t4.charCodeAt(r3)] << 18 | i[t4.charCodeAt(r3 + 1)] << 12 | i[t4.charCodeAt(r3 + 2)] << 6 | i[t4.charCodeAt(r3 + 3)], u2[l2++] = e3 >> 16 & 255, u2[l2++] = e3 >> 8 & 255, u2[l2++] = 255 & e3;
                                return a2 === 2 && (e3 = i[t4.charCodeAt(r3)] << 2 | i[t4.charCodeAt(r3 + 1)] >> 4, u2[l2++] = 255 & e3), a2 === 1 && (e3 = i[t4.charCodeAt(r3)] << 10 | i[t4.charCodeAt(r3 + 1)] << 4 | i[t4.charCodeAt(r3 + 2)] >> 2, u2[l2++] = e3 >> 8 & 255, u2[l2++] = 255 & e3), u2;
                            }, e2.fromByteArray = function(t4) {
                                for(var e3, r3 = t4.length, i2 = r3 % 3, o2 = [], s2 = 0, a2 = r3 - i2; s2 < a2; s2 += 16383)o2.push(l(t4, s2, s2 + 16383 > a2 ? a2 : s2 + 16383));
                                return i2 === 1 ? (e3 = t4[r3 - 1], o2.push(n[e3 >> 2] + n[e3 << 4 & 63] + "==")) : i2 === 2 && (e3 = (t4[r3 - 2] << 8) + t4[r3 - 1], o2.push(n[e3 >> 10] + n[e3 >> 4 & 63] + n[e3 << 2 & 63] + "=")), o2.join("");
                            };
                            for(var n = [], i = [], o = typeof Uint8Array != "undefined" ? Uint8Array : Array, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, u = s.length; a < u; ++a)n[a] = s[a], i[s.charCodeAt(a)] = a;
                            function c(t4) {
                                var e3 = t4.length;
                                if (e3 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                                var r3 = t4.indexOf("=");
                                return r3 === -1 && (r3 = e3), [
                                    r3,
                                    r3 === e3 ? 0 : 4 - r3 % 4
                                ];
                            }
                            function l(t4, e3, r3) {
                                for(var i2, o2, s2 = [], a2 = e3; a2 < r3; a2 += 3)i2 = (t4[a2] << 16 & 16711680) + (t4[a2 + 1] << 8 & 65280) + (255 & t4[a2 + 2]), s2.push(n[(o2 = i2) >> 18 & 63] + n[o2 >> 12 & 63] + n[o2 >> 6 & 63] + n[63 & o2]);
                                return s2.join("");
                            }
                            i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63;
                        },
                        function(t3, e2) {
                            e2.read = function(t4, e3, r2, n, i) {
                                var o, s, a = 8 * i - n - 1, u = (1 << a) - 1, c = u >> 1, l = -7, h = r2 ? i - 1 : 0, f = r2 ? -1 : 1, d = t4[e3 + h];
                                for(h += f, o = d & (1 << -l) - 1, d >>= -l, l += a; l > 0; o = 256 * o + t4[e3 + h], h += f, l -= 8);
                                for(s = o & (1 << -l) - 1, o >>= -l, l += n; l > 0; s = 256 * s + t4[e3 + h], h += f, l -= 8);
                                if (o === 0) o = 1 - c;
                                else {
                                    if (o === u) return s ? NaN : 1 / 0 * (d ? -1 : 1);
                                    s += Math.pow(2, n), o -= c;
                                }
                                return (d ? -1 : 1) * s * Math.pow(2, o - n);
                            }, e2.write = function(t4, e3, r2, n, i, o) {
                                var s, a, u, c = 8 * o - i - 1, l = (1 << c) - 1, h = l >> 1, f = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = n ? 0 : o - 1, p = n ? 1 : -1, g = e3 < 0 || e3 === 0 && 1 / e3 < 0 ? 1 : 0;
                                for(e3 = Math.abs(e3), isNaN(e3) || e3 === 1 / 0 ? (a = isNaN(e3) ? 1 : 0, s = l) : (s = Math.floor(Math.log(e3) / Math.LN2), e3 * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (e3 += s + h >= 1 ? f / u : f * Math.pow(2, 1 - h)) * u >= 2 && (s++, u /= 2), s + h >= l ? (a = 0, s = l) : s + h >= 1 ? (a = (e3 * u - 1) * Math.pow(2, i), s += h) : (a = e3 * Math.pow(2, h - 1) * Math.pow(2, i), s = 0)); i >= 8; t4[r2 + d] = 255 & a, d += p, a /= 256, i -= 8);
                                for(s = s << i | a, c += i; c > 0; t4[r2 + d] = 255 & s, d += p, s /= 256, c -= 8);
                                t4[r2 + d - p] |= 128 * g;
                            };
                        },
                        function(t3, e2) {
                            var r2 = {}.toString;
                            t3.exports = Array.isArray || function(t4) {
                                return r2.call(t4) == "[object Array]";
                            };
                        },
                        function(t3, e2, r2) {
                            r2.r(e2);
                            var n = r2(2), i = r2(1), o = r2(0);
                            function s(t4, e3, r3) {
                                return r3 ? e3 ? e3(t4) : t4 : (t4 && t4.then || (t4 = Promise.resolve(t4)), e3 ? t4.then(e3) : t4);
                            }
                            function a(t4) {
                                return function() {
                                    for(var e3 = [], r3 = 0; r3 < arguments.length; r3++)e3[r3] = arguments[r3];
                                    try {
                                        return Promise.resolve(t4.apply(this, e3));
                                    } catch (t5) {
                                        return Promise.reject(t5);
                                    }
                                };
                            }
                            var u = a(function(t4) {
                                if (t4 <= 0) throw new Error("Failed generating salt: Invalid length supplied: ".concat(t4));
                                for(var e3 = b(), r3 = ""; r3.length < t4;){
                                    var n2 = new Uint8Array(3);
                                    e3.getRandomValues(n2);
                                    var i2 = n2.reduce(function(t5, e4) {
                                        return t5 + String.fromCharCode(e4);
                                    }, "");
                                    (r3 += btoa(i2)).length > t4 && (r3 = r3.substr(0, t4));
                                }
                                return r3;
                            }), c = a(function() {
                                var t4 = new Uint8Array(16);
                                return b().getRandomValues(t4), t4.buffer;
                            }), l = a(function(t4, e3, r3) {
                                var i2 = b(), a2 = e3.rounds, u2 = new Uint8Array(r3), c2 = Object(o.c)(r3), l2 = typeof t4 == "string", h2 = l2 ? Object(o.i)(t4) : t4;
                                return s(i2.subtle.importKey("raw", e3.key, {
                                    name: g
                                }, false, [
                                    "encrypt"
                                ]), function(t5) {
                                    return s(i2.subtle.encrypt({
                                        name: g,
                                        iv: u2,
                                        additionalData: Object(o.i)("".concat(c2).concat(e3.salt))
                                    }, t5, h2), function(t6) {
                                        var r4, i3, s2 = function(t7, e4) {
                                            return function(t8) {
                                                if (Array.isArray(t8)) return t8;
                                            }(t7) || function(t8, e5) {
                                                if (Symbol.iterator in Object(t8) || Object.prototype.toString.call(t8) === "[object Arguments]") {
                                                    var r5 = [], n2 = true, i4 = false, o2 = void 0;
                                                    try {
                                                        for(var s3, a3 = t8[Symbol.iterator](); !(n2 = (s3 = a3.next()).done) && (r5.push(s3.value), !e5 || r5.length !== e5); n2 = true);
                                                    } catch (t9) {
                                                        i4 = true, o2 = t9;
                                                    } finally{
                                                        try {
                                                            n2 || a3.return == null || a3.return();
                                                        } finally{
                                                            if (i4) throw o2;
                                                        }
                                                    }
                                                    return r5;
                                                }
                                            }(t7, e4) || function() {
                                                throw new TypeError("Invalid attempt to destructure non-iterable instance");
                                            }();
                                        }((i3 = y / 8, [
                                            (r4 = t6).slice(0, r4.byteLength - i3),
                                            r4.slice(r4.byteLength - i3)
                                        ]), 2), u3 = s2[0], h3 = s2[1], f2 = Object(o.c)(h3), d2 = l2 ? Object(o.b)(u3) : u3;
                                        return {
                                            method: n.a.GCM,
                                            iv: c2,
                                            salt: e3.salt,
                                            rounds: a2,
                                            content: d2,
                                            auth: f2
                                        };
                                    });
                                });
                            }), h = a(function(t4, e3, r3) {
                                var i2 = b(), a2 = e3.rounds, u2 = e3.salt, c2 = new Uint16Array(r3), l2 = Object(o.c)(r3), h2 = typeof t4 == "string", f2 = h2 ? Object(o.i)(t4) : t4;
                                return s(i2.subtle.importKey("raw", e3.key, {
                                    name: p
                                }, false, [
                                    "encrypt"
                                ]), function(t5) {
                                    return s(i2.subtle.importKey("raw", e3.hmac, {
                                        name: v,
                                        hash: m
                                    }, false, [
                                        "sign"
                                    ]), function(e4) {
                                        return s(i2.subtle.encrypt({
                                            name: p,
                                            iv: c2
                                        }, t5, f2), function(t6) {
                                            var r4 = h2 ? Object(o.b)(t6) : t6, i3 = h2 ? Object(o.i)("".concat(r4).concat(l2).concat(u2)) : Object(o.g)([
                                                r4,
                                                Object(o.i)(l2),
                                                Object(o.i)(u2)
                                            ]);
                                            return s(window.crypto.subtle.sign(v, e4, i3), function(t7) {
                                                var e5 = Object(o.c)(t7);
                                                return {
                                                    method: n.a.CBC,
                                                    auth: e5,
                                                    iv: l2,
                                                    salt: u2,
                                                    rounds: a2,
                                                    content: r4
                                                };
                                            });
                                        });
                                    });
                                });
                            }), f = a(function(t4, e3) {
                                var r3 = b(), n2 = t4.auth, i2 = t4.content, a2 = t4.iv, u2 = t4.salt, c2 = Object(o.h)(a2), l2 = Object(o.h)(n2), h2 = typeof i2 == "string", f2 = h2 ? Object(o.g)([
                                    Object(o.f)(i2),
                                    l2
                                ]) : Object(o.g)([
                                    i2,
                                    l2
                                ]);
                                return s(r3.subtle.importKey("raw", e3.key, {
                                    name: g
                                }, false, [
                                    "decrypt"
                                ]), function(t5) {
                                    return s(r3.subtle.decrypt({
                                        name: g,
                                        iv: c2,
                                        additionalData: Object(o.i)("".concat(a2).concat(u2))
                                    }, t5, f2), function(t6) {
                                        return h2 ? Object(o.d)(t6) : t6;
                                    });
                                });
                            }), d = a(function(t4, e3) {
                                var r3 = b(), n2 = t4.auth, i2 = t4.content, a2 = t4.iv, u2 = t4.salt, c2 = Object(o.h)(a2), l2 = Object(o.i)(a2), h2 = Object(o.i)(u2), f2 = Object(o.h)(n2), d2 = typeof i2 == "string", g2 = d2 ? Object(o.f)(i2) : i2;
                                return s(r3.subtle.importKey("raw", e3.key, {
                                    name: p
                                }, false, [
                                    "decrypt"
                                ]), function(t5) {
                                    return s(r3.subtle.importKey("raw", e3.hmac, {
                                        name: v,
                                        hash: m
                                    }, false, [
                                        "verify"
                                    ]), function(e4) {
                                        var n3 = d2 ? Object(o.i)("".concat(i2).concat(a2).concat(u2)) : Object(o.g)([
                                            g2,
                                            l2,
                                            h2
                                        ]);
                                        return s(r3.subtle.verify(v, e4, f2, n3), function(e5) {
                                            if (!e5) throw new Error("Authentication failed while decrypting content");
                                            return s(r3.subtle.decrypt({
                                                name: p,
                                                iv: c2
                                            }, t5, g2), function(t6) {
                                                return d2 ? Object(o.d)(t6) : t6;
                                            });
                                        });
                                    });
                                });
                            }), p = "AES-CBC", g = "AES-GCM", y = 128, m = "SHA-256", v = "HMAC";
                            function b() {
                                return window.crypto || window.msCrypto;
                            }
                            function _(t4, e3) {
                                return function(t5) {
                                    if (Array.isArray(t5)) return t5;
                                }(t4) || function(t5, e4) {
                                    if (Symbol.iterator in Object(t5) || Object.prototype.toString.call(t5) === "[object Arguments]") {
                                        var r3 = [], n2 = true, i2 = false, o2 = void 0;
                                        try {
                                            for(var s2, a2 = t5[Symbol.iterator](); !(n2 = (s2 = a2.next()).done) && (r3.push(s2.value), !e4 || r3.length !== e4); n2 = true);
                                        } catch (t6) {
                                            i2 = true, o2 = t6;
                                        } finally{
                                            try {
                                                n2 || a2.return == null || a2.return();
                                            } finally{
                                                if (i2) throw o2;
                                            }
                                        }
                                        return r3;
                                    }
                                }(t4, e3) || function() {
                                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                                }();
                            }
                            function w(t4, e3, r3) {
                                return r3 ? e3 ? e3(t4) : t4 : (t4 && t4.then || (t4 = Promise.resolve(t4)), e3 ? t4.then(e3) : t4);
                            }
                            function E(t4) {
                                return function() {
                                    for(var e3 = [], r3 = 0; r3 < arguments.length; r3++)e3[r3] = arguments[r3];
                                    try {
                                        return Promise.resolve(t4.apply(this, e3));
                                    } catch (t5) {
                                        return Promise.reject(t5);
                                    }
                                };
                            }
                            var A = E(function(t4, e3, r3, n2) {
                                !function() {
                                    if (!window.TextEncoder || !window.TextDecoder) throw new Error("TextEncoder is not available");
                                }();
                                var i2 = window.crypto.subtle, s2 = {
                                    name: "PBKDF2",
                                    hash: "SHA-256",
                                    salt: Object(o.i)(e3),
                                    iterations: r3
                                }, a2 = n2 / 8 / 2;
                                return w(i2.importKey("raw", Object(o.i)(t4), {
                                    name: "PBKDF2"
                                }, false, [
                                    "deriveBits"
                                ]), function(t5) {
                                    return w(i2.deriveBits(s2, t5, n2), function(t6) {
                                        return w(Promise.all([
                                            i2.importKey("raw", t6.slice(0, a2), "AES-CBC", true, [
                                                "encrypt",
                                                "decrypt"
                                            ]),
                                            i2.importKey("raw", t6.slice(a2, 2 * a2), "AES-CBC", true, [
                                                "encrypt",
                                                "decrypt"
                                            ])
                                        ]), function(t7) {
                                            var e4 = _(t7, 2), r4 = e4[0], n3 = e4[1];
                                            return w(Promise.all([
                                                i2.exportKey("raw", r4),
                                                i2.exportKey("raw", n3)
                                            ]), function(t8) {
                                                var e5 = _(t8, 2), r5 = e5[0], n4 = e5[1];
                                                return Object(o.g)([
                                                    r5,
                                                    n4
                                                ]);
                                            });
                                        });
                                    });
                                });
                            }), S = E(function(t4, e3, r3) {
                                var n2 = !(arguments.length > 3 && arguments[3] !== void 0) || arguments[3];
                                if (!t4) throw new Error("Failed deriving key: Password must be provided");
                                if (!e3) throw new Error("Failed deriving key: Salt must be provided");
                                if (!r3 || r3 <= 0) throw new Error("Failed deriving key: Rounds must be greater than 0");
                                var s2 = n2 ? 8 * (i.h + i.d) : 8 * i.h;
                                return w(A(t4, e3, r3, s2), function(t5) {
                                    var i2 = Object(o.c)(t5), s3 = i2.length, a2 = n2 ? Object(o.h)(i2.substr(0, s3 / 2)) : Object(o.h)(i2);
                                    return {
                                        salt: e3,
                                        key: a2,
                                        rounds: r3,
                                        hmac: n2 ? Object(o.h)(i2.substr(s3 / 2, s3 / 2)) : null
                                    };
                                });
                            });
                            function P(t4) {
                                return [
                                    t4.content,
                                    t4.iv,
                                    t4.salt,
                                    t4.auth,
                                    t4.rounds,
                                    t4.method
                                ].join("$");
                            }
                            function x(t4) {
                                var e3 = function(t5, e4) {
                                    return function(t6) {
                                        if (Array.isArray(t6)) return t6;
                                    }(t5) || function(t6, e5) {
                                        if (Symbol.iterator in Object(t6) || Object.prototype.toString.call(t6) === "[object Arguments]") {
                                            var r4 = [], n3 = true, i2 = false, o3 = void 0;
                                            try {
                                                for(var s3, a3 = t6[Symbol.iterator](); !(n3 = (s3 = a3.next()).done) && (r4.push(s3.value), !e5 || r4.length !== e5); n3 = true);
                                            } catch (t7) {
                                                i2 = true, o3 = t7;
                                            } finally{
                                                try {
                                                    n3 || a3.return == null || a3.return();
                                                } finally{
                                                    if (i2) throw o3;
                                                }
                                            }
                                            return r4;
                                        }
                                    }(t5, e4) || function() {
                                        throw new TypeError("Invalid attempt to destructure non-iterable instance");
                                    }();
                                }(t4.split("$"), 6), r3 = e3[0], n2 = e3[1], o2 = e3[2], s2 = e3[3], a2 = e3[4], u2 = e3[5];
                                return {
                                    content: r3,
                                    iv: n2,
                                    salt: o2,
                                    auth: s2,
                                    rounds: a2 ? parseInt(a2, 10) : 1e3,
                                    method: u2 || i.a
                                };
                            }
                            var T = r2(4);
                            function O(t4, e3, r3) {
                                return r3 ? e3 ? e3(t4) : t4 : (t4 && t4.then || (t4 = Promise.resolve(t4)), e3 ? t4.then(e3) : t4);
                            }
                            var C = j(function(t4, e3, r3) {
                                var o2 = t4.algorithm, s2 = function(t5, e4) {
                                    if (e4 === n.a.CBC) return t5.encryptCBC;
                                    if (e4 === n.a.GCM) return t5.encryptGCM;
                                    throw new Error("Invalid algorithm: ".concat(e4));
                                }(t4, o2);
                                return O(t4.generateSalt(i.i), function(n2) {
                                    return O(Promise.all([
                                        t4.deriveKey(r3, n2),
                                        t4.generateIV()
                                    ]), function(r4) {
                                        var n3 = function(t5, e4) {
                                            return function(t6) {
                                                if (Array.isArray(t6)) return t6;
                                            }(t5) || function(t6, e5) {
                                                if (Symbol.iterator in Object(t6) || Object.prototype.toString.call(t6) === "[object Arguments]") {
                                                    var r5 = [], n4 = true, i3 = false, o4 = void 0;
                                                    try {
                                                        for(var s3, a2 = t6[Symbol.iterator](); !(n4 = (s3 = a2.next()).done) && (r5.push(s3.value), !e5 || r5.length !== e5); n4 = true);
                                                    } catch (t7) {
                                                        i3 = true, o4 = t7;
                                                    } finally{
                                                        try {
                                                            n4 || a2.return == null || a2.return();
                                                        } finally{
                                                            if (i3) throw o4;
                                                        }
                                                    }
                                                    return r5;
                                                }
                                            }(t5, e4) || function() {
                                                throw new TypeError("Invalid attempt to destructure non-iterable instance");
                                            }();
                                        }(r4, 2), i2 = n3[0], o3 = n3[1];
                                        return O(s2(e3, i2, o3), function(r5) {
                                            return typeof e3 == "string" ? t4.packText(r5) : t4.packData(r5);
                                        });
                                    });
                                });
                            });
                            function j(t4) {
                                return function() {
                                    for(var e3 = [], r3 = 0; r3 < arguments.length; r3++)e3[r3] = arguments[r3];
                                    try {
                                        return Promise.resolve(t4.apply(this, e3));
                                    } catch (t5) {
                                        return Promise.reject(t5);
                                    }
                                };
                            }
                            var D = j(function(t4, e3, r3) {
                                var i2 = t4.algorithm, o2 = t4.derivationRounds;
                                return S(e3, r3, o2, i2 !== n.a.GCM);
                            }), I = j(function(t4, e3, r3) {
                                var i2 = typeof e3 == "string" ? t4.unpackText(e3) : t4.unpackData(e3), o2 = i2.salt, s2 = i2.rounds, a2 = i2.method, u2 = function(t5, e4) {
                                    if (e4 === n.a.CBC) return t5.decryptCBC;
                                    if (e4 === n.a.GCM) return t5.decryptGCM;
                                    throw new Error("Invalid algorithm: ".concat(e4));
                                }(t4, a2);
                                return t4.algorithm = a2, t4.derivationRounds = s2, O(t4.deriveKey(r3, o2), function(t5) {
                                    return u2(i2, t5);
                                });
                            });
                            function k() {
                                var t4 = {
                                    algorithm: i.a,
                                    decrypt: function(e3, r3) {
                                        return I(t4, e3, r3);
                                    },
                                    decryptCBC: d,
                                    decryptGCM: f,
                                    derivationRounds: i.c,
                                    deriveKey: function(e3, r3) {
                                        return D(t4, e3, r3);
                                    },
                                    encrypt: function(e3, r3) {
                                        return C(t4, e3, r3);
                                    },
                                    encryptCBC: h,
                                    encryptGCM: l,
                                    generateIV: c,
                                    generateSalt: u,
                                    packData: T.a,
                                    packText: P,
                                    setAlgorithm: function(e3) {
                                        return t4.algorithm = e3, t4;
                                    },
                                    setDerivationRounds: function(e3) {
                                        return t4.derivationRounds = e3, t4;
                                    },
                                    unpackData: T.b,
                                    unpackText: x
                                };
                                return t4;
                            }
                            r2.d(e2, "EncryptionAlgorithm", function() {
                                return n.a;
                            }), r2.d(e2, "ALGO_DEFAULT", function() {
                                return i.a;
                            }), r2.d(e2, "DERIVED_KEY_ALGORITHM", function() {
                                return i.b;
                            }), r2.d(e2, "DERIVED_KEY_ITERATIONS", function() {
                                return i.c;
                            }), r2.d(e2, "HMAC_KEY_SIZE", function() {
                                return i.d;
                            }), r2.d(e2, "NODE_ENC_ALGORITHM_CBC", function() {
                                return i.e;
                            }), r2.d(e2, "NODE_ENC_ALGORITHM_GCM", function() {
                                return i.f;
                            }), r2.d(e2, "NODE_HMAC_ALGORITHM", function() {
                                return i.g;
                            }), r2.d(e2, "PASSWORD_KEY_SIZE", function() {
                                return i.h;
                            }), r2.d(e2, "SALT_LENGTH", function() {
                                return i.i;
                            }), r2.d(e2, "SIZE_ENCODING_BYTES", function() {
                                return i.j;
                            }), r2.d(e2, "createAdapter", function() {
                                return k;
                            });
                        }
                    ]);
                },
                3827: (t2, e2, r2)=>{
                    r2.d(e2, {
                        Z: ()=>i
                    });
                    var n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t3) {
                        return typeof t3;
                    } : function(t3) {
                        return t3 && typeof Symbol == "function" && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
                    };
                    const i = (typeof window == "undefined" ? "undefined" : n(window)) === "object" && (typeof document == "undefined" ? "undefined" : n(document)) === "object" && document.nodeType === 9;
                },
                6141: (t2)=>{
                    function e2(t3) {
                        return !!t3 && (typeof t3 == "object" || typeof t3 == "function") && typeof t3.then == "function";
                    }
                    t2.exports = e2, t2.exports.default = e2;
                },
                8937: (t2, e2)=>{
                    function r2(t3) {
                        return (e3 = t3, Object.prototype.toString.call(e3)) === "[object Error]" || t3 instanceof Error;
                        var e3;
                    }
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.isError = e2.inherit = e2.assertError = void 0, e2.assertError = function(t3) {
                        if (!r2(t3)) throw new Error("Parameter was not an error");
                    }, e2.inherit = function(t3, e3) {
                        t3.super_ = e3, t3.prototype = Object.create(e3.prototype, {
                            constructor: {
                                value: t3,
                                enumerable: false,
                                writable: true,
                                configurable: true
                            }
                        });
                    }, e2.isError = r2;
                },
                3572: function(t2, e2, r2) {
                    var n = this && this.__createBinding || (Object.create ? function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), Object.defineProperty(t3, n2, {
                            enumerable: true,
                            get: function() {
                                return e3[r3];
                            }
                        });
                    } : function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), t3[n2] = e3[r3];
                    }), i = this && this.__exportStar || function(t3, e3) {
                        for(var r3 in t3)r3 === "default" || Object.prototype.hasOwnProperty.call(e3, r3) || n(e3, t3, r3);
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.Layerr = void 0;
                    var o = r2(4500);
                    Object.defineProperty(e2, "Layerr", {
                        enumerable: true,
                        get: function() {
                            return o.Layerr;
                        }
                    }), i(r2(2312), e2);
                },
                4500: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.Layerr = void 0;
                    const n = r2(8937), i = r2(8085);
                    function o(t3, e3) {
                        const r3 = [
                            ...arguments
                        ];
                        if (this instanceof o == 0) throw new Error("Cannot invoke 'Layerr' like a function: It must be called with 'new'");
                        const { options: n2 , shortMessage: s  } = i.parseArguments(r3);
                        this.name = "Layerr", n2.name && typeof n2.name == "string" && (this.name = n2.name);
                        let a = s;
                        if (n2.cause && (Object.defineProperty(this, "_cause", {
                            value: n2.cause
                        }), a = `${a}: ${n2.cause.message}`), this.message = a, Object.defineProperty(this, "_info", {
                            value: {}
                        }), n2.info && typeof n2.info == "object" && Object.assign(this._info, n2.info), Error.call(this, a), Error.captureStackTrace) {
                            const t4 = n2.constructorOpt || this.constructor;
                            Error.captureStackTrace(this, t4);
                        }
                        return this;
                    }
                    e2.Layerr = o, n.inherit(o, Error), o.prototype.cause = function() {
                        return o.cause(this) || void 0;
                    }, o.prototype.toString = function() {
                        let t3 = this.name || this.constructor.name || this.constructor.prototype.name;
                        return this.message && (t3 = `${t3}: ${this.message}`), t3;
                    }, o.cause = function(t3) {
                        return n.assertError(t3), n.isError(t3._cause) ? t3._cause : null;
                    }, o.fullStack = function(t3) {
                        n.assertError(t3);
                        const e3 = o.cause(t3);
                        return e3 ? `${t3.stack}
caused by: ${o.fullStack(e3)}` : t3.stack;
                    }, o.info = function(t3) {
                        n.assertError(t3);
                        const e3 = {}, r3 = o.cause(t3);
                        return r3 && Object.assign(e3, o.info(r3)), t3._info && Object.assign(e3, t3._info), e3;
                    };
                },
                8085: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.parseArguments = void 0;
                    const n = r2(8937);
                    e2.parseArguments = function(t3) {
                        let e3, r3 = "";
                        if (t3.length === 0) e3 = {};
                        else if (n.isError(t3[0])) e3 = {
                            cause: t3[0]
                        }, r3 = t3.slice(1).join(" ") || "";
                        else if (t3[0] && typeof t3[0] == "object") e3 = Object.assign({}, t3[0]), r3 = t3.slice(1).join(" ") || "";
                        else {
                            if (typeof t3[0] != "string") throw new Error("Invalid arguments passed to Layerr");
                            e3 = {}, r3 = r3 = t3.join(" ") || "";
                        }
                        return {
                            options: e3,
                            shortMessage: r3
                        };
                    };
                },
                2312: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                },
                9746: (t2)=>{
                    function e2(t3, e3) {
                        if (!t3) throw new Error(e3 || "Assertion failed");
                    }
                    t2.exports = e2, e2.equal = function(t3, e3, r2) {
                        if (t3 != e3) throw new Error(r2 || "Assertion failed: " + t3 + " != " + e3);
                    };
                },
                9308: ()=>{},
                9591: (t2, e2, r2)=>{
                    var n = {};
                    (0, r2(4236).assign)(n, r2(4555), r2(8843), r2(1619)), t2.exports = n;
                },
                4555: (t2, e2, r2)=>{
                    var n = r2(405), i = r2(4236), o = r2(9373), s = r2(8898), a = r2(2292), u = Object.prototype.toString;
                    function c(t3) {
                        if (!(this instanceof c)) return new c(t3);
                        this.options = i.assign({
                            level: -1,
                            method: 8,
                            chunkSize: 16384,
                            windowBits: 15,
                            memLevel: 8,
                            strategy: 0,
                            to: ""
                        }, t3 || {});
                        var e3 = this.options;
                        e3.raw && e3.windowBits > 0 ? e3.windowBits = -e3.windowBits : e3.gzip && e3.windowBits > 0 && e3.windowBits < 16 && (e3.windowBits += 16), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new a(), this.strm.avail_out = 0;
                        var r3 = n.deflateInit2(this.strm, e3.level, e3.method, e3.windowBits, e3.memLevel, e3.strategy);
                        if (r3 !== 0) throw new Error(s[r3]);
                        if (e3.header && n.deflateSetHeader(this.strm, e3.header), e3.dictionary) {
                            var l2;
                            if (l2 = typeof e3.dictionary == "string" ? o.string2buf(e3.dictionary) : u.call(e3.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(e3.dictionary) : e3.dictionary, (r3 = n.deflateSetDictionary(this.strm, l2)) !== 0) throw new Error(s[r3]);
                            this._dict_set = true;
                        }
                    }
                    function l(t3, e3) {
                        var r3 = new c(e3);
                        if (r3.push(t3, true), r3.err) throw r3.msg || s[r3.err];
                        return r3.result;
                    }
                    c.prototype.push = function(t3, e3) {
                        var r3, s2, a2 = this.strm, c2 = this.options.chunkSize;
                        if (this.ended) return false;
                        s2 = e3 === ~~e3 ? e3 : e3 === true ? 4 : 0, typeof t3 == "string" ? a2.input = o.string2buf(t3) : u.call(t3) === "[object ArrayBuffer]" ? a2.input = new Uint8Array(t3) : a2.input = t3, a2.next_in = 0, a2.avail_in = a2.input.length;
                        do {
                            if (a2.avail_out === 0 && (a2.output = new i.Buf8(c2), a2.next_out = 0, a2.avail_out = c2), (r3 = n.deflate(a2, s2)) !== 1 && r3 !== 0) return this.onEnd(r3), this.ended = true, false;
                            a2.avail_out !== 0 && (a2.avail_in !== 0 || s2 !== 4 && s2 !== 2) || (this.options.to === "string" ? this.onData(o.buf2binstring(i.shrinkBuf(a2.output, a2.next_out))) : this.onData(i.shrinkBuf(a2.output, a2.next_out)));
                        }while ((a2.avail_in > 0 || a2.avail_out === 0) && r3 !== 1)
                        return s2 === 4 ? (r3 = n.deflateEnd(this.strm), this.onEnd(r3), this.ended = true, r3 === 0) : s2 !== 2 || (this.onEnd(0), a2.avail_out = 0, true);
                    }, c.prototype.onData = function(t3) {
                        this.chunks.push(t3);
                    }, c.prototype.onEnd = function(t3) {
                        t3 === 0 && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = i.flattenChunks(this.chunks)), this.chunks = [], this.err = t3, this.msg = this.strm.msg;
                    }, e2.Deflate = c, e2.deflate = l, e2.deflateRaw = function(t3, e3) {
                        return (e3 = e3 || {}).raw = true, l(t3, e3);
                    }, e2.gzip = function(t3, e3) {
                        return (e3 = e3 || {}).gzip = true, l(t3, e3);
                    };
                },
                8843: (t2, e2, r2)=>{
                    var n = r2(7948), i = r2(4236), o = r2(9373), s = r2(1619), a = r2(8898), u = r2(2292), c = r2(2401), l = Object.prototype.toString;
                    function h(t3) {
                        if (!(this instanceof h)) return new h(t3);
                        this.options = i.assign({
                            chunkSize: 16384,
                            windowBits: 0,
                            to: ""
                        }, t3 || {});
                        var e3 = this.options;
                        e3.raw && e3.windowBits >= 0 && e3.windowBits < 16 && (e3.windowBits = -e3.windowBits, e3.windowBits === 0 && (e3.windowBits = -15)), !(e3.windowBits >= 0 && e3.windowBits < 16) || t3 && t3.windowBits || (e3.windowBits += 32), e3.windowBits > 15 && e3.windowBits < 48 && (15 & e3.windowBits) == 0 && (e3.windowBits |= 15), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new u(), this.strm.avail_out = 0;
                        var r3 = n.inflateInit2(this.strm, e3.windowBits);
                        if (r3 !== s.Z_OK) throw new Error(a[r3]);
                        if (this.header = new c(), n.inflateGetHeader(this.strm, this.header), e3.dictionary && (typeof e3.dictionary == "string" ? e3.dictionary = o.string2buf(e3.dictionary) : l.call(e3.dictionary) === "[object ArrayBuffer]" && (e3.dictionary = new Uint8Array(e3.dictionary)), e3.raw && (r3 = n.inflateSetDictionary(this.strm, e3.dictionary)) !== s.Z_OK)) throw new Error(a[r3]);
                    }
                    function f(t3, e3) {
                        var r3 = new h(e3);
                        if (r3.push(t3, true), r3.err) throw r3.msg || a[r3.err];
                        return r3.result;
                    }
                    h.prototype.push = function(t3, e3) {
                        var r3, a2, u2, c2, h2, f2 = this.strm, d = this.options.chunkSize, p = this.options.dictionary, g = false;
                        if (this.ended) return false;
                        a2 = e3 === ~~e3 ? e3 : e3 === true ? s.Z_FINISH : s.Z_NO_FLUSH, typeof t3 == "string" ? f2.input = o.binstring2buf(t3) : l.call(t3) === "[object ArrayBuffer]" ? f2.input = new Uint8Array(t3) : f2.input = t3, f2.next_in = 0, f2.avail_in = f2.input.length;
                        do {
                            if (f2.avail_out === 0 && (f2.output = new i.Buf8(d), f2.next_out = 0, f2.avail_out = d), (r3 = n.inflate(f2, s.Z_NO_FLUSH)) === s.Z_NEED_DICT && p && (r3 = n.inflateSetDictionary(this.strm, p)), r3 === s.Z_BUF_ERROR && g === true && (r3 = s.Z_OK, g = false), r3 !== s.Z_STREAM_END && r3 !== s.Z_OK) return this.onEnd(r3), this.ended = true, false;
                            f2.next_out && (f2.avail_out !== 0 && r3 !== s.Z_STREAM_END && (f2.avail_in !== 0 || a2 !== s.Z_FINISH && a2 !== s.Z_SYNC_FLUSH) || (this.options.to === "string" ? (u2 = o.utf8border(f2.output, f2.next_out), c2 = f2.next_out - u2, h2 = o.buf2string(f2.output, u2), f2.next_out = c2, f2.avail_out = d - c2, c2 && i.arraySet(f2.output, f2.output, u2, c2, 0), this.onData(h2)) : this.onData(i.shrinkBuf(f2.output, f2.next_out)))), f2.avail_in === 0 && f2.avail_out === 0 && (g = true);
                        }while ((f2.avail_in > 0 || f2.avail_out === 0) && r3 !== s.Z_STREAM_END)
                        return r3 === s.Z_STREAM_END && (a2 = s.Z_FINISH), a2 === s.Z_FINISH ? (r3 = n.inflateEnd(this.strm), this.onEnd(r3), this.ended = true, r3 === s.Z_OK) : a2 !== s.Z_SYNC_FLUSH || (this.onEnd(s.Z_OK), f2.avail_out = 0, true);
                    }, h.prototype.onData = function(t3) {
                        this.chunks.push(t3);
                    }, h.prototype.onEnd = function(t3) {
                        t3 === s.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = i.flattenChunks(this.chunks)), this.chunks = [], this.err = t3, this.msg = this.strm.msg;
                    }, e2.Inflate = h, e2.inflate = f, e2.inflateRaw = function(t3, e3) {
                        return (e3 = e3 || {}).raw = true, f(t3, e3);
                    }, e2.ungzip = f;
                },
                4236: (t2, e2)=>{
                    var r2 = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Int32Array != "undefined";
                    function n(t3, e3) {
                        return Object.prototype.hasOwnProperty.call(t3, e3);
                    }
                    e2.assign = function(t3) {
                        for(var e3 = Array.prototype.slice.call(arguments, 1); e3.length;){
                            var r3 = e3.shift();
                            if (r3) {
                                if (typeof r3 != "object") throw new TypeError(r3 + "must be non-object");
                                for(var i2 in r3)n(r3, i2) && (t3[i2] = r3[i2]);
                            }
                        }
                        return t3;
                    }, e2.shrinkBuf = function(t3, e3) {
                        return t3.length === e3 ? t3 : t3.subarray ? t3.subarray(0, e3) : (t3.length = e3, t3);
                    };
                    var i = {
                        arraySet: function(t3, e3, r3, n2, i2) {
                            if (e3.subarray && t3.subarray) t3.set(e3.subarray(r3, r3 + n2), i2);
                            else for(var o2 = 0; o2 < n2; o2++)t3[i2 + o2] = e3[r3 + o2];
                        },
                        flattenChunks: function(t3) {
                            var e3, r3, n2, i2, o2, s;
                            for(n2 = 0, e3 = 0, r3 = t3.length; e3 < r3; e3++)n2 += t3[e3].length;
                            for(s = new Uint8Array(n2), i2 = 0, e3 = 0, r3 = t3.length; e3 < r3; e3++)o2 = t3[e3], s.set(o2, i2), i2 += o2.length;
                            return s;
                        }
                    }, o = {
                        arraySet: function(t3, e3, r3, n2, i2) {
                            for(var o2 = 0; o2 < n2; o2++)t3[i2 + o2] = e3[r3 + o2];
                        },
                        flattenChunks: function(t3) {
                            return [].concat.apply([], t3);
                        }
                    };
                    e2.setTyped = function(t3) {
                        t3 ? (e2.Buf8 = Uint8Array, e2.Buf16 = Uint16Array, e2.Buf32 = Int32Array, e2.assign(e2, i)) : (e2.Buf8 = Array, e2.Buf16 = Array, e2.Buf32 = Array, e2.assign(e2, o));
                    }, e2.setTyped(r2);
                },
                9373: (t2, e2, r2)=>{
                    var n = r2(4236), i = true, o = true;
                    try {
                        String.fromCharCode.apply(null, [
                            0
                        ]);
                    } catch (t33) {
                        i = false;
                    }
                    try {
                        String.fromCharCode.apply(null, new Uint8Array(1));
                    } catch (t32) {
                        o = false;
                    }
                    for(var s = new n.Buf8(256), a = 0; a < 256; a++)s[a] = a >= 252 ? 6 : a >= 248 ? 5 : a >= 240 ? 4 : a >= 224 ? 3 : a >= 192 ? 2 : 1;
                    function u(t3, e3) {
                        if (e3 < 65534 && (t3.subarray && o || !t3.subarray && i)) return String.fromCharCode.apply(null, n.shrinkBuf(t3, e3));
                        for(var r3 = "", s2 = 0; s2 < e3; s2++)r3 += String.fromCharCode(t3[s2]);
                        return r3;
                    }
                    s[254] = s[254] = 1, e2.string2buf = function(t3) {
                        var e3, r3, i2, o2, s2, a2 = t3.length, u2 = 0;
                        for(o2 = 0; o2 < a2; o2++)(64512 & (r3 = t3.charCodeAt(o2))) == 55296 && o2 + 1 < a2 && (64512 & (i2 = t3.charCodeAt(o2 + 1))) == 56320 && (r3 = 65536 + (r3 - 55296 << 10) + (i2 - 56320), o2++), u2 += r3 < 128 ? 1 : r3 < 2048 ? 2 : r3 < 65536 ? 3 : 4;
                        for(e3 = new n.Buf8(u2), s2 = 0, o2 = 0; s2 < u2; o2++)(64512 & (r3 = t3.charCodeAt(o2))) == 55296 && o2 + 1 < a2 && (64512 & (i2 = t3.charCodeAt(o2 + 1))) == 56320 && (r3 = 65536 + (r3 - 55296 << 10) + (i2 - 56320), o2++), r3 < 128 ? e3[s2++] = r3 : r3 < 2048 ? (e3[s2++] = 192 | r3 >>> 6, e3[s2++] = 128 | 63 & r3) : r3 < 65536 ? (e3[s2++] = 224 | r3 >>> 12, e3[s2++] = 128 | r3 >>> 6 & 63, e3[s2++] = 128 | 63 & r3) : (e3[s2++] = 240 | r3 >>> 18, e3[s2++] = 128 | r3 >>> 12 & 63, e3[s2++] = 128 | r3 >>> 6 & 63, e3[s2++] = 128 | 63 & r3);
                        return e3;
                    }, e2.buf2binstring = function(t3) {
                        return u(t3, t3.length);
                    }, e2.binstring2buf = function(t3) {
                        for(var e3 = new n.Buf8(t3.length), r3 = 0, i2 = e3.length; r3 < i2; r3++)e3[r3] = t3.charCodeAt(r3);
                        return e3;
                    }, e2.buf2string = function(t3, e3) {
                        var r3, n2, i2, o2, a2 = e3 || t3.length, c = new Array(2 * a2);
                        for(n2 = 0, r3 = 0; r3 < a2;)if ((i2 = t3[r3++]) < 128) c[n2++] = i2;
                        else if ((o2 = s[i2]) > 4) c[n2++] = 65533, r3 += o2 - 1;
                        else {
                            for(i2 &= o2 === 2 ? 31 : o2 === 3 ? 15 : 7; o2 > 1 && r3 < a2;)i2 = i2 << 6 | 63 & t3[r3++], o2--;
                            o2 > 1 ? c[n2++] = 65533 : i2 < 65536 ? c[n2++] = i2 : (i2 -= 65536, c[n2++] = 55296 | i2 >> 10 & 1023, c[n2++] = 56320 | 1023 & i2);
                        }
                        return u(c, n2);
                    }, e2.utf8border = function(t3, e3) {
                        var r3;
                        for((e3 = e3 || t3.length) > t3.length && (e3 = t3.length), r3 = e3 - 1; r3 >= 0 && (192 & t3[r3]) == 128;)r3--;
                        return r3 < 0 || r3 === 0 ? e3 : r3 + s[t3[r3]] > e3 ? r3 : e3;
                    };
                },
                6069: (t2)=>{
                    t2.exports = function(t3, e2, r2, n) {
                        for(var i = 65535 & t3 | 0, o = t3 >>> 16 & 65535 | 0, s = 0; r2 !== 0;){
                            r2 -= s = r2 > 2e3 ? 2e3 : r2;
                            do {
                                o = o + (i = i + e2[n++] | 0) | 0;
                            }while (--s)
                            i %= 65521, o %= 65521;
                        }
                        return i | o << 16 | 0;
                    };
                },
                1619: (t2)=>{
                    t2.exports = {
                        Z_NO_FLUSH: 0,
                        Z_PARTIAL_FLUSH: 1,
                        Z_SYNC_FLUSH: 2,
                        Z_FULL_FLUSH: 3,
                        Z_FINISH: 4,
                        Z_BLOCK: 5,
                        Z_TREES: 6,
                        Z_OK: 0,
                        Z_STREAM_END: 1,
                        Z_NEED_DICT: 2,
                        Z_ERRNO: -1,
                        Z_STREAM_ERROR: -2,
                        Z_DATA_ERROR: -3,
                        Z_BUF_ERROR: -5,
                        Z_NO_COMPRESSION: 0,
                        Z_BEST_SPEED: 1,
                        Z_BEST_COMPRESSION: 9,
                        Z_DEFAULT_COMPRESSION: -1,
                        Z_FILTERED: 1,
                        Z_HUFFMAN_ONLY: 2,
                        Z_RLE: 3,
                        Z_FIXED: 4,
                        Z_DEFAULT_STRATEGY: 0,
                        Z_BINARY: 0,
                        Z_TEXT: 1,
                        Z_UNKNOWN: 2,
                        Z_DEFLATED: 8
                    };
                },
                2869: (t2)=>{
                    var e2 = function() {
                        for(var t3, e3 = [], r2 = 0; r2 < 256; r2++){
                            t3 = r2;
                            for(var n = 0; n < 8; n++)t3 = 1 & t3 ? 3988292384 ^ t3 >>> 1 : t3 >>> 1;
                            e3[r2] = t3;
                        }
                        return e3;
                    }();
                    t2.exports = function(t3, r2, n, i) {
                        var o = e2, s = i + n;
                        t3 ^= -1;
                        for(var a = i; a < s; a++)t3 = t3 >>> 8 ^ o[255 & (t3 ^ r2[a])];
                        return -1 ^ t3;
                    };
                },
                405: (t2, e2, r2)=>{
                    var n, i = r2(4236), o = r2(342), s = r2(6069), a = r2(2869), u = r2(8898), c = -2, l = 258, h = 262, f = 103, d = 113, p = 666;
                    function g(t3, e3) {
                        return t3.msg = u[e3], e3;
                    }
                    function y(t3) {
                        return (t3 << 1) - (t3 > 4 ? 9 : 0);
                    }
                    function m(t3) {
                        for(var e3 = t3.length; --e3 >= 0;)t3[e3] = 0;
                    }
                    function v(t3) {
                        var e3 = t3.state, r3 = e3.pending;
                        r3 > t3.avail_out && (r3 = t3.avail_out), r3 !== 0 && (i.arraySet(t3.output, e3.pending_buf, e3.pending_out, r3, t3.next_out), t3.next_out += r3, e3.pending_out += r3, t3.total_out += r3, t3.avail_out -= r3, e3.pending -= r3, e3.pending === 0 && (e3.pending_out = 0));
                    }
                    function b(t3, e3) {
                        o._tr_flush_block(t3, t3.block_start >= 0 ? t3.block_start : -1, t3.strstart - t3.block_start, e3), t3.block_start = t3.strstart, v(t3.strm);
                    }
                    function _(t3, e3) {
                        t3.pending_buf[t3.pending++] = e3;
                    }
                    function w(t3, e3) {
                        t3.pending_buf[t3.pending++] = e3 >>> 8 & 255, t3.pending_buf[t3.pending++] = 255 & e3;
                    }
                    function E(t3, e3) {
                        var r3, n2, i2 = t3.max_chain_length, o2 = t3.strstart, s2 = t3.prev_length, a2 = t3.nice_match, u2 = t3.strstart > t3.w_size - h ? t3.strstart - (t3.w_size - h) : 0, c2 = t3.window, f2 = t3.w_mask, d2 = t3.prev, p2 = t3.strstart + l, g2 = c2[o2 + s2 - 1], y2 = c2[o2 + s2];
                        t3.prev_length >= t3.good_match && (i2 >>= 2), a2 > t3.lookahead && (a2 = t3.lookahead);
                        do {
                            if (c2[(r3 = e3) + s2] === y2 && c2[r3 + s2 - 1] === g2 && c2[r3] === c2[o2] && c2[++r3] === c2[o2 + 1]) {
                                o2 += 2, r3++;
                                do {}while (c2[++o2] === c2[++r3] && c2[++o2] === c2[++r3] && c2[++o2] === c2[++r3] && c2[++o2] === c2[++r3] && c2[++o2] === c2[++r3] && c2[++o2] === c2[++r3] && c2[++o2] === c2[++r3] && c2[++o2] === c2[++r3] && o2 < p2)
                                if (n2 = l - (p2 - o2), o2 = p2 - l, n2 > s2) {
                                    if (t3.match_start = e3, s2 = n2, n2 >= a2) break;
                                    g2 = c2[o2 + s2 - 1], y2 = c2[o2 + s2];
                                }
                            }
                        }while ((e3 = d2[e3 & f2]) > u2 && --i2 != 0)
                        return s2 <= t3.lookahead ? s2 : t3.lookahead;
                    }
                    function A(t3) {
                        var e3, r3, n2, o2, u2, c2, l2, f2, d2, p2, g2 = t3.w_size;
                        do {
                            if (o2 = t3.window_size - t3.lookahead - t3.strstart, t3.strstart >= g2 + (g2 - h)) {
                                i.arraySet(t3.window, t3.window, g2, g2, 0), t3.match_start -= g2, t3.strstart -= g2, t3.block_start -= g2, e3 = r3 = t3.hash_size;
                                do {
                                    n2 = t3.head[--e3], t3.head[e3] = n2 >= g2 ? n2 - g2 : 0;
                                }while (--r3)
                                e3 = r3 = g2;
                                do {
                                    n2 = t3.prev[--e3], t3.prev[e3] = n2 >= g2 ? n2 - g2 : 0;
                                }while (--r3)
                                o2 += g2;
                            }
                            if (t3.strm.avail_in === 0) break;
                            if (c2 = t3.strm, l2 = t3.window, f2 = t3.strstart + t3.lookahead, d2 = o2, p2 = void 0, (p2 = c2.avail_in) > d2 && (p2 = d2), r3 = p2 === 0 ? 0 : (c2.avail_in -= p2, i.arraySet(l2, c2.input, c2.next_in, p2, f2), c2.state.wrap === 1 ? c2.adler = s(c2.adler, l2, p2, f2) : c2.state.wrap === 2 && (c2.adler = a(c2.adler, l2, p2, f2)), c2.next_in += p2, c2.total_in += p2, p2), t3.lookahead += r3, t3.lookahead + t3.insert >= 3) for(u2 = t3.strstart - t3.insert, t3.ins_h = t3.window[u2], t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[u2 + 1]) & t3.hash_mask; t3.insert && (t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[u2 + 3 - 1]) & t3.hash_mask, t3.prev[u2 & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = u2, u2++, t3.insert--, !(t3.lookahead + t3.insert < 3)););
                        }while (t3.lookahead < h && t3.strm.avail_in !== 0)
                    }
                    function S(t3, e3) {
                        for(var r3, n2;;){
                            if (t3.lookahead < h) {
                                if (A(t3), t3.lookahead < h && e3 === 0) return 1;
                                if (t3.lookahead === 0) break;
                            }
                            if (r3 = 0, t3.lookahead >= 3 && (t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + 3 - 1]) & t3.hash_mask, r3 = t3.prev[t3.strstart & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = t3.strstart), r3 !== 0 && t3.strstart - r3 <= t3.w_size - h && (t3.match_length = E(t3, r3)), t3.match_length >= 3) if (n2 = o._tr_tally(t3, t3.strstart - t3.match_start, t3.match_length - 3), t3.lookahead -= t3.match_length, t3.match_length <= t3.max_lazy_match && t3.lookahead >= 3) {
                                t3.match_length--;
                                do {
                                    t3.strstart++, t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + 3 - 1]) & t3.hash_mask, r3 = t3.prev[t3.strstart & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = t3.strstart;
                                }while (--t3.match_length != 0)
                                t3.strstart++;
                            } else t3.strstart += t3.match_length, t3.match_length = 0, t3.ins_h = t3.window[t3.strstart], t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + 1]) & t3.hash_mask;
                            else n2 = o._tr_tally(t3, 0, t3.window[t3.strstart]), t3.lookahead--, t3.strstart++;
                            if (n2 && (b(t3, false), t3.strm.avail_out === 0)) return 1;
                        }
                        return t3.insert = t3.strstart < 2 ? t3.strstart : 2, e3 === 4 ? (b(t3, true), t3.strm.avail_out === 0 ? 3 : 4) : t3.last_lit && (b(t3, false), t3.strm.avail_out === 0) ? 1 : 2;
                    }
                    function P(t3, e3) {
                        for(var r3, n2, i2;;){
                            if (t3.lookahead < h) {
                                if (A(t3), t3.lookahead < h && e3 === 0) return 1;
                                if (t3.lookahead === 0) break;
                            }
                            if (r3 = 0, t3.lookahead >= 3 && (t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + 3 - 1]) & t3.hash_mask, r3 = t3.prev[t3.strstart & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = t3.strstart), t3.prev_length = t3.match_length, t3.prev_match = t3.match_start, t3.match_length = 2, r3 !== 0 && t3.prev_length < t3.max_lazy_match && t3.strstart - r3 <= t3.w_size - h && (t3.match_length = E(t3, r3), t3.match_length <= 5 && (t3.strategy === 1 || t3.match_length === 3 && t3.strstart - t3.match_start > 4096) && (t3.match_length = 2)), t3.prev_length >= 3 && t3.match_length <= t3.prev_length) {
                                i2 = t3.strstart + t3.lookahead - 3, n2 = o._tr_tally(t3, t3.strstart - 1 - t3.prev_match, t3.prev_length - 3), t3.lookahead -= t3.prev_length - 1, t3.prev_length -= 2;
                                do {
                                    ++t3.strstart <= i2 && (t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + 3 - 1]) & t3.hash_mask, r3 = t3.prev[t3.strstart & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = t3.strstart);
                                }while (--t3.prev_length != 0)
                                if (t3.match_available = 0, t3.match_length = 2, t3.strstart++, n2 && (b(t3, false), t3.strm.avail_out === 0)) return 1;
                            } else if (t3.match_available) {
                                if ((n2 = o._tr_tally(t3, 0, t3.window[t3.strstart - 1])) && b(t3, false), t3.strstart++, t3.lookahead--, t3.strm.avail_out === 0) return 1;
                            } else t3.match_available = 1, t3.strstart++, t3.lookahead--;
                        }
                        return t3.match_available && (n2 = o._tr_tally(t3, 0, t3.window[t3.strstart - 1]), t3.match_available = 0), t3.insert = t3.strstart < 2 ? t3.strstart : 2, e3 === 4 ? (b(t3, true), t3.strm.avail_out === 0 ? 3 : 4) : t3.last_lit && (b(t3, false), t3.strm.avail_out === 0) ? 1 : 2;
                    }
                    function x(t3, e3, r3, n2, i2) {
                        this.good_length = t3, this.max_lazy = e3, this.nice_length = r3, this.max_chain = n2, this.func = i2;
                    }
                    function T() {
                        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = 8, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new i.Buf16(1146), this.dyn_dtree = new i.Buf16(122), this.bl_tree = new i.Buf16(78), m(this.dyn_ltree), m(this.dyn_dtree), m(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new i.Buf16(16), this.heap = new i.Buf16(573), m(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new i.Buf16(573), m(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
                    }
                    function O(t3) {
                        var e3;
                        return t3 && t3.state ? (t3.total_in = t3.total_out = 0, t3.data_type = 2, (e3 = t3.state).pending = 0, e3.pending_out = 0, e3.wrap < 0 && (e3.wrap = -e3.wrap), e3.status = e3.wrap ? 42 : d, t3.adler = e3.wrap === 2 ? 0 : 1, e3.last_flush = 0, o._tr_init(e3), 0) : g(t3, c);
                    }
                    function C(t3) {
                        var e3, r3 = O(t3);
                        return r3 === 0 && ((e3 = t3.state).window_size = 2 * e3.w_size, m(e3.head), e3.max_lazy_match = n[e3.level].max_lazy, e3.good_match = n[e3.level].good_length, e3.nice_match = n[e3.level].nice_length, e3.max_chain_length = n[e3.level].max_chain, e3.strstart = 0, e3.block_start = 0, e3.lookahead = 0, e3.insert = 0, e3.match_length = e3.prev_length = 2, e3.match_available = 0, e3.ins_h = 0), r3;
                    }
                    function j(t3, e3, r3, n2, o2, s2) {
                        if (!t3) return c;
                        var a2 = 1;
                        if (e3 === -1 && (e3 = 6), n2 < 0 ? (a2 = 0, n2 = -n2) : n2 > 15 && (a2 = 2, n2 -= 16), o2 < 1 || o2 > 9 || r3 !== 8 || n2 < 8 || n2 > 15 || e3 < 0 || e3 > 9 || s2 < 0 || s2 > 4) return g(t3, c);
                        n2 === 8 && (n2 = 9);
                        var u2 = new T();
                        return t3.state = u2, u2.strm = t3, u2.wrap = a2, u2.gzhead = null, u2.w_bits = n2, u2.w_size = 1 << u2.w_bits, u2.w_mask = u2.w_size - 1, u2.hash_bits = o2 + 7, u2.hash_size = 1 << u2.hash_bits, u2.hash_mask = u2.hash_size - 1, u2.hash_shift = ~~((u2.hash_bits + 3 - 1) / 3), u2.window = new i.Buf8(2 * u2.w_size), u2.head = new i.Buf16(u2.hash_size), u2.prev = new i.Buf16(u2.w_size), u2.lit_bufsize = 1 << o2 + 6, u2.pending_buf_size = 4 * u2.lit_bufsize, u2.pending_buf = new i.Buf8(u2.pending_buf_size), u2.d_buf = 1 * u2.lit_bufsize, u2.l_buf = 3 * u2.lit_bufsize, u2.level = e3, u2.strategy = s2, u2.method = r3, C(t3);
                    }
                    n = [
                        new x(0, 0, 0, 0, function(t3, e3) {
                            var r3 = 65535;
                            for(r3 > t3.pending_buf_size - 5 && (r3 = t3.pending_buf_size - 5);;){
                                if (t3.lookahead <= 1) {
                                    if (A(t3), t3.lookahead === 0 && e3 === 0) return 1;
                                    if (t3.lookahead === 0) break;
                                }
                                t3.strstart += t3.lookahead, t3.lookahead = 0;
                                var n2 = t3.block_start + r3;
                                if ((t3.strstart === 0 || t3.strstart >= n2) && (t3.lookahead = t3.strstart - n2, t3.strstart = n2, b(t3, false), t3.strm.avail_out === 0)) return 1;
                                if (t3.strstart - t3.block_start >= t3.w_size - h && (b(t3, false), t3.strm.avail_out === 0)) return 1;
                            }
                            return t3.insert = 0, e3 === 4 ? (b(t3, true), t3.strm.avail_out === 0 ? 3 : 4) : (t3.strstart > t3.block_start && (b(t3, false), t3.strm.avail_out), 1);
                        }),
                        new x(4, 4, 8, 4, S),
                        new x(4, 5, 16, 8, S),
                        new x(4, 6, 32, 32, S),
                        new x(4, 4, 16, 16, P),
                        new x(8, 16, 32, 32, P),
                        new x(8, 16, 128, 128, P),
                        new x(8, 32, 128, 256, P),
                        new x(32, 128, 258, 1024, P),
                        new x(32, 258, 258, 4096, P)
                    ], e2.deflateInit = function(t3, e3) {
                        return j(t3, e3, 8, 15, 8, 0);
                    }, e2.deflateInit2 = j, e2.deflateReset = C, e2.deflateResetKeep = O, e2.deflateSetHeader = function(t3, e3) {
                        return t3 && t3.state ? t3.state.wrap !== 2 ? c : (t3.state.gzhead = e3, 0) : c;
                    }, e2.deflate = function(t3, e3) {
                        var r3, i2, s2, u2;
                        if (!t3 || !t3.state || e3 > 5 || e3 < 0) return t3 ? g(t3, c) : c;
                        if (i2 = t3.state, !t3.output || !t3.input && t3.avail_in !== 0 || i2.status === p && e3 !== 4) return g(t3, t3.avail_out === 0 ? -5 : c);
                        if (i2.strm = t3, r3 = i2.last_flush, i2.last_flush = e3, i2.status === 42) if (i2.wrap === 2) t3.adler = 0, _(i2, 31), _(i2, 139), _(i2, 8), i2.gzhead ? (_(i2, (i2.gzhead.text ? 1 : 0) + (i2.gzhead.hcrc ? 2 : 0) + (i2.gzhead.extra ? 4 : 0) + (i2.gzhead.name ? 8 : 0) + (i2.gzhead.comment ? 16 : 0)), _(i2, 255 & i2.gzhead.time), _(i2, i2.gzhead.time >> 8 & 255), _(i2, i2.gzhead.time >> 16 & 255), _(i2, i2.gzhead.time >> 24 & 255), _(i2, i2.level === 9 ? 2 : i2.strategy >= 2 || i2.level < 2 ? 4 : 0), _(i2, 255 & i2.gzhead.os), i2.gzhead.extra && i2.gzhead.extra.length && (_(i2, 255 & i2.gzhead.extra.length), _(i2, i2.gzhead.extra.length >> 8 & 255)), i2.gzhead.hcrc && (t3.adler = a(t3.adler, i2.pending_buf, i2.pending, 0)), i2.gzindex = 0, i2.status = 69) : (_(i2, 0), _(i2, 0), _(i2, 0), _(i2, 0), _(i2, 0), _(i2, i2.level === 9 ? 2 : i2.strategy >= 2 || i2.level < 2 ? 4 : 0), _(i2, 3), i2.status = d);
                        else {
                            var h2 = 8 + (i2.w_bits - 8 << 4) << 8;
                            h2 |= (i2.strategy >= 2 || i2.level < 2 ? 0 : i2.level < 6 ? 1 : i2.level === 6 ? 2 : 3) << 6, i2.strstart !== 0 && (h2 |= 32), h2 += 31 - h2 % 31, i2.status = d, w(i2, h2), i2.strstart !== 0 && (w(i2, t3.adler >>> 16), w(i2, 65535 & t3.adler)), t3.adler = 1;
                        }
                        if (i2.status === 69) if (i2.gzhead.extra) {
                            for(s2 = i2.pending; i2.gzindex < (65535 & i2.gzhead.extra.length) && (i2.pending !== i2.pending_buf_size || (i2.gzhead.hcrc && i2.pending > s2 && (t3.adler = a(t3.adler, i2.pending_buf, i2.pending - s2, s2)), v(t3), s2 = i2.pending, i2.pending !== i2.pending_buf_size));)_(i2, 255 & i2.gzhead.extra[i2.gzindex]), i2.gzindex++;
                            i2.gzhead.hcrc && i2.pending > s2 && (t3.adler = a(t3.adler, i2.pending_buf, i2.pending - s2, s2)), i2.gzindex === i2.gzhead.extra.length && (i2.gzindex = 0, i2.status = 73);
                        } else i2.status = 73;
                        if (i2.status === 73) if (i2.gzhead.name) {
                            s2 = i2.pending;
                            do {
                                if (i2.pending === i2.pending_buf_size && (i2.gzhead.hcrc && i2.pending > s2 && (t3.adler = a(t3.adler, i2.pending_buf, i2.pending - s2, s2)), v(t3), s2 = i2.pending, i2.pending === i2.pending_buf_size)) {
                                    u2 = 1;
                                    break;
                                }
                                u2 = i2.gzindex < i2.gzhead.name.length ? 255 & i2.gzhead.name.charCodeAt(i2.gzindex++) : 0, _(i2, u2);
                            }while (u2 !== 0)
                            i2.gzhead.hcrc && i2.pending > s2 && (t3.adler = a(t3.adler, i2.pending_buf, i2.pending - s2, s2)), u2 === 0 && (i2.gzindex = 0, i2.status = 91);
                        } else i2.status = 91;
                        if (i2.status === 91) if (i2.gzhead.comment) {
                            s2 = i2.pending;
                            do {
                                if (i2.pending === i2.pending_buf_size && (i2.gzhead.hcrc && i2.pending > s2 && (t3.adler = a(t3.adler, i2.pending_buf, i2.pending - s2, s2)), v(t3), s2 = i2.pending, i2.pending === i2.pending_buf_size)) {
                                    u2 = 1;
                                    break;
                                }
                                u2 = i2.gzindex < i2.gzhead.comment.length ? 255 & i2.gzhead.comment.charCodeAt(i2.gzindex++) : 0, _(i2, u2);
                            }while (u2 !== 0)
                            i2.gzhead.hcrc && i2.pending > s2 && (t3.adler = a(t3.adler, i2.pending_buf, i2.pending - s2, s2)), u2 === 0 && (i2.status = f);
                        } else i2.status = f;
                        if (i2.status === f && (i2.gzhead.hcrc ? (i2.pending + 2 > i2.pending_buf_size && v(t3), i2.pending + 2 <= i2.pending_buf_size && (_(i2, 255 & t3.adler), _(i2, t3.adler >> 8 & 255), t3.adler = 0, i2.status = d)) : i2.status = d), i2.pending !== 0) {
                            if (v(t3), t3.avail_out === 0) return i2.last_flush = -1, 0;
                        } else if (t3.avail_in === 0 && y(e3) <= y(r3) && e3 !== 4) return g(t3, -5);
                        if (i2.status === p && t3.avail_in !== 0) return g(t3, -5);
                        if (t3.avail_in !== 0 || i2.lookahead !== 0 || e3 !== 0 && i2.status !== p) {
                            var E2 = i2.strategy === 2 ? function(t4, e4) {
                                for(var r4;;){
                                    if (t4.lookahead === 0 && (A(t4), t4.lookahead === 0)) {
                                        if (e4 === 0) return 1;
                                        break;
                                    }
                                    if (t4.match_length = 0, r4 = o._tr_tally(t4, 0, t4.window[t4.strstart]), t4.lookahead--, t4.strstart++, r4 && (b(t4, false), t4.strm.avail_out === 0)) return 1;
                                }
                                return t4.insert = 0, e4 === 4 ? (b(t4, true), t4.strm.avail_out === 0 ? 3 : 4) : t4.last_lit && (b(t4, false), t4.strm.avail_out === 0) ? 1 : 2;
                            }(i2, e3) : i2.strategy === 3 ? function(t4, e4) {
                                for(var r4, n2, i3, s3, a2 = t4.window;;){
                                    if (t4.lookahead <= l) {
                                        if (A(t4), t4.lookahead <= l && e4 === 0) return 1;
                                        if (t4.lookahead === 0) break;
                                    }
                                    if (t4.match_length = 0, t4.lookahead >= 3 && t4.strstart > 0 && (n2 = a2[i3 = t4.strstart - 1]) === a2[++i3] && n2 === a2[++i3] && n2 === a2[++i3]) {
                                        s3 = t4.strstart + l;
                                        do {}while (n2 === a2[++i3] && n2 === a2[++i3] && n2 === a2[++i3] && n2 === a2[++i3] && n2 === a2[++i3] && n2 === a2[++i3] && n2 === a2[++i3] && n2 === a2[++i3] && i3 < s3)
                                        t4.match_length = l - (s3 - i3), t4.match_length > t4.lookahead && (t4.match_length = t4.lookahead);
                                    }
                                    if (t4.match_length >= 3 ? (r4 = o._tr_tally(t4, 1, t4.match_length - 3), t4.lookahead -= t4.match_length, t4.strstart += t4.match_length, t4.match_length = 0) : (r4 = o._tr_tally(t4, 0, t4.window[t4.strstart]), t4.lookahead--, t4.strstart++), r4 && (b(t4, false), t4.strm.avail_out === 0)) return 1;
                                }
                                return t4.insert = 0, e4 === 4 ? (b(t4, true), t4.strm.avail_out === 0 ? 3 : 4) : t4.last_lit && (b(t4, false), t4.strm.avail_out === 0) ? 1 : 2;
                            }(i2, e3) : n[i2.level].func(i2, e3);
                            if (E2 !== 3 && E2 !== 4 || (i2.status = p), E2 === 1 || E2 === 3) return t3.avail_out === 0 && (i2.last_flush = -1), 0;
                            if (E2 === 2 && (e3 === 1 ? o._tr_align(i2) : e3 !== 5 && (o._tr_stored_block(i2, 0, 0, false), e3 === 3 && (m(i2.head), i2.lookahead === 0 && (i2.strstart = 0, i2.block_start = 0, i2.insert = 0))), v(t3), t3.avail_out === 0)) return i2.last_flush = -1, 0;
                        }
                        return e3 !== 4 ? 0 : i2.wrap <= 0 ? 1 : (i2.wrap === 2 ? (_(i2, 255 & t3.adler), _(i2, t3.adler >> 8 & 255), _(i2, t3.adler >> 16 & 255), _(i2, t3.adler >> 24 & 255), _(i2, 255 & t3.total_in), _(i2, t3.total_in >> 8 & 255), _(i2, t3.total_in >> 16 & 255), _(i2, t3.total_in >> 24 & 255)) : (w(i2, t3.adler >>> 16), w(i2, 65535 & t3.adler)), v(t3), i2.wrap > 0 && (i2.wrap = -i2.wrap), i2.pending !== 0 ? 0 : 1);
                    }, e2.deflateEnd = function(t3) {
                        var e3;
                        return t3 && t3.state ? (e3 = t3.state.status) !== 42 && e3 !== 69 && e3 !== 73 && e3 !== 91 && e3 !== f && e3 !== d && e3 !== p ? g(t3, c) : (t3.state = null, e3 === d ? g(t3, -3) : 0) : c;
                    }, e2.deflateSetDictionary = function(t3, e3) {
                        var r3, n2, o2, a2, u2, l2, h2, f2, d2 = e3.length;
                        if (!t3 || !t3.state) return c;
                        if ((a2 = (r3 = t3.state).wrap) === 2 || a2 === 1 && r3.status !== 42 || r3.lookahead) return c;
                        for(a2 === 1 && (t3.adler = s(t3.adler, e3, d2, 0)), r3.wrap = 0, d2 >= r3.w_size && (a2 === 0 && (m(r3.head), r3.strstart = 0, r3.block_start = 0, r3.insert = 0), f2 = new i.Buf8(r3.w_size), i.arraySet(f2, e3, d2 - r3.w_size, r3.w_size, 0), e3 = f2, d2 = r3.w_size), u2 = t3.avail_in, l2 = t3.next_in, h2 = t3.input, t3.avail_in = d2, t3.next_in = 0, t3.input = e3, A(r3); r3.lookahead >= 3;){
                            n2 = r3.strstart, o2 = r3.lookahead - 2;
                            do {
                                r3.ins_h = (r3.ins_h << r3.hash_shift ^ r3.window[n2 + 3 - 1]) & r3.hash_mask, r3.prev[n2 & r3.w_mask] = r3.head[r3.ins_h], r3.head[r3.ins_h] = n2, n2++;
                            }while (--o2)
                            r3.strstart = n2, r3.lookahead = 2, A(r3);
                        }
                        return r3.strstart += r3.lookahead, r3.block_start = r3.strstart, r3.insert = r3.lookahead, r3.lookahead = 0, r3.match_length = r3.prev_length = 2, r3.match_available = 0, t3.next_in = l2, t3.input = h2, t3.avail_in = u2, r3.wrap = a2, 0;
                    }, e2.deflateInfo = "pako deflate (from Nodeca project)";
                },
                2401: (t2)=>{
                    t2.exports = function() {
                        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
                    };
                },
                4264: (t2)=>{
                    t2.exports = function(t3, e2) {
                        var r2, n, i, o, s, a, u, c, l, h, f, d, p, g, y, m, v, b, _, w, E, A, S, P, x;
                        r2 = t3.state, n = t3.next_in, P = t3.input, i = n + (t3.avail_in - 5), o = t3.next_out, x = t3.output, s = o - (e2 - t3.avail_out), a = o + (t3.avail_out - 257), u = r2.dmax, c = r2.wsize, l = r2.whave, h = r2.wnext, f = r2.window, d = r2.hold, p = r2.bits, g = r2.lencode, y = r2.distcode, m = (1 << r2.lenbits) - 1, v = (1 << r2.distbits) - 1;
                        t: do {
                            p < 15 && (d += P[n++] << p, p += 8, d += P[n++] << p, p += 8), b = g[d & m];
                            e: for(;;){
                                if (d >>>= _ = b >>> 24, p -= _, (_ = b >>> 16 & 255) == 0) x[o++] = 65535 & b;
                                else {
                                    if (!(16 & _)) {
                                        if ((64 & _) == 0) {
                                            b = g[(65535 & b) + (d & (1 << _) - 1)];
                                            continue e;
                                        }
                                        if (32 & _) {
                                            r2.mode = 12;
                                            break t;
                                        }
                                        t3.msg = "invalid literal/length code", r2.mode = 30;
                                        break t;
                                    }
                                    w = 65535 & b, (_ &= 15) && (p < _ && (d += P[n++] << p, p += 8), w += d & (1 << _) - 1, d >>>= _, p -= _), p < 15 && (d += P[n++] << p, p += 8, d += P[n++] << p, p += 8), b = y[d & v];
                                    r: for(;;){
                                        if (d >>>= _ = b >>> 24, p -= _, !(16 & (_ = b >>> 16 & 255))) {
                                            if ((64 & _) == 0) {
                                                b = y[(65535 & b) + (d & (1 << _) - 1)];
                                                continue r;
                                            }
                                            t3.msg = "invalid distance code", r2.mode = 30;
                                            break t;
                                        }
                                        if (E = 65535 & b, p < (_ &= 15) && (d += P[n++] << p, (p += 8) < _ && (d += P[n++] << p, p += 8)), (E += d & (1 << _) - 1) > u) {
                                            t3.msg = "invalid distance too far back", r2.mode = 30;
                                            break t;
                                        }
                                        if (d >>>= _, p -= _, E > (_ = o - s)) {
                                            if ((_ = E - _) > l && r2.sane) {
                                                t3.msg = "invalid distance too far back", r2.mode = 30;
                                                break t;
                                            }
                                            if (A = 0, S = f, h === 0) {
                                                if (A += c - _, _ < w) {
                                                    w -= _;
                                                    do {
                                                        x[o++] = f[A++];
                                                    }while (--_)
                                                    A = o - E, S = x;
                                                }
                                            } else if (h < _) {
                                                if (A += c + h - _, (_ -= h) < w) {
                                                    w -= _;
                                                    do {
                                                        x[o++] = f[A++];
                                                    }while (--_)
                                                    if (A = 0, h < w) {
                                                        w -= _ = h;
                                                        do {
                                                            x[o++] = f[A++];
                                                        }while (--_)
                                                        A = o - E, S = x;
                                                    }
                                                }
                                            } else if (A += h - _, _ < w) {
                                                w -= _;
                                                do {
                                                    x[o++] = f[A++];
                                                }while (--_)
                                                A = o - E, S = x;
                                            }
                                            for(; w > 2;)x[o++] = S[A++], x[o++] = S[A++], x[o++] = S[A++], w -= 3;
                                            w && (x[o++] = S[A++], w > 1 && (x[o++] = S[A++]));
                                        } else {
                                            A = o - E;
                                            do {
                                                x[o++] = x[A++], x[o++] = x[A++], x[o++] = x[A++], w -= 3;
                                            }while (w > 2)
                                            w && (x[o++] = x[A++], w > 1 && (x[o++] = x[A++]));
                                        }
                                        break;
                                    }
                                }
                                break;
                            }
                        }while (n < i && o < a)
                        n -= w = p >> 3, d &= (1 << (p -= w << 3)) - 1, t3.next_in = n, t3.next_out = o, t3.avail_in = n < i ? i - n + 5 : 5 - (n - i), t3.avail_out = o < a ? a - o + 257 : 257 - (o - a), r2.hold = d, r2.bits = p;
                    };
                },
                7948: (t2, e2, r2)=>{
                    var n = r2(4236), i = r2(6069), o = r2(2869), s = r2(4264), a = r2(9241), u = -2, c = 12, l = 30;
                    function h(t3) {
                        return (t3 >>> 24 & 255) + (t3 >>> 8 & 65280) + ((65280 & t3) << 8) + ((255 & t3) << 24);
                    }
                    function f() {
                        this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new n.Buf16(320), this.work = new n.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
                    }
                    function d(t3) {
                        var e3;
                        return t3 && t3.state ? (e3 = t3.state, t3.total_in = t3.total_out = e3.total = 0, t3.msg = "", e3.wrap && (t3.adler = 1 & e3.wrap), e3.mode = 1, e3.last = 0, e3.havedict = 0, e3.dmax = 32768, e3.head = null, e3.hold = 0, e3.bits = 0, e3.lencode = e3.lendyn = new n.Buf32(852), e3.distcode = e3.distdyn = new n.Buf32(592), e3.sane = 1, e3.back = -1, 0) : u;
                    }
                    function p(t3) {
                        var e3;
                        return t3 && t3.state ? ((e3 = t3.state).wsize = 0, e3.whave = 0, e3.wnext = 0, d(t3)) : u;
                    }
                    function g(t3, e3) {
                        var r3, n2;
                        return t3 && t3.state ? (n2 = t3.state, e3 < 0 ? (r3 = 0, e3 = -e3) : (r3 = 1 + (e3 >> 4), e3 < 48 && (e3 &= 15)), e3 && (e3 < 8 || e3 > 15) ? u : (n2.window !== null && n2.wbits !== e3 && (n2.window = null), n2.wrap = r3, n2.wbits = e3, p(t3))) : u;
                    }
                    function y(t3, e3) {
                        var r3, n2;
                        return t3 ? (n2 = new f(), t3.state = n2, n2.window = null, (r3 = g(t3, e3)) !== 0 && (t3.state = null), r3) : u;
                    }
                    var m, v, b = true;
                    function _(t3) {
                        if (b) {
                            var e3;
                            for(m = new n.Buf32(512), v = new n.Buf32(32), e3 = 0; e3 < 144;)t3.lens[e3++] = 8;
                            for(; e3 < 256;)t3.lens[e3++] = 9;
                            for(; e3 < 280;)t3.lens[e3++] = 7;
                            for(; e3 < 288;)t3.lens[e3++] = 8;
                            for(a(1, t3.lens, 0, 288, m, 0, t3.work, {
                                bits: 9
                            }), e3 = 0; e3 < 32;)t3.lens[e3++] = 5;
                            a(2, t3.lens, 0, 32, v, 0, t3.work, {
                                bits: 5
                            }), b = false;
                        }
                        t3.lencode = m, t3.lenbits = 9, t3.distcode = v, t3.distbits = 5;
                    }
                    function w(t3, e3, r3, i2) {
                        var o2, s2 = t3.state;
                        return s2.window === null && (s2.wsize = 1 << s2.wbits, s2.wnext = 0, s2.whave = 0, s2.window = new n.Buf8(s2.wsize)), i2 >= s2.wsize ? (n.arraySet(s2.window, e3, r3 - s2.wsize, s2.wsize, 0), s2.wnext = 0, s2.whave = s2.wsize) : ((o2 = s2.wsize - s2.wnext) > i2 && (o2 = i2), n.arraySet(s2.window, e3, r3 - i2, o2, s2.wnext), (i2 -= o2) ? (n.arraySet(s2.window, e3, r3 - i2, i2, 0), s2.wnext = i2, s2.whave = s2.wsize) : (s2.wnext += o2, s2.wnext === s2.wsize && (s2.wnext = 0), s2.whave < s2.wsize && (s2.whave += o2))), 0;
                    }
                    e2.inflateReset = p, e2.inflateReset2 = g, e2.inflateResetKeep = d, e2.inflateInit = function(t3) {
                        return y(t3, 15);
                    }, e2.inflateInit2 = y, e2.inflate = function(t3, e3) {
                        var r3, f2, d2, p2, g2, y2, m2, v2, b2, E, A, S, P, x, T, O, C, j, D, I, k, F, R, M, N = 0, L = new n.Buf8(4), U = [
                            16,
                            17,
                            18,
                            0,
                            8,
                            7,
                            9,
                            6,
                            10,
                            5,
                            11,
                            4,
                            12,
                            3,
                            13,
                            2,
                            14,
                            1,
                            15
                        ];
                        if (!t3 || !t3.state || !t3.output || !t3.input && t3.avail_in !== 0) return u;
                        (r3 = t3.state).mode === c && (r3.mode = 13), g2 = t3.next_out, d2 = t3.output, m2 = t3.avail_out, p2 = t3.next_in, f2 = t3.input, y2 = t3.avail_in, v2 = r3.hold, b2 = r3.bits, E = y2, A = m2, F = 0;
                        t: for(;;)switch(r3.mode){
                            case 1:
                                if (r3.wrap === 0) {
                                    r3.mode = 13;
                                    break;
                                }
                                for(; b2 < 16;){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                if (2 & r3.wrap && v2 === 35615) {
                                    r3.check = 0, L[0] = 255 & v2, L[1] = v2 >>> 8 & 255, r3.check = o(r3.check, L, 2, 0), v2 = 0, b2 = 0, r3.mode = 2;
                                    break;
                                }
                                if (r3.flags = 0, r3.head && (r3.head.done = false), !(1 & r3.wrap) || (((255 & v2) << 8) + (v2 >> 8)) % 31) {
                                    t3.msg = "incorrect header check", r3.mode = l;
                                    break;
                                }
                                if ((15 & v2) != 8) {
                                    t3.msg = "unknown compression method", r3.mode = l;
                                    break;
                                }
                                if (b2 -= 4, k = 8 + (15 & (v2 >>>= 4)), r3.wbits === 0) r3.wbits = k;
                                else if (k > r3.wbits) {
                                    t3.msg = "invalid window size", r3.mode = l;
                                    break;
                                }
                                r3.dmax = 1 << k, t3.adler = r3.check = 1, r3.mode = 512 & v2 ? 10 : c, v2 = 0, b2 = 0;
                                break;
                            case 2:
                                for(; b2 < 16;){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                if (r3.flags = v2, (255 & r3.flags) != 8) {
                                    t3.msg = "unknown compression method", r3.mode = l;
                                    break;
                                }
                                if (57344 & r3.flags) {
                                    t3.msg = "unknown header flags set", r3.mode = l;
                                    break;
                                }
                                r3.head && (r3.head.text = v2 >> 8 & 1), 512 & r3.flags && (L[0] = 255 & v2, L[1] = v2 >>> 8 & 255, r3.check = o(r3.check, L, 2, 0)), v2 = 0, b2 = 0, r3.mode = 3;
                            case 3:
                                for(; b2 < 32;){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                r3.head && (r3.head.time = v2), 512 & r3.flags && (L[0] = 255 & v2, L[1] = v2 >>> 8 & 255, L[2] = v2 >>> 16 & 255, L[3] = v2 >>> 24 & 255, r3.check = o(r3.check, L, 4, 0)), v2 = 0, b2 = 0, r3.mode = 4;
                            case 4:
                                for(; b2 < 16;){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                r3.head && (r3.head.xflags = 255 & v2, r3.head.os = v2 >> 8), 512 & r3.flags && (L[0] = 255 & v2, L[1] = v2 >>> 8 & 255, r3.check = o(r3.check, L, 2, 0)), v2 = 0, b2 = 0, r3.mode = 5;
                            case 5:
                                if (1024 & r3.flags) {
                                    for(; b2 < 16;){
                                        if (y2 === 0) break t;
                                        y2--, v2 += f2[p2++] << b2, b2 += 8;
                                    }
                                    r3.length = v2, r3.head && (r3.head.extra_len = v2), 512 & r3.flags && (L[0] = 255 & v2, L[1] = v2 >>> 8 & 255, r3.check = o(r3.check, L, 2, 0)), v2 = 0, b2 = 0;
                                } else r3.head && (r3.head.extra = null);
                                r3.mode = 6;
                            case 6:
                                if (1024 & r3.flags && ((S = r3.length) > y2 && (S = y2), S && (r3.head && (k = r3.head.extra_len - r3.length, r3.head.extra || (r3.head.extra = new Array(r3.head.extra_len)), n.arraySet(r3.head.extra, f2, p2, S, k)), 512 & r3.flags && (r3.check = o(r3.check, f2, S, p2)), y2 -= S, p2 += S, r3.length -= S), r3.length)) break t;
                                r3.length = 0, r3.mode = 7;
                            case 7:
                                if (2048 & r3.flags) {
                                    if (y2 === 0) break t;
                                    S = 0;
                                    do {
                                        k = f2[p2 + S++], r3.head && k && r3.length < 65536 && (r3.head.name += String.fromCharCode(k));
                                    }while (k && S < y2)
                                    if (512 & r3.flags && (r3.check = o(r3.check, f2, S, p2)), y2 -= S, p2 += S, k) break t;
                                } else r3.head && (r3.head.name = null);
                                r3.length = 0, r3.mode = 8;
                            case 8:
                                if (4096 & r3.flags) {
                                    if (y2 === 0) break t;
                                    S = 0;
                                    do {
                                        k = f2[p2 + S++], r3.head && k && r3.length < 65536 && (r3.head.comment += String.fromCharCode(k));
                                    }while (k && S < y2)
                                    if (512 & r3.flags && (r3.check = o(r3.check, f2, S, p2)), y2 -= S, p2 += S, k) break t;
                                } else r3.head && (r3.head.comment = null);
                                r3.mode = 9;
                            case 9:
                                if (512 & r3.flags) {
                                    for(; b2 < 16;){
                                        if (y2 === 0) break t;
                                        y2--, v2 += f2[p2++] << b2, b2 += 8;
                                    }
                                    if (v2 !== (65535 & r3.check)) {
                                        t3.msg = "header crc mismatch", r3.mode = l;
                                        break;
                                    }
                                    v2 = 0, b2 = 0;
                                }
                                r3.head && (r3.head.hcrc = r3.flags >> 9 & 1, r3.head.done = true), t3.adler = r3.check = 0, r3.mode = c;
                                break;
                            case 10:
                                for(; b2 < 32;){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                t3.adler = r3.check = h(v2), v2 = 0, b2 = 0, r3.mode = 11;
                            case 11:
                                if (r3.havedict === 0) return t3.next_out = g2, t3.avail_out = m2, t3.next_in = p2, t3.avail_in = y2, r3.hold = v2, r3.bits = b2, 2;
                                t3.adler = r3.check = 1, r3.mode = c;
                            case c:
                                if (e3 === 5 || e3 === 6) break t;
                            case 13:
                                if (r3.last) {
                                    v2 >>>= 7 & b2, b2 -= 7 & b2, r3.mode = 27;
                                    break;
                                }
                                for(; b2 < 3;){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                switch(r3.last = 1 & v2, b2 -= 1, 3 & (v2 >>>= 1)){
                                    case 0:
                                        r3.mode = 14;
                                        break;
                                    case 1:
                                        if (_(r3), r3.mode = 20, e3 === 6) {
                                            v2 >>>= 2, b2 -= 2;
                                            break t;
                                        }
                                        break;
                                    case 2:
                                        r3.mode = 17;
                                        break;
                                    case 3:
                                        t3.msg = "invalid block type", r3.mode = l;
                                }
                                v2 >>>= 2, b2 -= 2;
                                break;
                            case 14:
                                for(v2 >>>= 7 & b2, b2 -= 7 & b2; b2 < 32;){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                if ((65535 & v2) != (v2 >>> 16 ^ 65535)) {
                                    t3.msg = "invalid stored block lengths", r3.mode = l;
                                    break;
                                }
                                if (r3.length = 65535 & v2, v2 = 0, b2 = 0, r3.mode = 15, e3 === 6) break t;
                            case 15:
                                r3.mode = 16;
                            case 16:
                                if (S = r3.length) {
                                    if (S > y2 && (S = y2), S > m2 && (S = m2), S === 0) break t;
                                    n.arraySet(d2, f2, p2, S, g2), y2 -= S, p2 += S, m2 -= S, g2 += S, r3.length -= S;
                                    break;
                                }
                                r3.mode = c;
                                break;
                            case 17:
                                for(; b2 < 14;){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                if (r3.nlen = 257 + (31 & v2), v2 >>>= 5, b2 -= 5, r3.ndist = 1 + (31 & v2), v2 >>>= 5, b2 -= 5, r3.ncode = 4 + (15 & v2), v2 >>>= 4, b2 -= 4, r3.nlen > 286 || r3.ndist > 30) {
                                    t3.msg = "too many length or distance symbols", r3.mode = l;
                                    break;
                                }
                                r3.have = 0, r3.mode = 18;
                            case 18:
                                for(; r3.have < r3.ncode;){
                                    for(; b2 < 3;){
                                        if (y2 === 0) break t;
                                        y2--, v2 += f2[p2++] << b2, b2 += 8;
                                    }
                                    r3.lens[U[r3.have++]] = 7 & v2, v2 >>>= 3, b2 -= 3;
                                }
                                for(; r3.have < 19;)r3.lens[U[r3.have++]] = 0;
                                if (r3.lencode = r3.lendyn, r3.lenbits = 7, R = {
                                    bits: r3.lenbits
                                }, F = a(0, r3.lens, 0, 19, r3.lencode, 0, r3.work, R), r3.lenbits = R.bits, F) {
                                    t3.msg = "invalid code lengths set", r3.mode = l;
                                    break;
                                }
                                r3.have = 0, r3.mode = 19;
                            case 19:
                                for(; r3.have < r3.nlen + r3.ndist;){
                                    for(; O = (N = r3.lencode[v2 & (1 << r3.lenbits) - 1]) >>> 16 & 255, C = 65535 & N, !((T = N >>> 24) <= b2);){
                                        if (y2 === 0) break t;
                                        y2--, v2 += f2[p2++] << b2, b2 += 8;
                                    }
                                    if (C < 16) v2 >>>= T, b2 -= T, r3.lens[r3.have++] = C;
                                    else {
                                        if (C === 16) {
                                            for(M = T + 2; b2 < M;){
                                                if (y2 === 0) break t;
                                                y2--, v2 += f2[p2++] << b2, b2 += 8;
                                            }
                                            if (v2 >>>= T, b2 -= T, r3.have === 0) {
                                                t3.msg = "invalid bit length repeat", r3.mode = l;
                                                break;
                                            }
                                            k = r3.lens[r3.have - 1], S = 3 + (3 & v2), v2 >>>= 2, b2 -= 2;
                                        } else if (C === 17) {
                                            for(M = T + 3; b2 < M;){
                                                if (y2 === 0) break t;
                                                y2--, v2 += f2[p2++] << b2, b2 += 8;
                                            }
                                            b2 -= T, k = 0, S = 3 + (7 & (v2 >>>= T)), v2 >>>= 3, b2 -= 3;
                                        } else {
                                            for(M = T + 7; b2 < M;){
                                                if (y2 === 0) break t;
                                                y2--, v2 += f2[p2++] << b2, b2 += 8;
                                            }
                                            b2 -= T, k = 0, S = 11 + (127 & (v2 >>>= T)), v2 >>>= 7, b2 -= 7;
                                        }
                                        if (r3.have + S > r3.nlen + r3.ndist) {
                                            t3.msg = "invalid bit length repeat", r3.mode = l;
                                            break;
                                        }
                                        for(; S--;)r3.lens[r3.have++] = k;
                                    }
                                }
                                if (r3.mode === l) break;
                                if (r3.lens[256] === 0) {
                                    t3.msg = "invalid code -- missing end-of-block", r3.mode = l;
                                    break;
                                }
                                if (r3.lenbits = 9, R = {
                                    bits: r3.lenbits
                                }, F = a(1, r3.lens, 0, r3.nlen, r3.lencode, 0, r3.work, R), r3.lenbits = R.bits, F) {
                                    t3.msg = "invalid literal/lengths set", r3.mode = l;
                                    break;
                                }
                                if (r3.distbits = 6, r3.distcode = r3.distdyn, R = {
                                    bits: r3.distbits
                                }, F = a(2, r3.lens, r3.nlen, r3.ndist, r3.distcode, 0, r3.work, R), r3.distbits = R.bits, F) {
                                    t3.msg = "invalid distances set", r3.mode = l;
                                    break;
                                }
                                if (r3.mode = 20, e3 === 6) break t;
                            case 20:
                                r3.mode = 21;
                            case 21:
                                if (y2 >= 6 && m2 >= 258) {
                                    t3.next_out = g2, t3.avail_out = m2, t3.next_in = p2, t3.avail_in = y2, r3.hold = v2, r3.bits = b2, s(t3, A), g2 = t3.next_out, d2 = t3.output, m2 = t3.avail_out, p2 = t3.next_in, f2 = t3.input, y2 = t3.avail_in, v2 = r3.hold, b2 = r3.bits, r3.mode === c && (r3.back = -1);
                                    break;
                                }
                                for(r3.back = 0; O = (N = r3.lencode[v2 & (1 << r3.lenbits) - 1]) >>> 16 & 255, C = 65535 & N, !((T = N >>> 24) <= b2);){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                if (O && (240 & O) == 0) {
                                    for(j = T, D = O, I = C; O = (N = r3.lencode[I + ((v2 & (1 << j + D) - 1) >> j)]) >>> 16 & 255, C = 65535 & N, !(j + (T = N >>> 24) <= b2);){
                                        if (y2 === 0) break t;
                                        y2--, v2 += f2[p2++] << b2, b2 += 8;
                                    }
                                    v2 >>>= j, b2 -= j, r3.back += j;
                                }
                                if (v2 >>>= T, b2 -= T, r3.back += T, r3.length = C, O === 0) {
                                    r3.mode = 26;
                                    break;
                                }
                                if (32 & O) {
                                    r3.back = -1, r3.mode = c;
                                    break;
                                }
                                if (64 & O) {
                                    t3.msg = "invalid literal/length code", r3.mode = l;
                                    break;
                                }
                                r3.extra = 15 & O, r3.mode = 22;
                            case 22:
                                if (r3.extra) {
                                    for(M = r3.extra; b2 < M;){
                                        if (y2 === 0) break t;
                                        y2--, v2 += f2[p2++] << b2, b2 += 8;
                                    }
                                    r3.length += v2 & (1 << r3.extra) - 1, v2 >>>= r3.extra, b2 -= r3.extra, r3.back += r3.extra;
                                }
                                r3.was = r3.length, r3.mode = 23;
                            case 23:
                                for(; O = (N = r3.distcode[v2 & (1 << r3.distbits) - 1]) >>> 16 & 255, C = 65535 & N, !((T = N >>> 24) <= b2);){
                                    if (y2 === 0) break t;
                                    y2--, v2 += f2[p2++] << b2, b2 += 8;
                                }
                                if ((240 & O) == 0) {
                                    for(j = T, D = O, I = C; O = (N = r3.distcode[I + ((v2 & (1 << j + D) - 1) >> j)]) >>> 16 & 255, C = 65535 & N, !(j + (T = N >>> 24) <= b2);){
                                        if (y2 === 0) break t;
                                        y2--, v2 += f2[p2++] << b2, b2 += 8;
                                    }
                                    v2 >>>= j, b2 -= j, r3.back += j;
                                }
                                if (v2 >>>= T, b2 -= T, r3.back += T, 64 & O) {
                                    t3.msg = "invalid distance code", r3.mode = l;
                                    break;
                                }
                                r3.offset = C, r3.extra = 15 & O, r3.mode = 24;
                            case 24:
                                if (r3.extra) {
                                    for(M = r3.extra; b2 < M;){
                                        if (y2 === 0) break t;
                                        y2--, v2 += f2[p2++] << b2, b2 += 8;
                                    }
                                    r3.offset += v2 & (1 << r3.extra) - 1, v2 >>>= r3.extra, b2 -= r3.extra, r3.back += r3.extra;
                                }
                                if (r3.offset > r3.dmax) {
                                    t3.msg = "invalid distance too far back", r3.mode = l;
                                    break;
                                }
                                r3.mode = 25;
                            case 25:
                                if (m2 === 0) break t;
                                if (S = A - m2, r3.offset > S) {
                                    if ((S = r3.offset - S) > r3.whave && r3.sane) {
                                        t3.msg = "invalid distance too far back", r3.mode = l;
                                        break;
                                    }
                                    S > r3.wnext ? (S -= r3.wnext, P = r3.wsize - S) : P = r3.wnext - S, S > r3.length && (S = r3.length), x = r3.window;
                                } else x = d2, P = g2 - r3.offset, S = r3.length;
                                S > m2 && (S = m2), m2 -= S, r3.length -= S;
                                do {
                                    d2[g2++] = x[P++];
                                }while (--S)
                                r3.length === 0 && (r3.mode = 21);
                                break;
                            case 26:
                                if (m2 === 0) break t;
                                d2[g2++] = r3.length, m2--, r3.mode = 21;
                                break;
                            case 27:
                                if (r3.wrap) {
                                    for(; b2 < 32;){
                                        if (y2 === 0) break t;
                                        y2--, v2 |= f2[p2++] << b2, b2 += 8;
                                    }
                                    if (A -= m2, t3.total_out += A, r3.total += A, A && (t3.adler = r3.check = r3.flags ? o(r3.check, d2, A, g2 - A) : i(r3.check, d2, A, g2 - A)), A = m2, (r3.flags ? v2 : h(v2)) !== r3.check) {
                                        t3.msg = "incorrect data check", r3.mode = l;
                                        break;
                                    }
                                    v2 = 0, b2 = 0;
                                }
                                r3.mode = 28;
                            case 28:
                                if (r3.wrap && r3.flags) {
                                    for(; b2 < 32;){
                                        if (y2 === 0) break t;
                                        y2--, v2 += f2[p2++] << b2, b2 += 8;
                                    }
                                    if (v2 !== (4294967295 & r3.total)) {
                                        t3.msg = "incorrect length check", r3.mode = l;
                                        break;
                                    }
                                    v2 = 0, b2 = 0;
                                }
                                r3.mode = 29;
                            case 29:
                                F = 1;
                                break t;
                            case l:
                                F = -3;
                                break t;
                            case 31:
                                return -4;
                            default:
                                return u;
                        }
                        return t3.next_out = g2, t3.avail_out = m2, t3.next_in = p2, t3.avail_in = y2, r3.hold = v2, r3.bits = b2, (r3.wsize || A !== t3.avail_out && r3.mode < l && (r3.mode < 27 || e3 !== 4)) && w(t3, t3.output, t3.next_out, A - t3.avail_out) ? (r3.mode = 31, -4) : (E -= t3.avail_in, A -= t3.avail_out, t3.total_in += E, t3.total_out += A, r3.total += A, r3.wrap && A && (t3.adler = r3.check = r3.flags ? o(r3.check, d2, A, t3.next_out - A) : i(r3.check, d2, A, t3.next_out - A)), t3.data_type = r3.bits + (r3.last ? 64 : 0) + (r3.mode === c ? 128 : 0) + (r3.mode === 20 || r3.mode === 15 ? 256 : 0), (E === 0 && A === 0 || e3 === 4) && F === 0 && (F = -5), F);
                    }, e2.inflateEnd = function(t3) {
                        if (!t3 || !t3.state) return u;
                        var e3 = t3.state;
                        return e3.window && (e3.window = null), t3.state = null, 0;
                    }, e2.inflateGetHeader = function(t3, e3) {
                        var r3;
                        return t3 && t3.state ? (2 & (r3 = t3.state).wrap) == 0 ? u : (r3.head = e3, e3.done = false, 0) : u;
                    }, e2.inflateSetDictionary = function(t3, e3) {
                        var r3, n2 = e3.length;
                        return t3 && t3.state ? (r3 = t3.state).wrap !== 0 && r3.mode !== 11 ? u : r3.mode === 11 && i(1, e3, n2, 0) !== r3.check ? -3 : w(t3, e3, n2, n2) ? (r3.mode = 31, -4) : (r3.havedict = 1, 0) : u;
                    }, e2.inflateInfo = "pako inflate (from Nodeca project)";
                },
                9241: (t2, e2, r2)=>{
                    var n = r2(4236), i = [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        13,
                        15,
                        17,
                        19,
                        23,
                        27,
                        31,
                        35,
                        43,
                        51,
                        59,
                        67,
                        83,
                        99,
                        115,
                        131,
                        163,
                        195,
                        227,
                        258,
                        0,
                        0
                    ], o = [
                        16,
                        16,
                        16,
                        16,
                        16,
                        16,
                        16,
                        16,
                        17,
                        17,
                        17,
                        17,
                        18,
                        18,
                        18,
                        18,
                        19,
                        19,
                        19,
                        19,
                        20,
                        20,
                        20,
                        20,
                        21,
                        21,
                        21,
                        21,
                        16,
                        72,
                        78
                    ], s = [
                        1,
                        2,
                        3,
                        4,
                        5,
                        7,
                        9,
                        13,
                        17,
                        25,
                        33,
                        49,
                        65,
                        97,
                        129,
                        193,
                        257,
                        385,
                        513,
                        769,
                        1025,
                        1537,
                        2049,
                        3073,
                        4097,
                        6145,
                        8193,
                        12289,
                        16385,
                        24577,
                        0,
                        0
                    ], a = [
                        16,
                        16,
                        16,
                        16,
                        17,
                        17,
                        18,
                        18,
                        19,
                        19,
                        20,
                        20,
                        21,
                        21,
                        22,
                        22,
                        23,
                        23,
                        24,
                        24,
                        25,
                        25,
                        26,
                        26,
                        27,
                        27,
                        28,
                        28,
                        29,
                        29,
                        64,
                        64
                    ];
                    t2.exports = function(t3, e3, r3, u, c, l, h, f) {
                        var d, p, g, y, m, v, b, _, w, E = f.bits, A = 0, S = 0, P = 0, x = 0, T = 0, O = 0, C = 0, j = 0, D = 0, I = 0, k = null, F = 0, R = new n.Buf16(16), M = new n.Buf16(16), N = null, L = 0;
                        for(A = 0; A <= 15; A++)R[A] = 0;
                        for(S = 0; S < u; S++)R[e3[r3 + S]]++;
                        for(T = E, x = 15; x >= 1 && R[x] === 0; x--);
                        if (T > x && (T = x), x === 0) return c[l++] = 20971520, c[l++] = 20971520, f.bits = 1, 0;
                        for(P = 1; P < x && R[P] === 0; P++);
                        for(T < P && (T = P), j = 1, A = 1; A <= 15; A++)if (j <<= 1, (j -= R[A]) < 0) return -1;
                        if (j > 0 && (t3 === 0 || x !== 1)) return -1;
                        for(M[1] = 0, A = 1; A < 15; A++)M[A + 1] = M[A] + R[A];
                        for(S = 0; S < u; S++)e3[r3 + S] !== 0 && (h[M[e3[r3 + S]]++] = S);
                        if (t3 === 0 ? (k = N = h, v = 19) : t3 === 1 ? (k = i, F -= 257, N = o, L -= 257, v = 256) : (k = s, N = a, v = -1), I = 0, S = 0, A = P, m = l, O = T, C = 0, g = -1, y = (D = 1 << T) - 1, t3 === 1 && D > 852 || t3 === 2 && D > 592) return 1;
                        for(;;){
                            b = A - C, h[S] < v ? (_ = 0, w = h[S]) : h[S] > v ? (_ = N[L + h[S]], w = k[F + h[S]]) : (_ = 96, w = 0), d = 1 << A - C, P = p = 1 << O;
                            do {
                                c[m + (I >> C) + (p -= d)] = b << 24 | _ << 16 | w | 0;
                            }while (p !== 0)
                            for(d = 1 << A - 1; I & d;)d >>= 1;
                            if (d !== 0 ? (I &= d - 1, I += d) : I = 0, S++, --R[A] == 0) {
                                if (A === x) break;
                                A = e3[r3 + h[S]];
                            }
                            if (A > T && (I & y) !== g) {
                                for(C === 0 && (C = T), m += P, j = 1 << (O = A - C); O + C < x && !((j -= R[O + C]) <= 0);)O++, j <<= 1;
                                if (D += 1 << O, t3 === 1 && D > 852 || t3 === 2 && D > 592) return 1;
                                c[g = I & y] = T << 24 | O << 16 | m - l | 0;
                            }
                        }
                        return I !== 0 && (c[m + I] = A - C << 24 | 64 << 16 | 0), f.bits = T, 0;
                    };
                },
                8898: (t2)=>{
                    t2.exports = {
                        2: "need dictionary",
                        1: "stream end",
                        0: "",
                        "-1": "file error",
                        "-2": "stream error",
                        "-3": "data error",
                        "-4": "insufficient memory",
                        "-5": "buffer error",
                        "-6": "incompatible version"
                    };
                },
                342: (t2, e2, r2)=>{
                    var n = r2(4236);
                    function i(t3) {
                        for(var e3 = t3.length; --e3 >= 0;)t3[e3] = 0;
                    }
                    var o = [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        1,
                        1,
                        1,
                        2,
                        2,
                        2,
                        2,
                        3,
                        3,
                        3,
                        3,
                        4,
                        4,
                        4,
                        4,
                        5,
                        5,
                        5,
                        5,
                        0
                    ], s = [
                        0,
                        0,
                        0,
                        0,
                        1,
                        1,
                        2,
                        2,
                        3,
                        3,
                        4,
                        4,
                        5,
                        5,
                        6,
                        6,
                        7,
                        7,
                        8,
                        8,
                        9,
                        9,
                        10,
                        10,
                        11,
                        11,
                        12,
                        12,
                        13,
                        13
                    ], a = [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        2,
                        3,
                        7
                    ], u = [
                        16,
                        17,
                        18,
                        0,
                        8,
                        7,
                        9,
                        6,
                        10,
                        5,
                        11,
                        4,
                        12,
                        3,
                        13,
                        2,
                        14,
                        1,
                        15
                    ], c = new Array(576);
                    i(c);
                    var l = new Array(60);
                    i(l);
                    var h = new Array(512);
                    i(h);
                    var f = new Array(256);
                    i(f);
                    var d = new Array(29);
                    i(d);
                    var p, g, y, m = new Array(30);
                    function v(t3, e3, r3, n2, i2) {
                        this.static_tree = t3, this.extra_bits = e3, this.extra_base = r3, this.elems = n2, this.max_length = i2, this.has_stree = t3 && t3.length;
                    }
                    function b(t3, e3) {
                        this.dyn_tree = t3, this.max_code = 0, this.stat_desc = e3;
                    }
                    function _(t3) {
                        return t3 < 256 ? h[t3] : h[256 + (t3 >>> 7)];
                    }
                    function w(t3, e3) {
                        t3.pending_buf[t3.pending++] = 255 & e3, t3.pending_buf[t3.pending++] = e3 >>> 8 & 255;
                    }
                    function E(t3, e3, r3) {
                        t3.bi_valid > 16 - r3 ? (t3.bi_buf |= e3 << t3.bi_valid & 65535, w(t3, t3.bi_buf), t3.bi_buf = e3 >> 16 - t3.bi_valid, t3.bi_valid += r3 - 16) : (t3.bi_buf |= e3 << t3.bi_valid & 65535, t3.bi_valid += r3);
                    }
                    function A(t3, e3, r3) {
                        E(t3, r3[2 * e3], r3[2 * e3 + 1]);
                    }
                    function S(t3, e3) {
                        var r3 = 0;
                        do {
                            r3 |= 1 & t3, t3 >>>= 1, r3 <<= 1;
                        }while (--e3 > 0)
                        return r3 >>> 1;
                    }
                    function P(t3, e3, r3) {
                        var n2, i2, o2 = new Array(16), s2 = 0;
                        for(n2 = 1; n2 <= 15; n2++)o2[n2] = s2 = s2 + r3[n2 - 1] << 1;
                        for(i2 = 0; i2 <= e3; i2++){
                            var a2 = t3[2 * i2 + 1];
                            a2 !== 0 && (t3[2 * i2] = S(o2[a2]++, a2));
                        }
                    }
                    function x(t3) {
                        var e3;
                        for(e3 = 0; e3 < 286; e3++)t3.dyn_ltree[2 * e3] = 0;
                        for(e3 = 0; e3 < 30; e3++)t3.dyn_dtree[2 * e3] = 0;
                        for(e3 = 0; e3 < 19; e3++)t3.bl_tree[2 * e3] = 0;
                        t3.dyn_ltree[512] = 1, t3.opt_len = t3.static_len = 0, t3.last_lit = t3.matches = 0;
                    }
                    function T(t3) {
                        t3.bi_valid > 8 ? w(t3, t3.bi_buf) : t3.bi_valid > 0 && (t3.pending_buf[t3.pending++] = t3.bi_buf), t3.bi_buf = 0, t3.bi_valid = 0;
                    }
                    function O(t3, e3, r3, n2) {
                        var i2 = 2 * e3, o2 = 2 * r3;
                        return t3[i2] < t3[o2] || t3[i2] === t3[o2] && n2[e3] <= n2[r3];
                    }
                    function C(t3, e3, r3) {
                        for(var n2 = t3.heap[r3], i2 = r3 << 1; i2 <= t3.heap_len && (i2 < t3.heap_len && O(e3, t3.heap[i2 + 1], t3.heap[i2], t3.depth) && i2++, !O(e3, n2, t3.heap[i2], t3.depth));)t3.heap[r3] = t3.heap[i2], r3 = i2, i2 <<= 1;
                        t3.heap[r3] = n2;
                    }
                    function j(t3, e3, r3) {
                        var n2, i2, a2, u2, c2 = 0;
                        if (t3.last_lit !== 0) do {
                            n2 = t3.pending_buf[t3.d_buf + 2 * c2] << 8 | t3.pending_buf[t3.d_buf + 2 * c2 + 1], i2 = t3.pending_buf[t3.l_buf + c2], c2++, n2 === 0 ? A(t3, i2, e3) : (A(t3, (a2 = f[i2]) + 256 + 1, e3), (u2 = o[a2]) !== 0 && E(t3, i2 -= d[a2], u2), A(t3, a2 = _(--n2), r3), (u2 = s[a2]) !== 0 && E(t3, n2 -= m[a2], u2));
                        }while (c2 < t3.last_lit)
                        A(t3, 256, e3);
                    }
                    function D(t3, e3) {
                        var r3, n2, i2, o2 = e3.dyn_tree, s2 = e3.stat_desc.static_tree, a2 = e3.stat_desc.has_stree, u2 = e3.stat_desc.elems, c2 = -1;
                        for(t3.heap_len = 0, t3.heap_max = 573, r3 = 0; r3 < u2; r3++)o2[2 * r3] !== 0 ? (t3.heap[++t3.heap_len] = c2 = r3, t3.depth[r3] = 0) : o2[2 * r3 + 1] = 0;
                        for(; t3.heap_len < 2;)o2[2 * (i2 = t3.heap[++t3.heap_len] = c2 < 2 ? ++c2 : 0)] = 1, t3.depth[i2] = 0, t3.opt_len--, a2 && (t3.static_len -= s2[2 * i2 + 1]);
                        for(e3.max_code = c2, r3 = t3.heap_len >> 1; r3 >= 1; r3--)C(t3, o2, r3);
                        i2 = u2;
                        do {
                            r3 = t3.heap[1], t3.heap[1] = t3.heap[t3.heap_len--], C(t3, o2, 1), n2 = t3.heap[1], t3.heap[--t3.heap_max] = r3, t3.heap[--t3.heap_max] = n2, o2[2 * i2] = o2[2 * r3] + o2[2 * n2], t3.depth[i2] = (t3.depth[r3] >= t3.depth[n2] ? t3.depth[r3] : t3.depth[n2]) + 1, o2[2 * r3 + 1] = o2[2 * n2 + 1] = i2, t3.heap[1] = i2++, C(t3, o2, 1);
                        }while (t3.heap_len >= 2)
                        t3.heap[--t3.heap_max] = t3.heap[1], function(t4, e4) {
                            var r4, n3, i3, o3, s3, a3, u3 = e4.dyn_tree, c3 = e4.max_code, l2 = e4.stat_desc.static_tree, h2 = e4.stat_desc.has_stree, f2 = e4.stat_desc.extra_bits, d2 = e4.stat_desc.extra_base, p2 = e4.stat_desc.max_length, g2 = 0;
                            for(o3 = 0; o3 <= 15; o3++)t4.bl_count[o3] = 0;
                            for(u3[2 * t4.heap[t4.heap_max] + 1] = 0, r4 = t4.heap_max + 1; r4 < 573; r4++)(o3 = u3[2 * u3[2 * (n3 = t4.heap[r4]) + 1] + 1] + 1) > p2 && (o3 = p2, g2++), u3[2 * n3 + 1] = o3, n3 > c3 || (t4.bl_count[o3]++, s3 = 0, n3 >= d2 && (s3 = f2[n3 - d2]), a3 = u3[2 * n3], t4.opt_len += a3 * (o3 + s3), h2 && (t4.static_len += a3 * (l2[2 * n3 + 1] + s3)));
                            if (g2 !== 0) {
                                do {
                                    for(o3 = p2 - 1; t4.bl_count[o3] === 0;)o3--;
                                    t4.bl_count[o3]--, t4.bl_count[o3 + 1] += 2, t4.bl_count[p2]--, g2 -= 2;
                                }while (g2 > 0)
                                for(o3 = p2; o3 !== 0; o3--)for(n3 = t4.bl_count[o3]; n3 !== 0;)(i3 = t4.heap[--r4]) > c3 || (u3[2 * i3 + 1] !== o3 && (t4.opt_len += (o3 - u3[2 * i3 + 1]) * u3[2 * i3], u3[2 * i3 + 1] = o3), n3--);
                            }
                        }(t3, e3), P(o2, c2, t3.bl_count);
                    }
                    function I(t3, e3, r3) {
                        var n2, i2, o2 = -1, s2 = e3[1], a2 = 0, u2 = 7, c2 = 4;
                        for(s2 === 0 && (u2 = 138, c2 = 3), e3[2 * (r3 + 1) + 1] = 65535, n2 = 0; n2 <= r3; n2++)i2 = s2, s2 = e3[2 * (n2 + 1) + 1], ++a2 < u2 && i2 === s2 || (a2 < c2 ? t3.bl_tree[2 * i2] += a2 : i2 !== 0 ? (i2 !== o2 && t3.bl_tree[2 * i2]++, t3.bl_tree[32]++) : a2 <= 10 ? t3.bl_tree[34]++ : t3.bl_tree[36]++, a2 = 0, o2 = i2, s2 === 0 ? (u2 = 138, c2 = 3) : i2 === s2 ? (u2 = 6, c2 = 3) : (u2 = 7, c2 = 4));
                    }
                    function k(t3, e3, r3) {
                        var n2, i2, o2 = -1, s2 = e3[1], a2 = 0, u2 = 7, c2 = 4;
                        for(s2 === 0 && (u2 = 138, c2 = 3), n2 = 0; n2 <= r3; n2++)if (i2 = s2, s2 = e3[2 * (n2 + 1) + 1], !(++a2 < u2 && i2 === s2)) {
                            if (a2 < c2) do {
                                A(t3, i2, t3.bl_tree);
                            }while (--a2 != 0)
                            else i2 !== 0 ? (i2 !== o2 && (A(t3, i2, t3.bl_tree), a2--), A(t3, 16, t3.bl_tree), E(t3, a2 - 3, 2)) : a2 <= 10 ? (A(t3, 17, t3.bl_tree), E(t3, a2 - 3, 3)) : (A(t3, 18, t3.bl_tree), E(t3, a2 - 11, 7));
                            a2 = 0, o2 = i2, s2 === 0 ? (u2 = 138, c2 = 3) : i2 === s2 ? (u2 = 6, c2 = 3) : (u2 = 7, c2 = 4);
                        }
                    }
                    i(m);
                    var F = false;
                    function R(t3, e3, r3, i2) {
                        E(t3, 0 + (i2 ? 1 : 0), 3), function(t4, e4, r4, i3) {
                            T(t4), w(t4, r4), w(t4, ~r4), n.arraySet(t4.pending_buf, t4.window, e4, r4, t4.pending), t4.pending += r4;
                        }(t3, e3, r3);
                    }
                    e2._tr_init = function(t3) {
                        F || (function() {
                            var t4, e3, r3, n2, i2, u2 = new Array(16);
                            for(r3 = 0, n2 = 0; n2 < 28; n2++)for(d[n2] = r3, t4 = 0; t4 < 1 << o[n2]; t4++)f[r3++] = n2;
                            for(f[r3 - 1] = n2, i2 = 0, n2 = 0; n2 < 16; n2++)for(m[n2] = i2, t4 = 0; t4 < 1 << s[n2]; t4++)h[i2++] = n2;
                            for(i2 >>= 7; n2 < 30; n2++)for(m[n2] = i2 << 7, t4 = 0; t4 < 1 << s[n2] - 7; t4++)h[256 + i2++] = n2;
                            for(e3 = 0; e3 <= 15; e3++)u2[e3] = 0;
                            for(t4 = 0; t4 <= 143;)c[2 * t4 + 1] = 8, t4++, u2[8]++;
                            for(; t4 <= 255;)c[2 * t4 + 1] = 9, t4++, u2[9]++;
                            for(; t4 <= 279;)c[2 * t4 + 1] = 7, t4++, u2[7]++;
                            for(; t4 <= 287;)c[2 * t4 + 1] = 8, t4++, u2[8]++;
                            for(P(c, 287, u2), t4 = 0; t4 < 30; t4++)l[2 * t4 + 1] = 5, l[2 * t4] = S(t4, 5);
                            p = new v(c, o, 257, 286, 15), g = new v(l, s, 0, 30, 15), y = new v(new Array(0), a, 0, 19, 7);
                        }(), F = true), t3.l_desc = new b(t3.dyn_ltree, p), t3.d_desc = new b(t3.dyn_dtree, g), t3.bl_desc = new b(t3.bl_tree, y), t3.bi_buf = 0, t3.bi_valid = 0, x(t3);
                    }, e2._tr_stored_block = R, e2._tr_flush_block = function(t3, e3, r3, n2) {
                        var i2, o2, s2 = 0;
                        t3.level > 0 ? (t3.strm.data_type === 2 && (t3.strm.data_type = function(t4) {
                            var e4, r4 = 4093624447;
                            for(e4 = 0; e4 <= 31; e4++, r4 >>>= 1)if (1 & r4 && t4.dyn_ltree[2 * e4] !== 0) return 0;
                            if (t4.dyn_ltree[18] !== 0 || t4.dyn_ltree[20] !== 0 || t4.dyn_ltree[26] !== 0) return 1;
                            for(e4 = 32; e4 < 256; e4++)if (t4.dyn_ltree[2 * e4] !== 0) return 1;
                            return 0;
                        }(t3)), D(t3, t3.l_desc), D(t3, t3.d_desc), s2 = function(t4) {
                            var e4;
                            for(I(t4, t4.dyn_ltree, t4.l_desc.max_code), I(t4, t4.dyn_dtree, t4.d_desc.max_code), D(t4, t4.bl_desc), e4 = 18; e4 >= 3 && t4.bl_tree[2 * u[e4] + 1] === 0; e4--);
                            return t4.opt_len += 3 * (e4 + 1) + 5 + 5 + 4, e4;
                        }(t3), i2 = t3.opt_len + 3 + 7 >>> 3, (o2 = t3.static_len + 3 + 7 >>> 3) <= i2 && (i2 = o2)) : i2 = o2 = r3 + 5, r3 + 4 <= i2 && e3 !== -1 ? R(t3, e3, r3, n2) : t3.strategy === 4 || o2 === i2 ? (E(t3, 2 + (n2 ? 1 : 0), 3), j(t3, c, l)) : (E(t3, 4 + (n2 ? 1 : 0), 3), function(t4, e4, r4, n3) {
                            var i3;
                            for(E(t4, e4 - 257, 5), E(t4, r4 - 1, 5), E(t4, n3 - 4, 4), i3 = 0; i3 < n3; i3++)E(t4, t4.bl_tree[2 * u[i3] + 1], 3);
                            k(t4, t4.dyn_ltree, e4 - 1), k(t4, t4.dyn_dtree, r4 - 1);
                        }(t3, t3.l_desc.max_code + 1, t3.d_desc.max_code + 1, s2 + 1), j(t3, t3.dyn_ltree, t3.dyn_dtree)), x(t3), n2 && T(t3);
                    }, e2._tr_tally = function(t3, e3, r3) {
                        return t3.pending_buf[t3.d_buf + 2 * t3.last_lit] = e3 >>> 8 & 255, t3.pending_buf[t3.d_buf + 2 * t3.last_lit + 1] = 255 & e3, t3.pending_buf[t3.l_buf + t3.last_lit] = 255 & r3, t3.last_lit++, e3 === 0 ? t3.dyn_ltree[2 * r3]++ : (t3.matches++, e3--, t3.dyn_ltree[2 * (f[r3] + 256 + 1)]++, t3.dyn_dtree[2 * _(e3)]++), t3.last_lit === t3.lit_bufsize - 1;
                    }, e2._tr_align = function(t3) {
                        E(t3, 2, 3), A(t3, 256, c), function(t4) {
                            t4.bi_valid === 16 ? (w(t4, t4.bi_buf), t4.bi_buf = 0, t4.bi_valid = 0) : t4.bi_valid >= 8 && (t4.pending_buf[t4.pending++] = 255 & t4.bi_buf, t4.bi_buf >>= 8, t4.bi_valid -= 8);
                        }(t3);
                    };
                },
                2292: (t2)=>{
                    t2.exports = function() {
                        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
                    };
                },
                3722: (t2, e2, r2)=>{
                    var n = r2(6930), i = function(t3) {
                        return typeof t3 == "string";
                    };
                    function o(t3, e3) {
                        for(var r3 = [], n2 = 0; n2 < t3.length; n2++){
                            var i2 = t3[n2];
                            i2 && i2 !== "." && (i2 === ".." ? r3.length && r3[r3.length - 1] !== ".." ? r3.pop() : e3 && r3.push("..") : r3.push(i2));
                        }
                        return r3;
                    }
                    var s = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/, a = {};
                    function u(t3) {
                        return s.exec(t3).slice(1);
                    }
                    a.resolve = function() {
                        for(var t3 = "", e3 = false, r3 = arguments.length - 1; r3 >= -1 && !e3; r3--){
                            var n2 = r3 >= 0 ? arguments[r3] : process.cwd();
                            if (!i(n2)) throw new TypeError("Arguments to path.resolve must be strings");
                            n2 && (t3 = n2 + "/" + t3, e3 = n2.charAt(0) === "/");
                        }
                        return (e3 ? "/" : "") + (t3 = o(t3.split("/"), !e3).join("/")) || ".";
                    }, a.normalize = function(t3) {
                        var e3 = a.isAbsolute(t3), r3 = t3.substr(-1) === "/";
                        return (t3 = o(t3.split("/"), !e3).join("/")) || e3 || (t3 = "."), t3 && r3 && (t3 += "/"), (e3 ? "/" : "") + t3;
                    }, a.isAbsolute = function(t3) {
                        return t3.charAt(0) === "/";
                    }, a.join = function() {
                        for(var t3 = "", e3 = 0; e3 < arguments.length; e3++){
                            var r3 = arguments[e3];
                            if (!i(r3)) throw new TypeError("Arguments to path.join must be strings");
                            r3 && (t3 += t3 ? "/" + r3 : r3);
                        }
                        return a.normalize(t3);
                    }, a.relative = function(t3, e3) {
                        function r3(t4) {
                            for(var e4 = 0; e4 < t4.length && t4[e4] === ""; e4++);
                            for(var r4 = t4.length - 1; r4 >= 0 && t4[r4] === ""; r4--);
                            return e4 > r4 ? [] : t4.slice(e4, r4 + 1);
                        }
                        t3 = a.resolve(t3).substr(1), e3 = a.resolve(e3).substr(1);
                        for(var n2 = r3(t3.split("/")), i2 = r3(e3.split("/")), o2 = Math.min(n2.length, i2.length), s2 = o2, u2 = 0; u2 < o2; u2++)if (n2[u2] !== i2[u2]) {
                            s2 = u2;
                            break;
                        }
                        var c = [];
                        for(u2 = s2; u2 < n2.length; u2++)c.push("..");
                        return (c = c.concat(i2.slice(s2))).join("/");
                    }, a._makeLong = function(t3) {
                        return t3;
                    }, a.dirname = function(t3) {
                        var e3 = u(t3), r3 = e3[0], n2 = e3[1];
                        return r3 || n2 ? (n2 && (n2 = n2.substr(0, n2.length - 1)), r3 + n2) : ".";
                    }, a.basename = function(t3, e3) {
                        var r3 = u(t3)[2];
                        return e3 && r3.substr(-1 * e3.length) === e3 && (r3 = r3.substr(0, r3.length - e3.length)), r3;
                    }, a.extname = function(t3) {
                        return u(t3)[3];
                    }, a.format = function(t3) {
                        if (!n.isObject(t3)) throw new TypeError("Parameter 'pathObject' must be an object, not " + typeof t3);
                        var e3 = t3.root || "";
                        if (!i(e3)) throw new TypeError("'pathObject.root' must be a string or undefined, not " + typeof t3.root);
                        return (t3.dir ? t3.dir + a.sep : "") + (t3.base || "");
                    }, a.parse = function(t3) {
                        if (!i(t3)) throw new TypeError("Parameter 'pathString' must be a string, not " + typeof t3);
                        var e3 = u(t3);
                        if (!e3 || e3.length !== 4) throw new TypeError("Invalid path '" + t3 + "'");
                        return e3[1] = e3[1] || "", e3[2] = e3[2] || "", e3[3] = e3[3] || "", {
                            root: e3[0],
                            dir: e3[0] + e3[1].slice(0, e3[1].length - 1),
                            base: e3[2],
                            ext: e3[3],
                            name: e3[2].slice(0, e3[2].length - e3[3].length)
                        };
                    }, a.sep = "/", a.delimiter = ":", t2.exports = a;
                },
                2352: (t2)=>{
                    const e2 = (t3, e3, r3, n)=>function(...i) {
                            return new e3.promiseModule((o, s)=>{
                                e3.multiArgs ? i.push((...t4)=>{
                                    e3.errorFirst ? t4[0] ? s(t4) : (t4.shift(), o(t4)) : o(t4);
                                }) : e3.errorFirst ? i.push((t4, e4)=>{
                                    t4 ? s(t4) : o(e4);
                                }) : i.push(o);
                                const a = this === r3 ? n : this;
                                Reflect.apply(t3, a, i);
                            });
                        }
                    , r2 = new WeakMap();
                    t2.exports = (t3, n)=>{
                        n = {
                            exclude: [
                                /.+(?:Sync|Stream)$/
                            ],
                            errorFirst: true,
                            promiseModule: Promise,
                            ...n
                        };
                        const i = typeof t3;
                        if (t3 === null || i !== "object" && i !== "function") throw new TypeError(`Expected \`input\` to be a \`Function\` or \`Object\`, got \`${t3 === null ? "null" : i}\``);
                        const o = new WeakMap(), s = new Proxy(t3, {
                            apply (t4, r3, i2) {
                                const a = o.get(t4);
                                if (a) return Reflect.apply(a, r3, i2);
                                const u = n.excludeMain ? t4 : e2(t4, n, s, t4);
                                return o.set(t4, u), Reflect.apply(u, r3, i2);
                            },
                            get (t4, i2) {
                                const a = t4[i2];
                                if (!((t5, e3)=>{
                                    let i3 = r2.get(t5);
                                    if (i3 || (i3 = {}, r2.set(t5, i3)), e3 in i3) return i3[e3];
                                    const o2 = (t6)=>typeof t6 == "string" || typeof e3 == "symbol" ? e3 === t6 : t6.test(e3)
                                    , s2 = Reflect.getOwnPropertyDescriptor(t5, e3), a2 = s2 === void 0 || s2.writable || s2.configurable, u2 = (n.include ? n.include.some(o2) : !n.exclude.some(o2)) && a2;
                                    return i3[e3] = u2, u2;
                                })(t4, i2) || a === Function.prototype[i2]) return a;
                                const u = o.get(a);
                                if (u) return u;
                                if (typeof a == "function") {
                                    const r3 = e2(a, n, s, t4);
                                    return o.set(a, r3), r3;
                                }
                                return a;
                            }
                        });
                        return s;
                    };
                },
                7563: (t2, e2, r2)=>{
                    const n = r2(610), i = r2(4020), o = r2(500), s = r2(2806), a = Symbol("encodeFragmentIdentifier");
                    function u(t3) {
                        if (typeof t3 != "string" || t3.length !== 1) throw new TypeError("arrayFormatSeparator must be single character string");
                    }
                    function c(t3, e3) {
                        return e3.encode ? e3.strict ? n(t3) : encodeURIComponent(t3) : t3;
                    }
                    function l(t3, e3) {
                        return e3.decode ? i(t3) : t3;
                    }
                    function h(t3) {
                        return Array.isArray(t3) ? t3.sort() : typeof t3 == "object" ? h(Object.keys(t3)).sort((t4, e3)=>Number(t4) - Number(e3)
                        ).map((e3)=>t3[e3]
                        ) : t3;
                    }
                    function f(t3) {
                        const e3 = t3.indexOf("#");
                        return e3 !== -1 && (t3 = t3.slice(0, e3)), t3;
                    }
                    function d(t3) {
                        const e3 = (t3 = f(t3)).indexOf("?");
                        return e3 === -1 ? "" : t3.slice(e3 + 1);
                    }
                    function p(t3, e3) {
                        return e3.parseNumbers && !Number.isNaN(Number(t3)) && typeof t3 == "string" && t3.trim() !== "" ? t3 = Number(t3) : !e3.parseBooleans || t3 === null || t3.toLowerCase() !== "true" && t3.toLowerCase() !== "false" || (t3 = t3.toLowerCase() === "true"), t3;
                    }
                    function g(t3, e3) {
                        u((e3 = Object.assign({
                            decode: true,
                            sort: true,
                            arrayFormat: "none",
                            arrayFormatSeparator: ",",
                            parseNumbers: false,
                            parseBooleans: false
                        }, e3)).arrayFormatSeparator);
                        const r3 = function(t4) {
                            let e4;
                            switch(t4.arrayFormat){
                                case "index":
                                    return (t5, r4, n3)=>{
                                        e4 = /\[(\d*)\]$/.exec(t5), t5 = t5.replace(/\[\d*\]$/, ""), e4 ? (n3[t5] === void 0 && (n3[t5] = {}), n3[t5][e4[1]] = r4) : n3[t5] = r4;
                                    };
                                case "bracket":
                                    return (t5, r4, n3)=>{
                                        e4 = /(\[\])$/.exec(t5), t5 = t5.replace(/\[\]$/, ""), e4 ? n3[t5] !== void 0 ? n3[t5] = [].concat(n3[t5], r4) : n3[t5] = [
                                            r4
                                        ] : n3[t5] = r4;
                                    };
                                case "colon-list-separator":
                                    return (t5, r4, n3)=>{
                                        e4 = /(:list)$/.exec(t5), t5 = t5.replace(/:list$/, ""), e4 ? n3[t5] !== void 0 ? n3[t5] = [].concat(n3[t5], r4) : n3[t5] = [
                                            r4
                                        ] : n3[t5] = r4;
                                    };
                                case "comma":
                                case "separator":
                                    return (e5, r4, n3)=>{
                                        const i2 = typeof r4 == "string" && r4.includes(t4.arrayFormatSeparator), o2 = typeof r4 == "string" && !i2 && l(r4, t4).includes(t4.arrayFormatSeparator);
                                        r4 = o2 ? l(r4, t4) : r4;
                                        const s2 = i2 || o2 ? r4.split(t4.arrayFormatSeparator).map((e6)=>l(e6, t4)
                                        ) : r4 === null ? r4 : l(r4, t4);
                                        n3[e5] = s2;
                                    };
                                case "bracket-separator":
                                    return (e5, r4, n3)=>{
                                        const i2 = /(\[\])$/.test(e5);
                                        if (e5 = e5.replace(/\[\]$/, ""), !i2) return void (n3[e5] = r4 ? l(r4, t4) : r4);
                                        const o2 = r4 === null ? [] : r4.split(t4.arrayFormatSeparator).map((e6)=>l(e6, t4)
                                        );
                                        n3[e5] !== void 0 ? n3[e5] = [].concat(n3[e5], o2) : n3[e5] = o2;
                                    };
                                default:
                                    return (t5, e5, r4)=>{
                                        r4[t5] !== void 0 ? r4[t5] = [].concat(r4[t5], e5) : r4[t5] = e5;
                                    };
                            }
                        }(e3), n2 = Object.create(null);
                        if (typeof t3 != "string") return n2;
                        if (!(t3 = t3.trim().replace(/^[?#&]/, ""))) return n2;
                        for (const i21 of t3.split("&")){
                            if (i21 === "") continue;
                            let [t4, s2] = o(e3.decode ? i21.replace(/\+/g, " ") : i21, "=");
                            s2 = s2 === void 0 ? null : [
                                "comma",
                                "separator",
                                "bracket-separator"
                            ].includes(e3.arrayFormat) ? s2 : l(s2, e3), r3(l(t4, e3), s2, n2);
                        }
                        for (const t41 of Object.keys(n2)){
                            const r4 = n2[t41];
                            if (typeof r4 == "object" && r4 !== null) for (const t5 of Object.keys(r4))r4[t5] = p(r4[t5], e3);
                            else n2[t41] = p(r4, e3);
                        }
                        return e3.sort === false ? n2 : (e3.sort === true ? Object.keys(n2).sort() : Object.keys(n2).sort(e3.sort)).reduce((t4, e4)=>{
                            const r4 = n2[e4];
                            return Boolean(r4) && typeof r4 == "object" && !Array.isArray(r4) ? t4[e4] = h(r4) : t4[e4] = r4, t4;
                        }, Object.create(null));
                    }
                    e2.extract = d, e2.parse = g, e2.stringify = (t3, e3)=>{
                        if (!t3) return "";
                        u((e3 = Object.assign({
                            encode: true,
                            strict: true,
                            arrayFormat: "none",
                            arrayFormatSeparator: ","
                        }, e3)).arrayFormatSeparator);
                        const r3 = (r4)=>e3.skipNull && t3[r4] == null || e3.skipEmptyString && t3[r4] === ""
                        , n2 = function(t4) {
                            switch(t4.arrayFormat){
                                case "index":
                                    return (e4)=>(r4, n3)=>{
                                            const i3 = r4.length;
                                            return n3 === void 0 || t4.skipNull && n3 === null || t4.skipEmptyString && n3 === "" ? r4 : n3 === null ? [
                                                ...r4,
                                                [
                                                    c(e4, t4),
                                                    "[",
                                                    i3,
                                                    "]"
                                                ].join("")
                                            ] : [
                                                ...r4,
                                                [
                                                    c(e4, t4),
                                                    "[",
                                                    c(i3, t4),
                                                    "]=",
                                                    c(n3, t4)
                                                ].join("")
                                            ];
                                        }
                                    ;
                                case "bracket":
                                    return (e4)=>(r4, n3)=>n3 === void 0 || t4.skipNull && n3 === null || t4.skipEmptyString && n3 === "" ? r4 : n3 === null ? [
                                                ...r4,
                                                [
                                                    c(e4, t4),
                                                    "[]"
                                                ].join("")
                                            ] : [
                                                ...r4,
                                                [
                                                    c(e4, t4),
                                                    "[]=",
                                                    c(n3, t4)
                                                ].join("")
                                            ]
                                    ;
                                case "colon-list-separator":
                                    return (e4)=>(r4, n3)=>n3 === void 0 || t4.skipNull && n3 === null || t4.skipEmptyString && n3 === "" ? r4 : n3 === null ? [
                                                ...r4,
                                                [
                                                    c(e4, t4),
                                                    ":list="
                                                ].join("")
                                            ] : [
                                                ...r4,
                                                [
                                                    c(e4, t4),
                                                    ":list=",
                                                    c(n3, t4)
                                                ].join("")
                                            ]
                                    ;
                                case "comma":
                                case "separator":
                                case "bracket-separator":
                                    {
                                        const e4 = t4.arrayFormat === "bracket-separator" ? "[]=" : "=";
                                        return (r4)=>(n3, i3)=>i3 === void 0 || t4.skipNull && i3 === null || t4.skipEmptyString && i3 === "" ? n3 : (i3 = i3 === null ? "" : i3, n3.length === 0 ? [
                                                    [
                                                        c(r4, t4),
                                                        e4,
                                                        c(i3, t4)
                                                    ].join("")
                                                ] : [
                                                    [
                                                        n3,
                                                        c(i3, t4)
                                                    ].join(t4.arrayFormatSeparator)
                                                ])
                                        ;
                                    }
                                default:
                                    return (e4)=>(r4, n3)=>n3 === void 0 || t4.skipNull && n3 === null || t4.skipEmptyString && n3 === "" ? r4 : n3 === null ? [
                                                ...r4,
                                                c(e4, t4)
                                            ] : [
                                                ...r4,
                                                [
                                                    c(e4, t4),
                                                    "=",
                                                    c(n3, t4)
                                                ].join("")
                                            ]
                                    ;
                            }
                        }(e3), i2 = {};
                        for (const e42 of Object.keys(t3))r3(e42) || (i2[e42] = t3[e42]);
                        const o2 = Object.keys(i2);
                        return e3.sort !== false && o2.sort(e3.sort), o2.map((r4)=>{
                            const i3 = t3[r4];
                            return i3 === void 0 ? "" : i3 === null ? c(r4, e3) : Array.isArray(i3) ? i3.length === 0 && e3.arrayFormat === "bracket-separator" ? c(r4, e3) + "[]" : i3.reduce(n2(r4), []).join("&") : c(r4, e3) + "=" + c(i3, e3);
                        }).filter((t4)=>t4.length > 0
                        ).join("&");
                    }, e2.parseUrl = (t3, e3)=>{
                        e3 = Object.assign({
                            decode: true
                        }, e3);
                        const [r3, n2] = o(t3, "#");
                        return Object.assign({
                            url: r3.split("?")[0] || "",
                            query: g(d(t3), e3)
                        }, e3 && e3.parseFragmentIdentifier && n2 ? {
                            fragmentIdentifier: l(n2, e3)
                        } : {});
                    }, e2.stringifyUrl = (t3, r3)=>{
                        r3 = Object.assign({
                            encode: true,
                            strict: true,
                            [a]: true
                        }, r3);
                        const n2 = f(t3.url).split("?")[0] || "", i2 = e2.extract(t3.url), o2 = e2.parse(i2, {
                            sort: false
                        }), s2 = Object.assign(o2, t3.query);
                        let u2 = e2.stringify(s2, r3);
                        u2 && (u2 = `?${u2}`);
                        let l2 = function(t4) {
                            let e3 = "";
                            const r4 = t4.indexOf("#");
                            return r4 !== -1 && (e3 = t4.slice(r4)), e3;
                        }(t3.url);
                        return t3.fragmentIdentifier && (l2 = `#${r3[a] ? c(t3.fragmentIdentifier, r3) : t3.fragmentIdentifier}`), `${n2}${u2}${l2}`;
                    }, e2.pick = (t3, r3, n2)=>{
                        n2 = Object.assign({
                            parseFragmentIdentifier: true,
                            [a]: false
                        }, n2);
                        const { url: i2 , query: o2 , fragmentIdentifier: u2  } = e2.parseUrl(t3, n2);
                        return e2.stringifyUrl({
                            url: i2,
                            query: s(o2, r3),
                            fragmentIdentifier: u2
                        }, n2);
                    }, e2.exclude = (t3, r3, n2)=>{
                        const i2 = Array.isArray(r3) ? (t4)=>!r3.includes(t4)
                         : (t4, e3)=>!r3(t4, e3)
                        ;
                        return e2.pick(t3, i2, n2);
                    };
                },
                500: (t2)=>{
                    t2.exports = (t3, e2)=>{
                        if (typeof t3 != "string" || typeof e2 != "string") throw new TypeError("Expected the arguments to be of type `string`");
                        if (e2 === "") return [
                            t3
                        ];
                        const r2 = t3.indexOf(e2);
                        return r2 === -1 ? [
                            t3
                        ] : [
                            t3.slice(0, r2),
                            t3.slice(r2 + e2.length)
                        ];
                    };
                },
                610: (t2)=>{
                    t2.exports = (t3)=>encodeURIComponent(t3).replace(/[!'()*]/g, (t4)=>`%${t4.charCodeAt(0).toString(16).toUpperCase()}`
                        )
                    ;
                },
                1713: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const o = i(r2(7625)), s = i(r2(4233)), a = i(r2(3552)), u = r2(1690), c = r2(7066), l = r2(4745);
                    e2.default = class {
                        constructor(t3){
                            this._source = t3;
                        }
                        static newAttachmentID() {
                            return (0, c.generateUUID)();
                        }
                        getAttachment(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                if (this._checkAttachmentSupport(), !(yield this.getAttachmentDetails(t3, e3))) throw new Error(`Attachment not available: ${e3}`);
                                const r3 = yield this._getAttachmentsCredentials(), n2 = yield this._source._datasource.getAttachment(this._source.vault.id, e3);
                                return (0, l.decryptAttachment)(n2, r3);
                            });
                        }
                        getAttachmentDetails(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                this._checkAttachmentSupport();
                                const r3 = `${s.default.Attributes.AttachmentPrefix}${e3}`, n2 = t3.getAttribute(r3);
                                return n2 ? JSON.parse(n2) : null;
                            });
                        }
                        listAttachments(t3) {
                            return n(this, void 0, void 0, function*() {
                                this._checkAttachmentSupport();
                                const e3 = t3.getAttribute();
                                return Object.keys(e3).filter((t4)=>t4.indexOf(s.default.Attributes.AttachmentPrefix) === 0
                                ).map((t4)=>JSON.parse(e3[t4])
                                );
                            });
                        }
                        removeAttachment(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                this._checkAttachmentSupport();
                                const r3 = `${s.default.Attributes.AttachmentPrefix}${e3}`;
                                yield this._source._datasource.removeAttachment(this._source.vault.id, e3), t3.deleteAttribute(r3);
                            });
                        }
                        setAttachment(t3, e3, r3, i2, o2, a2 = new Date()) {
                            return n(this, void 0, void 0, function*() {
                                if (this._checkAttachmentSupport(), !i2 || !o2) throw new Error(`Attachment properties required: name/type => ${i2}/${o2}`);
                                const n2 = `${s.default.Attributes.AttachmentPrefix}${e3}`, u2 = yield this.getAttachmentDetails(t3, e3), c2 = yield this._getAttachmentsCredentials(), h = yield (0, l.encryptAttachment)(r3, c2), f = (0, l.getBufferSize)(h), d = (0, l.getBufferSize)(r3), p = u2 ? Math.max(0, f - u2.sizeEncrypted) : f, g = yield this._source._datasource.getAvailableStorage();
                                if (g !== null && p > g) throw new Error(`Not enough space to update attachment: needed = ${p} B, available = ${g} B`);
                                const y = a2.toUTCString(), m = {
                                    id: e3,
                                    name: i2,
                                    type: o2,
                                    sizeOriginal: d,
                                    sizeEncrypted: f,
                                    created: y,
                                    updated: y
                                };
                                yield this._source._datasource.putAttachment(this._source.vault.id, e3, h, m), t3.setAttribute(n2, JSON.stringify(m));
                            });
                        }
                        _checkAttachmentSupport() {
                            if (!this._source.supportsAttachments()) throw new Error(`Attachments not supported on source: ${this._source.id}`);
                        }
                        _getAttachmentsCredentials() {
                            return n(this, void 0, void 0, function*() {
                                const { vault: t3  } = this._source;
                                let e3 = t3.getAttribute(a.default.Attribute.AttachmentsKey);
                                if (!e3) {
                                    const r3 = (0, u.getSharedAppEnv)().getProperty("crypto/v1/randomString");
                                    e3 = yield r3(48), t3.setAttribute(a.default.Attribute.AttachmentsKey, e3), yield this._source.save();
                                }
                                return o.default.fromPassword(e3);
                            });
                        }
                    };
                },
                4233: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = n(r2(3163)), o = r2(7066), s = r2(3265), a = r2(2297);
                    class u extends i.default {
                        static createNew(t3, e3) {
                            const r3 = t3.findGroupByID(e3);
                            if (!r3) throw new Error(`Failed creating entry: no group found for ID: ${e3}`);
                            if (r3.isTrash() || r3.isInTrash()) throw new Error("Failed creating entry: cannot create within Trash group");
                            const n2 = (0, o.generateUUID)();
                            return t3.format.createEntry(e3, n2), t3._rebuild(), t3.findEntryByID(n2);
                        }
                        delete(t3 = false) {
                            const e3 = this.vault.getTrashGroup(), r3 = this.getGroup();
                            if (e3 && r3 && !r3.isTrash() && !r3.isInTrash() && !t3) return this.moveToGroup(e3), false;
                            this.vault.format.deleteEntry(this.id);
                            const n2 = this.vault._entries.indexOf(this);
                            return n2 >= 0 && this.vault._entries.splice(n2, 1), this._cleanUp(), true;
                        }
                        deleteAttribute(t3) {
                            return this.vault.format.deleteEntryAttribute(this.id, t3), this;
                        }
                        deleteProperty(t3) {
                            return this.vault.format.deleteEntryProperty(this.id, t3), this;
                        }
                        getAttribute(t3) {
                            const e3 = this.vault.format.getEntryAttributes(this._source) || {};
                            return t3 === void 0 ? Object.assign({}, e3) : e3.hasOwnProperty(t3) ? e3[t3] : void 0;
                        }
                        getChanges() {
                            return this.vault.format.getEntryChanges(this._source);
                        }
                        getGroup() {
                            const t3 = this.vault.format.findGroupContainingEntryID(this.id);
                            if (!t3) throw new Error(`No parent group found for entry: ${this.id}`);
                            const e3 = this.vault.format.getItemID(t3);
                            return this.vault._groups.find((t4)=>t4.id === e3
                            );
                        }
                        getProperty(t3) {
                            const e3 = this.vault.format.getEntryProperties(this._source);
                            return t3 === void 0 ? Object.assign({}, e3) : e3.hasOwnProperty(t3) ? e3[t3] : void 0;
                        }
                        getPropertyValueType(t3) {
                            return this.getAttribute(`${u.Attributes.FieldTypePrefix}${t3}`) || a.EntryPropertyValueType.Text;
                        }
                        getProperties(t3) {
                            const e3 = this.vault.format.getEntryProperties(this._source);
                            if (t3 === void 0) return Object.assign({}, e3);
                            const r3 = t3 instanceof RegExp;
                            return Object.keys(e3).reduce((n2, i2)=>(r3 ? t3.test(i2) : t3 === i2) ? Object.assign(n2, {
                                    [i2]: e3[i2]
                                }) : n2
                            , {});
                        }
                        getType() {
                            return this.getAttribute(u.Attributes.FacadeType) || a.EntryType.Login;
                        }
                        getURLs(t3) {
                            return (0, s.getEntryURLs)(this.getProperty(), t3);
                        }
                        isInTrash() {
                            const t3 = this.getGroup();
                            return t3.isTrash() || t3.isInTrash();
                        }
                        moveToGroup(t3) {
                            return this.vault.format.moveEntry(this.id, t3.id), this;
                        }
                        setAttribute(t3, e3) {
                            return this.vault.format.setEntryAttribute(this.id, t3, e3), this;
                        }
                        setProperty(t3, e3) {
                            return this.vault.format.setEntryProperty(this.id, t3, e3), this;
                        }
                        setPropertyValueType(t3, e3) {
                            return e3 === null ? this.deleteAttribute(`${u.Attributes.FieldTypePrefix}${t3}`) : this.setAttribute(`${u.Attributes.FieldTypePrefix}${t3}`, e3), this;
                        }
                        _updateRefs() {
                            this._source = this.vault.format.findEntryByID(this.id);
                        }
                    }
                    e2.default = u, u.Attributes = Object.freeze({
                        AttachmentPrefix: "BC_ENTRY_ATTACHMENT:",
                        FacadeType: "BC_ENTRY_FACADE_TYPE",
                        FieldTypePrefix: "BC_ENTRY_FIELD_TYPE:"
                    });
                },
                4730: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = n(r2(3163)), o = n(r2(4233)), s = n(r2(3552)), a = r2(7066), u = r2(4600), c = r2(2736), l = r2(6255);
                    class h extends i.default {
                        static createNew(t3, e3 = "0", r3 = (0, a.generateUUID)()) {
                            if (e3 !== "0") {
                                const r4 = t3.findGroupByID(e3);
                                if (!r4) throw new Error(`Failed creating group: no group found for ID: ${e3}`);
                                if (r4.isTrash() || r4.isInTrash()) throw new Error("Failed creating group: cannot create within Trash group");
                            }
                            return t3.format.createGroup(e3, r3), t3._rebuild(), t3.findGroupByID(r3);
                        }
                        createEntry(t3) {
                            const e3 = o.default.createNew(this.vault, this.id);
                            return t3 && e3.setProperty("title", t3), e3;
                        }
                        createGroup(t3) {
                            const e3 = h.createNew(this.vault, this.id);
                            return t3 && e3.setTitle(t3), e3;
                        }
                        delete(t3 = false) {
                            if (this.isTrash()) throw new Error("Trash group cannot be deleted");
                            const e3 = this.vault.getTrashGroup(), r3 = e3 !== null;
                            if (!this.isInTrash() && r3 && !t3) return this.moveTo(e3), false;
                            this.getGroups().forEach((t4)=>t4.delete(true)
                            ), this.getEntries().forEach((t4)=>t4.delete(true)
                            ), this.vault.format.deleteGroup(this.id);
                            const n2 = this.vault._groups.indexOf(this);
                            return n2 >= 0 && this.vault._groups.splice(n2, 1), this._cleanUp(), true;
                        }
                        deleteAttribute(t3) {
                            return this.vault.format.deleteGroupAttribute(this.id, t3), this;
                        }
                        findEntryByID(t3) {
                            return (0, l.getAllChildEntries)(this.vault._entries, this.id).find((e3)=>e3.id === t3
                            ) || null;
                        }
                        findEntriesByProperty(t3, e3) {
                            return (0, l.findEntriesByProperty)((0, l.getAllChildEntries)(this.vault._entries, this.id), t3, e3);
                        }
                        findGroupByID(t3) {
                            return (0, c.getAllChildGroups)(this.vault._groups, this.id).find((e3)=>e3.id === t3
                            ) || null;
                        }
                        findGroupsByTitle(t3) {
                            return (0, c.findGroupsByTitle)((0, c.getAllChildGroups)(this.vault._groups, this.id), t3);
                        }
                        getAttribute(t3) {
                            const e3 = this.vault.format.getGroupAttributes(this._source) || {};
                            return t3 === void 0 ? Object.assign({}, e3) : e3.hasOwnProperty(t3) ? e3[t3] : void 0;
                        }
                        getEntries() {
                            return this.vault._entries.filter((t3)=>t3.getGroup() === this
                            );
                        }
                        getGroups() {
                            return this.vault._groups.filter((t3)=>t3.getParentGroup() === this
                            );
                        }
                        getParentGroup() {
                            const t3 = this.vault.format.getItemParentID(this._source);
                            if (t3 === "0") return null;
                            const e3 = this.vault._groups.find((e4)=>e4.id === t3
                            );
                            if (!e3) throw new Error(`Failed getting parent Group: No group containing child ID found: ${this.id}`);
                            return e3;
                        }
                        getTitle() {
                            return this.vault.format.getGroupTitle(this._source);
                        }
                        isInTrash() {
                            const t3 = this.vault.getTrashGroup();
                            return !!t3 && t3.findGroupByID(this.id) !== null;
                        }
                        isTrash() {
                            return this.getAttribute(h.Attribute.Role) === "trash";
                        }
                        moveTo(t3) {
                            if (this.isTrash()) throw new Error("Trash group cannot be moved");
                            let e3, r3;
                            if (t3 instanceof h) e3 = t3.vault, r3 = t3.id;
                            else {
                                if (!(t3 instanceof s.default)) throw new Error("Failed moving group: Unknown target type");
                                e3 = t3, r3 = "0";
                            }
                            if (this.vault.readOnly) throw new Error("Cannot move group: origin archive is read-only");
                            if (e3.readOnly) throw new Error("Cannot move group: target archive is read-only");
                            return this.vault.id === e3.id ? this.vault.format.moveGroup(this.id, r3) : (0, u.moveGroupBetweenVaults)(this, t3), this;
                        }
                        setAttribute(t3, e3) {
                            return this.vault.format.setGroupAttribute(this.id, t3, e3), this;
                        }
                        setTitle(t3) {
                            return this.vault.format.setGroupTitle(this.id, t3), this;
                        }
                        _updateRefs() {
                            this._source = this.vault.format.findGroupByID(this.id);
                        }
                    }
                    e2.default = h, h.Attribute = Object.freeze({
                        Role: "bc_group_role"
                    });
                },
                3552: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = n(r2(6729)), o = r2(873), s = r2(2736), a = r2(6255), u = n(r2(4730)), c = n(r2(4233));
                    class l extends i.default {
                        constructor(t3 = (0, o.getDefaultFormat)()){
                            super(), this._entries = [], this._groups = [], this._updateFormat(new t3()), this.format.initialise(), this._rebuild();
                        }
                        static createFromHistory(t3, e3 = (0, o.getDefaultFormat)()) {
                            const r3 = new l(e3);
                            return r3.format.erase(), r3.format.execute(t3), r3.format.dirty = false, r3.id || r3.format.generateID(), r3;
                        }
                        static createWithDefaults() {
                            const t3 = new l();
                            return t3.createGroup("General"), t3.createGroup("Trash").setAttribute(u.default.Attribute.Role, "trash"), t3;
                        }
                        get format() {
                            return this._format;
                        }
                        get id() {
                            return this.format.getVaultID();
                        }
                        get readOnly() {
                            return this.format.readOnly;
                        }
                        createGroup(t3) {
                            const e3 = u.default.createNew(this);
                            return t3 && e3.setTitle(t3), e3;
                        }
                        deleteAttribute(t3) {
                            return this.format.deleteVaultAttribute(t3), this;
                        }
                        emptyTrash() {
                            const t3 = this.getTrashGroup();
                            if (t3) return t3.getGroups().forEach((t4)=>{
                                t4.delete(true);
                            }), t3.getEntries().forEach((t4)=>{
                                t4.delete(true);
                            }), this;
                        }
                        findEntryByID(t3) {
                            return this._entries.find((e3)=>e3.id === t3
                            ) || null;
                        }
                        findEntriesByProperty(t3, e3) {
                            return (0, a.findEntriesByProperty)(this._entries, t3, e3);
                        }
                        findGroupByID(t3) {
                            return this._groups.find((e3)=>e3.id === t3
                            ) || null;
                        }
                        findGroupsByTitle(t3) {
                            return (0, s.findGroupsByTitle)(this._groups, t3);
                        }
                        getAllEntries() {
                            return [
                                ...this._entries
                            ];
                        }
                        getAllGroups() {
                            return [
                                ...this._groups
                            ];
                        }
                        getAttribute(t3) {
                            const e3 = this.format.getVaultAttributes();
                            return t3 ? e3.hasOwnProperty(t3) ? e3[t3] : void 0 : Object.assign({}, e3);
                        }
                        getGroups() {
                            return this._groups.filter((t3)=>t3.getParentGroup() === null
                            );
                        }
                        getTrashGroup() {
                            return this.getGroups().find((t3)=>t3.isTrash()
                            ) || null;
                        }
                        setAttribute(t3, e3) {
                            return this.format.setVaultAttribute(t3, e3), this;
                        }
                        _rebuild(t3 = false) {
                            t3 && (this._groups = [], this._entries = []), this.format.getAllGroups().forEach((t4)=>{
                                const e3 = this.format.getItemID(t4);
                                this._groups.find((t5)=>t5.id === e3
                                ) || this._groups.push(new u.default(this, t4));
                            }), this.format.getAllEntries().forEach((t4)=>{
                                const e3 = this.format.getItemID(t4);
                                this._entries.find((t5)=>t5.id === e3
                                ) || this._entries.push(new c.default(this, t4));
                            });
                        }
                        _updateFormat(t3) {
                            this._format && this._format.removeAllListeners(), this._format = t3, this._groups.forEach((t4)=>{
                                t4._updateRefs();
                            }), this._entries.forEach((t4)=>{
                                t4._updateRefs();
                            }), this._rebuild(), this.format.on("commandsExecuted", ()=>{
                                this._rebuild(), this.emit("vaultUpdated");
                            }), this.format.on("erased", ()=>{
                                this._rebuild(true), this.emit("vaultUpdated");
                            });
                        }
                    }
                    e2.default = l, l.Attribute = Object.freeze({
                        AttachmentsKey: "BC_ATTACHMENTS_KEY"
                    });
                },
                3163: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const n = r2(2297);
                    e2.default = class {
                        constructor(t3, e3){
                            this._vault = null, this._vault = t3, this._source = e3, this._source.permissions = this._source.permissions || [
                                n.VaultPermission.Manage,
                                n.VaultPermission.Read,
                                n.VaultPermission.Write
                            ];
                        }
                        get id() {
                            return this._vault.format.getItemID(this._source);
                        }
                        get permissions() {
                            return [
                                ...this._source.permissions
                            ];
                        }
                        get vault() {
                            return this._vault;
                        }
                        grantPermission(t3) {
                            this.hasPermission(t3) || this._source.permissions.push(t3);
                        }
                        hasPermission(t3) {
                            return this._source.permissions.includes(t3);
                        }
                        revokeAllPermissions() {
                            this._source.permissions = [];
                        }
                        revokePermission(t3) {
                            this._source.permissions = this._source.permissions.filter((e3)=>e3 !== t3
                            );
                        }
                        _cleanUp() {
                            this._vault = null, this._source = null;
                        }
                        _updateRefs() {}
                    };
                },
                6944: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const o = i(r2(6729)), s = r2(3572), a = i(r2(6141)), u = r2(7083), c = i(r2(2454)), l = i(r2(9203)), f = ()=>{}, d = "bcup_vaultmgr_", p = /^bcup_vaultmgr_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
                    class g extends o.default {
                        constructor(t3 = {}){
                            super(), this._autoUpdateTimer = null, this._initialised = false, this._queue = new u.ChannelQueue(), this._sources = [];
                            const { autoUpdate: e3 = true , autoUpdateDelay: r3 = 15e4 , cacheStorage: n2 = new c.default() , sourceStorage: i2 = new c.default()  } = t3;
                            this._cacheStorage = n2, this._sourceStorage = i2, this._autoUpdateEnabled = e3, this._autoUpdateDelay = r3;
                        }
                        get sources() {
                            return [
                                ...this._sources
                            ];
                        }
                        get unlockedSources() {
                            return this._sources.filter((t3)=>t3.status === l.default.STATUS_UNLOCKED
                            );
                        }
                        addSource(t3, e3 = {}) {
                            return n(this, void 0, void 0, function*() {
                                const { order: r3  } = e3;
                                this._sources.find((e4)=>e4.id === t3.id
                                ) || (yield this.enqueueStateChange(()=>n(this, void 0, void 0, function*() {
                                        t3._vaultManager = this;
                                        const e4 = typeof r3 == "number" ? r3 : this.getNextOrder();
                                        this._sources.push(t3), t3.order = e4, t3.on("updated", ()=>this.dehydrateSource(t3)
                                        ), t3.on("updated", ()=>this.emit("sourcesUpdated")
                                        ), t3.on("locked", ()=>this.emit("sourcesUpdated")
                                        ), t3.on("unlocked", ()=>this.emit("sourcesUpdated")
                                        );
                                        const n2 = yield t3.dehydrate();
                                        yield this._storeDehydratedSource(t3.id, n2), this.emit("sourcesUpdated");
                                    })
                                ));
                            });
                        }
                        dehydrate() {
                            return n(this, void 0, void 0, function*() {
                                yield this.enqueueStateChange(()=>Promise.all(this._sources.map((t3)=>this.dehydrateSource(t3)
                                    ))
                                );
                            });
                        }
                        dehydrateSource(t3) {
                            return n(this, void 0, void 0, function*() {
                                const e3 = typeof t3 == "string" ? this.getSourceForID(t3) : t3, r3 = yield e3.dehydrate();
                                yield this._storeDehydratedSource(e3.id, r3);
                            });
                        }
                        enqueueStateChange(t3) {
                            return this._queue.channel("state").enqueue(t3);
                        }
                        getNextOrder() {
                            return Math.max(...this._sources.map((t3)=>t3._order
                            ), -1) + 1;
                        }
                        getSourceForID(t3) {
                            return this._sources.find((e3)=>e3.id && e3.id === t3
                            ) || null;
                        }
                        getUpdateableSources() {
                            return this._sources.filter((t3)=>t3.canBeUpdated()
                            );
                        }
                        initialise() {
                            this._initialised || (this._startAutoUpdateTimer(), this._initialised = true);
                        }
                        interruptAutoUpdate(t3) {
                            return this.enqueueStateChange(f).then(()=>this._queue.channel("autoUpdateInterrupt").enqueue(()=>{
                                    const e3 = this._autoUpdateEnabled, r3 = this._autoUpdateDelay;
                                    this.toggleAutoUpdating(false);
                                    const n2 = ()=>{
                                        this.toggleAutoUpdating(e3, r3);
                                    };
                                    let i2;
                                    try {
                                        i2 = t3();
                                    } catch (t42) {
                                        throw n2(), t42;
                                    }
                                    return (0, a.default)(i2) ? i2.then((t4)=>(n2(), t4)
                                    ).catch((t4)=>{
                                        throw n2(), t4;
                                    }) : (n2(), i2);
                                })
                            );
                        }
                        rehydrate() {
                            return n(this, void 0, void 0, function*() {
                                yield this._migrateLegacyVaults();
                                const t3 = yield this._sourceStorage.getAllKeys();
                                yield Promise.all(t3.filter((t4)=>p.test(t4)
                                ).map((t4)=>n(this, void 0, void 0, function*() {
                                        const e3 = yield this._sourceStorage.getValue(t4), r3 = l.default.rehydrate(e3);
                                        yield this.addSource(r3, {
                                            order: r3.order
                                        });
                                    })
                                )), this.reorderSources(), this.emit("sourcesUpdated");
                            });
                        }
                        removeSource(t3) {
                            return n(this, void 0, void 0, function*() {
                                yield this.enqueueStateChange(()=>n(this, void 0, void 0, function*() {
                                        const e3 = this._sources.findIndex((e4)=>e4.id === t3
                                        );
                                        if (e3 === -1) throw new s.Layerr(`Failed removing source: No source found for ID: ${t3}`);
                                        this.sources[e3].removeAllListeners(), this._sources.splice(e3, 1), this.emit("sourcesUpdated"), yield this._sourceStorage.removeKey(`bcup_vaultmgr_${t3}`);
                                    })
                                );
                            });
                        }
                        reorderSource(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                const r3 = this.getSourceForID(t3);
                                if (!r3) throw new s.Layerr(`Failed reordering source: No source found for ID: ${t3}`);
                                if (e3 === r3._order) return;
                                const n2 = r3._order;
                                r3._order = e3;
                                const i2 = e3 < n2;
                                this.sources.forEach((r4)=>{
                                    r4.id !== t3 && (i2 && r4._order >= e3 ? r4._order += 1 : !i2 && r4._order <= e3 && (r4._order -= 1));
                                }), this.reorderSources(), yield this.dehydrateSource(r3);
                            });
                        }
                        reorderSources() {
                            this._sources.sort((t3, e3)=>t3._order > e3._order ? 1 : e3._order > t3._order ? -1 : 0
                            ), this._sources.forEach((t3, e3)=>{
                                t3._order = e3;
                            }), this.emit("sourcesUpdated");
                        }
                        toggleAutoUpdating(t3 = !this._autoUpdateEnabled, e3 = this._autoUpdateDelay) {
                            t3 ? (this._autoUpdateDelay = e3, this._startAutoUpdateTimer()) : this._stopAutoUpdateTimer();
                        }
                        _autoUpdateSources() {
                            return this.emit("autoUpdateStart"), this.enqueueStateChange(()=>n(this, void 0, void 0, function*() {
                                    const t3 = this.getUpdateableSources();
                                    t3.length <= 0 || (yield Promise.all(t3.map((t4)=>t4.update().catch((e3)=>{
                                            console.error(`Failed auto-updating source: ${t4.id}`, e3), this.emit("autoUpdateFailed", {
                                                source: t4,
                                                error: e3
                                            });
                                        })
                                    )), this.emit("autoUpdateStop"));
                                })
                            );
                        }
                        _migrateLegacyVaults() {
                            return n(this, void 0, void 0, function*() {
                                const t3 = "bcup_archivemgr_", e3 = yield this._sourceStorage.getAllKeys();
                                yield Promise.all(e3.filter((e4)=>e4 && e4.indexOf(t3) === 0
                                ).map((e4)=>n(this, void 0, void 0, function*() {
                                        const r3 = yield this._sourceStorage.getValue(e4);
                                        if (!r3) return;
                                        const n2 = e4.replace(t3, d);
                                        yield this._sourceStorage.setValue(n2, r3), yield this._sourceStorage.removeKey(e4);
                                    })
                                ));
                            });
                        }
                        _startAutoUpdateTimer() {
                            return n(this, void 0, void 0, function*() {
                                yield this.enqueueStateChange(()=>{
                                    clearTimeout(this._autoUpdateTimer), this._autoUpdateTimer = setTimeout(()=>{
                                        this._autoUpdateSources().then(()=>{
                                            this._autoUpdateEnabled && this._startAutoUpdateTimer();
                                        });
                                    }, this._autoUpdateDelay);
                                });
                            });
                        }
                        _stopAutoUpdateTimer() {
                            return n(this, void 0, void 0, function*() {
                                yield this.enqueueStateChange(()=>{
                                    clearTimeout(this._autoUpdateTimer), this._autoUpdateTimer = null;
                                });
                            });
                        }
                        _storeDehydratedSource(t3, e3) {
                            return this._sourceStorage.setValue(`bcup_vaultmgr_${t3}`, e3);
                        }
                    }
                    e2.default = g, g.STORAGE_KEY_PREFIX = d;
                },
                9203: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const o = i(r2(6729)), s = r2(7083), a = r2(3572), u = i(r2(3552)), c = i(r2(7625)), l = r2(5456), h = r2(8891), f = r2(5647), d = r2(3955), p = r2(2301), g = i(r2(1713)), y = r2(2297), m = /^#([a-f0-9]{3}|[a-f0-9]{6})$/i, v = "#000000";
                    function _(t3, e3) {
                        if (/^v1\n/.test(t3)) {
                            const [, r3] = t3.split("\n");
                            return c.default.fromSecureString(r3, e3);
                        }
                        return c.default.fromSecureString(t3, e3);
                    }
                    class w extends o.default {
                        constructor(t3, e3, r3, n2 = {}){
                            super(), this._attachmentManager = null, this._datasource = null, this._shares = [], this._vault = null, this._vaultManager = null;
                            const { colour: i2 = v , id: o2 = (0, h.getUniqueID)() , order: a2 = 1e3 , meta: u2 = {}  } = n2;
                            this._queue = new s.ChannelQueue(), this._credentials = r3, this._status = w.STATUS_LOCKED, this._id = o2, this._name = t3, this._type = e3, this._colour = i2, this._order = a2, this._meta = u2;
                        }
                        static rehydrate(t3) {
                            const e3 = JSON.parse(t3);
                            let r3 = e3.credentials;
                            if (e3.v !== 2) {
                                const { sourceCredentials: t4 , archiveCredentials: n3  } = e3;
                                if (!t4 || !n3) throw new Error("Invalid legacy vault state: missing credentials");
                                r3 = `v1
${t4}
${n3}`;
                            }
                            const { id: n2 , name: i2 , type: o2 , colour: s2 = v , order: a2 = 1e3 , meta: u2 = {}  } = e3;
                            return new w(i2, o2, r3, {
                                id: n2,
                                colour: s2,
                                order: a2,
                                meta: u2
                            });
                        }
                        get attachmentManager() {
                            return this._attachmentManager;
                        }
                        get colour() {
                            return this._colour;
                        }
                        get id() {
                            return this._id;
                        }
                        get meta() {
                            return Object.assign({}, this._meta);
                        }
                        get name() {
                            return this._name;
                        }
                        get order() {
                            return this._order;
                        }
                        get status() {
                            return this._status;
                        }
                        get type() {
                            return this._type;
                        }
                        get vault() {
                            return this._vault;
                        }
                        set colour(t3) {
                            if (m.test(t3) !== true) throw new a.Layerr(`Failed setting colour: Invalid format (expected hex): ${t3}`);
                            this._colour = t3, this.emit("updated");
                        }
                        set order(t3) {
                            if (isNaN(t3) || typeof t3 != "number" || t3 < 0) throw new a.Layerr(`Failed setting order: Order must be greater than or equal to 0: ${t3}`);
                            this._order = t3, this.emit("updated");
                        }
                        changeMasterPassword(t3, e3, r3 = {}) {
                            return n(this, void 0, void 0, function*() {
                                if (t3 === e3) throw new Error("New password cannot be the same as the previous one");
                                if (!e3) throw new Error("New password must be specified");
                                const n2 = this._datasource.supportsPasswordChange(), i2 = new c.default(r3, e3);
                                let o2 = false;
                                if (this.status !== w.STATUS_UNLOCKED) o2 = true, yield this.unlock(c.default.fromPassword(t3));
                                else {
                                    if ((0, l.getCredentials)(this._credentials.id).masterPassword !== t3) throw new Error("Old password does not match current unlocked instance value");
                                    yield this.update();
                                }
                                if (n2 && !(yield this._datasource.changePassword((0, d.prepareDatasourceCredentials)(i2, this._datasource.type), true))) throw new Error("Datasource not capable of changing password at this time");
                                yield (0, f.storeSourceOfflineCopy)(this._vaultManager._cacheStorage, this.id, null);
                                const s2 = c.default.fromCredentials(this._credentials, t3);
                                (0, l.getCredentials)(s2.id).masterPassword = e3, yield this._updateVaultCredentials(s2), o2 && (yield this.lock()), n2 && (yield this._datasource.changePassword((0, d.prepareDatasourceCredentials)(i2, this._datasource.type), false)), this.emit("passwordChanged"), this.emit("updated");
                            });
                        }
                        canBeUpdated() {
                            return this.status === w.STATUS_UNLOCKED && this._vault.format.dirty === false;
                        }
                        checkOfflineCopy() {
                            return (0, f.sourceHasOfflineCopy)(this._vaultManager._cacheStorage, this.id);
                        }
                        dehydrate() {
                            return this._enqueueStateChange(()=>n(this, void 0, void 0, function*() {
                                    const t3 = {
                                        v: 2,
                                        id: this.id,
                                        name: this.name,
                                        type: this.type,
                                        status: w.STATUS_LOCKED,
                                        colour: this.colour,
                                        order: this.order,
                                        meta: this.meta,
                                        credentials: null
                                    };
                                    if (this.status === w.STATUS_PENDING) throw new a.Layerr(`Failed dehydrating source: Source in pending state: ${this.id}`);
                                    return this.status === w.STATUS_LOCKED ? t3.credentials = this._credentials : t3.credentials = yield this._credentials.toSecureString(), JSON.stringify(t3);
                                })
                            );
                        }
                        getOfflineContent() {
                            return n(this, void 0, void 0, function*() {
                                return (yield this.checkOfflineCopy()) ? (0, f.getSourceOfflineArchive)(this._vaultManager._cacheStorage, this.id) : null;
                            });
                        }
                        localDiffersFromRemote() {
                            return this.status !== w.STATUS_UNLOCKED ? Promise.reject(new a.Layerr(`Failed diffing source: Source not unlocked (${this.status}): ${this.id}`)) : typeof this._datasource.localDiffersFromRemote == "function" ? this._datasource.localDiffersFromRemote((0, d.prepareDatasourceCredentials)(this._credentials, this._datasource.type), this.vault.format.history) : (this._datasource.type !== "text" && this._datasource.setContent(""), this._datasource.load((0, d.prepareDatasourceCredentials)(this._credentials, this._datasource.type)).then(({ Format: t3 , history: e3  })=>{
                                if (t3 !== this.vault.format.getFormat()) throw new Error("Loaded format does not match that of current vault");
                                return t3.historiesDiffer(this.vault.format.history, e3);
                            }));
                        }
                        lock() {
                            return n(this, void 0, void 0, function*() {
                                if (this.status !== w.STATUS_UNLOCKED) throw new a.Layerr(`Failed locking source: Source in invalid state (${this.status}): ${this.id}`);
                                yield this._enqueueStateChange(()=>n(this, void 0, void 0, function*() {
                                        this._status = w.STATUS_PENDING;
                                        const t3 = this._credentials, e3 = this._vault, r3 = this._datasource, n2 = this._attachmentManager;
                                        try {
                                            const t4 = yield this._credentials.toSecureString();
                                            this._credentials = t4, this._datasource = null, this._vault = null, this._attachmentManager = null, this._status = w.STATUS_LOCKED, this.emit("locked");
                                        } catch (i2) {
                                            throw this._credentials = t3, this._datasource = r3, this._vault = e3, this._status = w.STATUS_UNLOCKED, this._attachmentManager = n2, new a.Layerr(i2, "Failed locking source");
                                        }
                                    })
                                );
                            });
                        }
                        mergeFromRemote() {
                            return n(this, void 0, void 0, function*() {
                                this._datasource.type !== "text" && this._datasource.setContent("");
                                const { Format: t3 , history: e3  } = yield this._datasource.load((0, d.prepareDatasourceCredentials)(this._credentials, this._datasource.type));
                                if (t3 !== this._vault.format.getFormat()) throw new Error("Format loaded during merge did not match current");
                                const r3 = t3.vaultFromMergedHistories(this._vault.format.history, e3);
                                return this._vault._updateFormat(r3.format), this._vault;
                            });
                        }
                        rename(t3) {
                            this._name = t3, this.emit("updated");
                        }
                        save(t3 = {}) {
                            return n(this, void 0, void 0, function*() {
                                const { storeOfflineCopy: e3 = true  } = t3;
                                yield this._enqueueStateChange(()=>n(this, void 0, void 0, function*() {
                                        (yield this.localDiffersFromRemote()) && (yield this.mergeFromRemote());
                                        let t4 = null;
                                        const r3 = ({ content: e4  })=>{
                                            t4 = e4;
                                        };
                                        this._datasource.once("encryptedContent", r3);
                                        try {
                                            yield this._datasource.save(this._vault.format.history, (0, d.prepareDatasourceCredentials)(this._credentials, this._datasource.type));
                                        } catch (t5) {
                                            throw this._datasource.off("encryptedContent", r3), t5;
                                        }
                                        this._vault.format.dirty = false, e3 && t4 && (yield (0, f.storeSourceOfflineCopy)(this._vaultManager._cacheStorage, this.id, t4)), yield this._updateInsights();
                                    })
                                , "saving"), this.emit("updated");
                            });
                        }
                        supportsAttachments() {
                            return this.status === w.STATUS_UNLOCKED && this._datasource.supportsAttachments();
                        }
                        testMasterPassword(t3) {
                            return n(this, void 0, void 0, function*() {
                                if (this.status !== y.VaultSourceStatus.Locked && this.status !== y.VaultSourceStatus.Unlocked) throw new Error(`Source in invalid state for password test: ${this.status}`);
                                const e3 = this.status === y.VaultSourceStatus.Locked ? this._credentials : yield this._credentials.toSecureString();
                                try {
                                    return yield _(e3, t3), true;
                                } catch (t4) {
                                    return false;
                                }
                            });
                        }
                        unlock(t3, e3 = {}) {
                            return n(this, void 0, void 0, function*() {
                                if (!c.default.isCredentials(t3)) throw new a.Layerr(`Failed unlocking source: Invalid credentials passed to source: ${this.id}`);
                                const { initialiseRemote: r3 = false , loadOfflineCopy: i2 = false , storeOfflineCopy: o2 = true  } = e3;
                                if (this.status !== w.STATUS_LOCKED) throw new a.Layerr(`Failed unlocking source: Source in invalid state (${this.status}): ${this.id}`);
                                const { masterPassword: s2  } = (0, l.getCredentials)(t3.id), h2 = this._credentials;
                                this._status = w.STATUS_PENDING, yield this._enqueueStateChange(()=>n(this, void 0, void 0, function*() {
                                        const t4 = i2 ? yield this.getOfflineContent() : null, e4 = this._credentials = yield _(this._credentials, s2), a2 = this._datasource = (0, d.credentialsToDatasource)(c.default.fromCredentials(e4, s2));
                                        if (a2.sourceID = this.id, typeof t4 == "string" && a2.setContent(t4), a2.on("updated", ()=>{
                                            this._waitNonPending().then(()=>n(this, void 0, void 0, function*() {
                                                    this.status === w.STATUS_UNLOCKED && (yield this._updateCredentialsFromDatasource()), this.emit("updated");
                                                })
                                            ).catch((t5)=>{
                                                console.error(`Error updating datasource credentials for vault: ${this.id}`, t5);
                                            });
                                        }), r3) {
                                            const t5 = u.default.createWithDefaults();
                                            yield a2.save(t5.format.history, e4), this._vault = t5;
                                        } else {
                                            const { Format: t5 , history: r4  } = yield a2.load(e4);
                                            this._vault = u.default.createFromHistory(r4, t5);
                                        }
                                        o2 && (yield (0, f.storeSourceOfflineCopy)(this._vaultManager._cacheStorage, this.id, a2._content)), i2 && (this.vault.format._readOnly = true), this._status = w.STATUS_UNLOCKED, this._attachmentManager = new g.default(this), this.emit("unlocked");
                                    })
                                ).catch((t4)=>{
                                    throw this._status = w.STATUS_LOCKED, this._vault = null, this._datasource = null, this._credentials = h2, this._attachmentManager = null, new a.Layerr(t4, "Failed unlocking source");
                                });
                            });
                        }
                        update({ skipDiff: t3 = false  } = {}) {
                            return n(this, void 0, void 0, function*() {
                                (yield this._enqueueStateChange(()=>(t3 ? Promise.resolve(false) : this.localDiffersFromRemote()).then((t4)=>!!t4 && this.mergeFromRemote().then(()=>true
                                        )
                                    )
                                , "updating")) && this.emit("updated");
                            });
                        }
                        write() {
                            return n(this, void 0, void 0, function*() {
                                yield this._enqueueStateChange(()=>n(this, void 0, void 0, function*() {
                                        yield this._datasource.save(this._vault.format.history, (0, d.prepareDatasourceCredentials)(this._credentials, this._datasource.type)), this._vault.format.dirty = false, yield this._updateInsights();
                                    })
                                , "saving"), this.emit("updated");
                            });
                        }
                        _applyShares() {}
                        _enqueueStateChange(t3, e3) {
                            const r3 = this._queue.channel("state");
                            return e3 ? r3.enqueue(t3, void 0, e3) : r3.enqueue(t3);
                        }
                        _unloadShares() {
                            const t3 = this.vault.format.getFormat().extractSharesFromHistory(this.vault.format.history), { base: e3  } = t3;
                            delete t3.base, this.vault.format.erase(), this.vault.format.execute(e3), Object.keys(t3).forEach((e4)=>{
                                const r3 = this._shares.find((t4)=>t4.id === e4
                                );
                                if (!r3) throw new Error(`Failed updating extracted share: No share found in workspace for ID: ${e4}`);
                                r3.updateHistory(t3[e4]);
                            });
                        }
                        _updateCredentialsFromDatasource() {
                            return n(this, void 0, void 0, function*() {
                                if (this.status !== w.STATUS_UNLOCKED) throw new a.Layerr(`Failed updating source credentials: Source is not unlocked: ${this.id}`);
                                const { masterPassword: t3  } = (0, l.getCredentials)(this._credentials.id);
                                this._credentials = c.default.fromCredentials(this._datasource.credentials, t3);
                            });
                        }
                        _updateInsights() {
                            return n(this, void 0, void 0, function*() {
                                if (this.status !== w.STATUS_UNLOCKED) throw new a.Layerr(`Failed updating vault insights: Source is not unlocked: ${this.id}`);
                                const t3 = (0, p.generateVaultInsights)(this.vault);
                                yield this._datasource.updateInsights(t3);
                            });
                        }
                        _updateVaultCredentials(t3) {
                            return n(this, void 0, void 0, function*() {
                                if (this.status !== w.STATUS_UNLOCKED) throw new a.Layerr(`Failed updating vault credentials: Source is not unlocked: ${this.id}`);
                                this._credentials = t3, yield this.write();
                            });
                        }
                        _waitNonPending() {
                            return new Promise((t3)=>{
                                if (this.status !== w.STATUS_PENDING) return t3();
                                const e3 = ()=>{
                                    this.removeListener("unlocked", e3), this.removeListener("locked", e3), t3();
                                };
                                this.on("unlocked", e3), this.on("locked", e3);
                            });
                        }
                    }
                    e2.default = w, w.STATUS_LOCKED = y.VaultSourceStatus.Locked, w.STATUS_PENDING = y.VaultSourceStatus.Pending, w.STATUS_UNLOCKED = y.VaultSourceStatus.Unlocked;
                },
                7625: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = r2(7066), o = r2(5456), s = r2(1690), a = "b~>buttercup/acreds.v2.", u = "bc~3>";
                    function c(t3) {
                        return `bc~3>${t3}`;
                    }
                    class l {
                        constructor(t3 = {}, e3 = null){
                            const r3 = (0, i.generateUUID)();
                            Object.defineProperty(this, "id", {
                                writable: false,
                                configurable: false,
                                enumerable: true,
                                value: r3
                            }), (0, o.setCredentials)(r3, {
                                data: t3,
                                masterPassword: e3,
                                purposes: l.allPurposes(),
                                open: false
                            });
                        }
                        static allPurposes() {
                            return [
                                l.PURPOSE_DECRYPT_VAULT,
                                l.PURPOSE_ENCRYPT_VAULT,
                                l.PURPOSE_SECURE_EXPORT
                            ];
                        }
                        static fromCredentials(t3, e3) {
                            if (!e3) throw new Error("Master password is required for credentials cloning");
                            const r3 = (0, o.getCredentials)(t3.id);
                            if (r3.masterPassword !== e3) throw new Error("Master password does not match that of the credentials to be cloned");
                            const n2 = JSON.parse(JSON.stringify(r3.data));
                            return new l(n2, e3);
                        }
                        static fromDatasource(t3, e3 = null) {
                            return new l({
                                datasource: t3
                            }, e3);
                        }
                        static fromPassword(t3, e3 = null) {
                            return new l({
                                password: t3
                            }, e3 || t3);
                        }
                        static fromSecureString(t3, e3) {
                            return (0, s.getSharedAppEnv)().getProperty("crypto/v1/decryptText")(function(t4) {
                                const e4 = t4.indexOf(u), r3 = t4.indexOf(a);
                                if (e4 === -1 && r3 === -1) throw new Error("Invalid credentials content (unknown signature)");
                                return e4 === 0 ? t4.substr(u.length) : t4.substr(a.length);
                            }(t3), e3).then((t4)=>JSON.parse(t4)
                            ).then((t4)=>(t4.datasource && (typeof t4.datasource == "string" && (t4.datasource = JSON.parse(t4.datasource)), t4.username && (t4.datasource.username = t4.username, delete t4.username), t4.password && (t4.datasource.password = t4.password, delete t4.password)), new l(t4, e3))
                            );
                        }
                        static isCredentials(t3) {
                            return !!t3 && typeof t3 == "object" && typeof t3.toSecureString == "function" && !!t3.id;
                        }
                        getCredentialsData() {
                            const t3 = (0, s.getSharedAppEnv)().getProperty("env/v1/isClosedEnv")(), e3 = (0, o.getCredentials)(this.id);
                            return t3 || e3.open === true ? e3.data : null;
                        }
                        getData() {
                            const t3 = (0, s.getSharedAppEnv)().getProperty("env/v1/isClosedEnv")(), e3 = (0, o.getCredentials)(this.id);
                            return t3 || e3.open === true ? e3 : null;
                        }
                        restrictPurposes(t3) {
                            const e3 = (0, o.getCredentials)(this.id), { purposes: r3  } = e3, n2 = t3.filter((t4)=>r3.includes(t4)
                            );
                            return (0, o.setCredentials)(this.id, Object.assign(e3, {
                                purposes: n2
                            })), this;
                        }
                        setCredentialsData(t3) {
                            const e3 = (0, s.getSharedAppEnv)().getProperty("env/v1/isClosedEnv")(), r3 = (0, o.getCredentials)(this.id);
                            if (!e3 && r3.open !== true) throw new Error("Unable to set data: Insecure environment and payload is not open");
                            const n2 = Object.assign(Object.assign({}, r3), {
                                data: t3
                            });
                            (0, o.setCredentials)(this.id, n2);
                        }
                        toSecureString() {
                            return n(this, void 0, void 0, function*() {
                                if ((0, o.credentialsAllowsPurpose)(this.id, l.PURPOSE_SECURE_EXPORT) !== true) throw new Error("Credential purposes don't allow for secure exports");
                                const t3 = (0, s.getSharedAppEnv)().getProperty("crypto/v1/encryptText"), { data: e3 , masterPassword: r3  } = (0, o.getCredentials)(this.id);
                                if (typeof r3 != "string") throw new Error("Cannot convert Credentials to string: master password was not set or is invalid");
                                return t3(JSON.stringify(e3), r3).then(c);
                            });
                        }
                        _getData() {
                            return this.getData();
                        }
                    }
                    e2.default = l, l.PURPOSE_DECRYPT_VAULT = "vault-decrypt", l.PURPOSE_ENCRYPT_VAULT = "vault-encrypt", l.PURPOSE_SECURE_EXPORT = "secure-export";
                },
                5456: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.setCredentials = e2.removeCredentials = e2.getCredentials = e2.credentialsAllowsPurpose = void 0;
                    const r2 = {};
                    function n(t3) {
                        return r2[t3] || null;
                    }
                    e2.credentialsAllowsPurpose = function(t3, e3) {
                        const { purposes: r3  } = n(t3);
                        return r3.includes(e3);
                    }, e2.getCredentials = n, e2.removeCredentials = function(t3) {
                        r2[t3] = null, delete r2[t3];
                    }, e2.setCredentials = function(t3, e3) {
                        r2[t3] = e3;
                    };
                },
                2910: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = n(r2(6729)), o = r2(3361), s = n(r2(8908));
                    let a;
                    class u extends i.default {
                        constructor(){
                            super(), this._handlers = {};
                        }
                        static getSharedManager() {
                            return a || (a = new u(), s.default._bcupAuthMgr !== void 0 && console.warn("Detected multiple Buttercup authentication managers for datasources: Multiple copies of the same library may have been bundled together"), s.default._bcupAuthMgr = true), a;
                        }
                        executeAuthHandlers(t3, e3) {
                            const r3 = this._handlers[t3];
                            return Array.isArray(r3) ? Promise.resolve().then(()=>(0, o.forEachAsync)(r3, (t4)=>t4(e3)
                                )
                            ).then(()=>{
                                this.emit("authHandlersExecuted", {
                                    datasource: e3,
                                    datasourceType: t3
                                });
                            }) : Promise.reject(new Error(`Failed executing auth handlers: No handlers registered for datasource type: ${t3}`));
                        }
                        registerHandler(t3, e3) {
                            if (typeof e3 != "function") throw new Error("Failed registering handler: Argument was not a function");
                            this._handlers[t3] = this._handlers[t3] || [], this._handlers[t3].push(e3);
                        }
                    }
                    e2.default = u;
                },
                4664: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = r2(3907), o = n(r2(9174)), s = r2(3955), a = r2(5456);
                    class u extends o.default {
                        constructor(t3){
                            super(t3);
                            const { data: e3  } = (0, a.getCredentials)(t3.id), { datasource: r3  } = e3, { token: n2 , path: o2  } = r3;
                            this.path = o2, this.token = n2, this.client = (0, i.createClient)(n2), this.type = "dropbox", (0, s.fireInstantiationHandlers)("dropbox", this);
                        }
                        getConfiguration() {
                            return {
                                type: "dropbox",
                                token: this.token,
                                path: this.path
                            };
                        }
                        load(t3) {
                            return this.hasContent ? super.load(t3) : this.client.getFileContents(this.path).then((e3)=>(this.setContent(e3), super.load(t3))
                            );
                        }
                        save(t3, e3) {
                            return super.save(t3, e3).then((t4)=>this.client.putFileContents(this.path, t4)
                            );
                        }
                        supportsRemoteBypass() {
                            return true;
                        }
                    }
                    e2.default = u, (0, s.registerDatasource)("dropbox", u);
                },
                4764: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const o = i(r2(4126)), s = i(r2(6354)), a = i(r2(2352)), u = i(r2(9174)), c = r2(3955), l = r2(5456), h = r2(4745);
                    class f extends u.default {
                        constructor(t3){
                            super(t3);
                            const { data: e3  } = (0, l.getCredentials)(t3.id), { datasource: r3  } = e3, { path: n2  } = r3;
                            this._filename = n2, this.mkdir = (0, a.default)(o.default.mkdir), this.readFile = (0, a.default)(o.default.readFile), this.stat = (0, a.default)(o.default.stat), this.unlink = (0, a.default)(o.default.unlink), this.writeFile = (0, a.default)(o.default.writeFile), this.type = "file", (0, c.fireInstantiationHandlers)("file", this);
                        }
                        get baseDir() {
                            return s.default.dirname(this.path);
                        }
                        get path() {
                            return this._filename;
                        }
                        _ensureAttachmentsPaths(t3) {
                            return n(this, void 0, void 0, function*() {
                                const e3 = s.default.join(this.baseDir, ".buttercup", t3);
                                yield this.mkdir(e3, {
                                    recursive: true
                                });
                            });
                        }
                        getAttachment(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                yield this._ensureAttachmentsPaths(t3);
                                const r3 = s.default.join(this.baseDir, ".buttercup", t3, `${e3}.${h.ATTACHMENT_EXT}`);
                                return this.readFile(r3);
                            });
                        }
                        getConfiguration() {
                            return {
                                type: "file",
                                path: this._filename
                            };
                        }
                        load(t3) {
                            return this.hasContent ? super.load(t3) : this.readFile(this.path, "utf8").then((e3)=>(this.setContent(e3), super.load(t3))
                            );
                        }
                        putAttachment(t3, e3, r3, i2) {
                            return n(this, void 0, void 0, function*() {
                                yield this._ensureAttachmentsPaths(t3);
                                const n2 = s.default.join(this.baseDir, ".buttercup", t3, `${e3}.${h.ATTACHMENT_EXT}`);
                                yield this.writeFile(n2, r3);
                            });
                        }
                        removeAttachment(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                yield this._ensureAttachmentsPaths(t3);
                                const r3 = s.default.join(this.baseDir, ".buttercup", t3, `${e3}.${h.ATTACHMENT_EXT}`);
                                yield this.unlink(r3);
                            });
                        }
                        save(t3, e3) {
                            return super.save(t3, e3).then((t4)=>this.writeFile(this.path, t4)
                            );
                        }
                        supportsAttachments() {
                            return true;
                        }
                        supportsRemoteBypass() {
                            return true;
                        }
                    }
                    e2.default = f, (0, c.registerDatasource)("file", f);
                },
                408: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = r2(2042), o = r2(3572), s = n(r2(2910)), a = n(r2(9174)), u = r2(3955), c = r2(5456), l = "googledrive";
                    class h extends a.default {
                        constructor(t3){
                            super(t3);
                            const { data: e3  } = (0, c.getCredentials)(t3.id), { datasource: r3  } = e3, { token: n2 , refreshToken: o2 , fileID: a2  } = r3;
                            this.fileID = a2, this.token = n2, this.refreshToken = o2, this.client = (0, i.createClient)(n2), this.authManager = s.default.getSharedManager(), this.type = l, (0, u.fireInstantiationHandlers)(l, this);
                        }
                        getConfiguration() {
                            return {
                                type: "googledrive",
                                token: this.token,
                                refreshToken: this.refreshToken,
                                fileID: this.fileID
                            };
                        }
                        load(t3, e3 = false) {
                            return this.hasContent ? super.load(t3) : this.client.getFileContents(this.fileID).then((e4)=>(this.setContent(e4), super.load(t3))
                            ).catch((r3)=>{
                                const { authFailure: n2 = false  } = o.Layerr.info(r3);
                                if (!n2) throw new o.Layerr(r3, "Failed fetching Google Drive vault");
                                if (e3) throw new o.Layerr(r3, "Re-authentication failed");
                                return this.authManager.executeAuthHandlers(l, this).then(()=>this.load(t3, true)
                                ).catch((t4)=>{
                                    throw new o.Layerr(t4, "Failed fetching Google Drive vault");
                                });
                            });
                        }
                        save(t3, e3, r3 = false) {
                            return super.save(t3, e3).then((t4)=>this.client.putFileContents({
                                    id: this.fileID,
                                    contents: t4
                                })
                            ).catch((n2)=>{
                                const { authFailure: i2 = false  } = o.Layerr.info(n2);
                                if (!i2) throw new o.Layerr(n2, "Failed saving Google Drive vault");
                                if (r3) throw new o.Layerr(n2, "Re-authentication failed");
                                return this.authManager.executeAuthHandlers(l, this).then(()=>this.save(t3, e3, true)
                                ).catch((t4)=>{
                                    throw new o.Layerr(t4, "Failed saving Google Drive vault");
                                });
                            });
                        }
                        supportsRemoteBypass() {
                            return true;
                        }
                        updateTokens(t3, e3) {
                            this.token = t3, this.refreshToken = e3, this.client = (0, i.createClient)(t3);
                            const { data: r3  } = (0, c.getCredentials)(this.credentials.id);
                            r3.datasource.token = t3, r3.datasource.refreshToken = e3, this.emit("updated");
                        }
                    }
                    e2.default = h, (0, u.registerDatasource)(l, h);
                },
                8951: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const o = i(r2(9174)), s = r2(3955), a = r2(5456), u = "memory";
                    class c extends o.default {
                        constructor(t3){
                            super(t3);
                            const { data: e3  } = (0, a.getCredentials)(t3.id), { datasource: n2  } = e3, { property: i2  } = n2;
                            this._property = i2, this._store = r2.g[i2] = r2.g[i2] || {}, this.type = u, (0, s.fireInstantiationHandlers)(u, this);
                        }
                        _ensureAttachmentsPaths(t3) {
                            return n(this, void 0, void 0, function*() {
                                this._store.attachments = this._store.attachments || {}, this._store.attachments[t3] = this._store.attachments[t3] || {};
                            });
                        }
                        getAttachment(t3, e3) {
                            return this._ensureAttachmentsPaths(t3).then(()=>{
                                if (!this._store.attachments[t3][e3]) throw new Error(`No attachment found for ID: ${e3}`);
                                return this._store.attachments[t3][e3];
                            });
                        }
                        getConfiguration() {
                            return {
                                type: "memory",
                                property: this._property
                            };
                        }
                        load(t3) {
                            const e3 = Object.create(null, {
                                load: {
                                    get: ()=>super.load
                                }
                            });
                            return n(this, void 0, void 0, function*() {
                                if (!this._store.vault) throw new Error("No vault in memory");
                                return this.setContent(this._store.vault), e3.load.call(this, t3);
                            });
                        }
                        putAttachment(t3, e3, r3, n2) {
                            return this._ensureAttachmentsPaths(t3).then(()=>{
                                this._store.attachments[t3][e3] = r3;
                            });
                        }
                        removeAttachment(t3, e3) {
                            return this._ensureAttachmentsPaths(t3).then(()=>{
                                this._store.attachments[t3][e3] = null, delete this._store.attachments[t3][e3];
                            });
                        }
                        save(t3, e3) {
                            return super.save(t3, e3).then((t4)=>(this._store.vault = t4, t4)
                            );
                        }
                        supportsAttachments() {
                            return true;
                        }
                    }
                    e2.default = c, (0, s.registerDatasource)(u, c);
                },
                9174: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const o = i(r2(6729)), s = i(r2(3715)), a = i(r2(7625)), u = r2(5456), c = r2(873), l = r2(3955);
                    class h extends o.default {
                        constructor(t3){
                            super(), this.sourceID = null, this._credentials = t3, this._credentials.restrictPurposes([
                                a.default.PURPOSE_SECURE_EXPORT
                            ]), this._content = "";
                            try {
                                const { data: e3  } = (0, u.getCredentials)(t3.id), { datasource: r3 = {}  } = e3 || {}, { content: n2 = ""  } = r3;
                                this._content = n2;
                            } catch (t4) {}
                            this.type = "text", (0, l.fireInstantiationHandlers)("text", this);
                        }
                        get credentials() {
                            return this._credentials;
                        }
                        get hasContent() {
                            return this._content && this._content.length > 0;
                        }
                        changePassword(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                throw new Error("Changing password not supported");
                            });
                        }
                        getAttachment(t3, e3) {
                            return Promise.reject(new Error("Attachments not supported"));
                        }
                        getAvailableStorage() {
                            return Promise.resolve(null);
                        }
                        getConfiguration() {
                            return {
                                type: "text",
                                content: this._content
                            };
                        }
                        getTotalStorage() {
                            return Promise.resolve(null);
                        }
                        getID() {
                            const t3 = this.type === "text" ? this._content : this.toString();
                            if (!t3) throw new Error("Failed getting ID: Datasource requires content for ID generation");
                            return s.default.sha256().update(t3).digest("hex");
                        }
                        load(t3) {
                            if (!this._content) return Promise.reject(new Error("Failed to load vault: Content is empty"));
                            if ((0, u.credentialsAllowsPurpose)(t3.id, a.default.PURPOSE_DECRYPT_VAULT) !== true) return Promise.reject(new Error("Provided credentials don't allow vault decryption"));
                            const e3 = (0, c.detectFormat)(this._content);
                            return e3.parseEncrypted(this._content, t3).then((t4)=>({
                                    Format: e3,
                                    history: t4
                                })
                            );
                        }
                        putAttachment(t3, e3, r3, n2) {
                            return Promise.reject(new Error("Attachments not supported"));
                        }
                        removeAttachment(t3, e3) {
                            return Promise.reject(new Error("Attachments not supported"));
                        }
                        save(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                if ((0, u.credentialsAllowsPurpose)(e3.id, a.default.PURPOSE_ENCRYPT_VAULT) !== true) throw new Error("Unable to save: Provided credentials don't allow vault encryption");
                                if (!t3.format) throw new Error("Unable to save: Provided history does not contain a format");
                                const r3 = yield (0, c.getFormatForID)(t3.format).encodeRaw(t3, e3);
                                return this.emit("encryptedContent", {
                                    content: r3
                                }), r3;
                            });
                        }
                        setContent(t3) {
                            return this._content = t3 || "", this;
                        }
                        supportsAttachments() {
                            return false;
                        }
                        supportsPasswordChange() {
                            return false;
                        }
                        supportsRemoteBypass() {
                            return false;
                        }
                        updateInsights(t3) {
                            return Promise.resolve();
                        }
                    }
                    e2.default = h, (0, l.registerDatasource)("text", h);
                },
                5746: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const o = i(r2(3722)), s = i(r2(9174)), a = r2(3955), u = r2(1690), c = r2(5456), l = r2(4745), h = 209715200;
                    class f extends s.default {
                        constructor(t3){
                            super(t3);
                            const { data: e3  } = (0, c.getCredentials)(t3.id), { datasource: r3  } = e3, { endpoint: n2 , password: i2 , path: o2 , username: s2  } = this._config = r3;
                            this._path = o2;
                            const l2 = (0, u.getSharedAppEnv)().getProperty("net/webdav/v1/newClient");
                            this._client = l2(n2, typeof s2 == "string" && typeof i2 == "string" ? {
                                username: s2,
                                password: i2,
                                maxBodyLength: h,
                                maxContentLength: h
                            } : {
                                maxBodyLength: h,
                                maxContentLength: h
                            }), this.type = "webdav", (0, a.fireInstantiationHandlers)("webdav", this);
                        }
                        get baseDir() {
                            return o.default.dirname(this.path);
                        }
                        get client() {
                            return this._client;
                        }
                        get path() {
                            return this._path;
                        }
                        _ensureAttachmentsPaths(t3) {
                            return n(this, void 0, void 0, function*() {
                                const e3 = o.default.join(this.baseDir, ".buttercup", t3);
                                yield this.client.createDirectory(e3, {
                                    recursive: true
                                });
                            });
                        }
                        getAttachment(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                yield this._ensureAttachmentsPaths(t3);
                                const r3 = o.default.join(this.baseDir, ".buttercup", t3, `${e3}.${l.ATTACHMENT_EXT}`);
                                return this.client.getFileContents(r3);
                            });
                        }
                        getConfiguration() {
                            return this._config;
                        }
                        load(t3) {
                            return this.hasContent ? super.load(t3) : this.client.getFileContents(this.path, {
                                format: "text"
                            }).then((e3)=>(this.setContent(e3), super.load(t3))
                            );
                        }
                        putAttachment(t3, e3, r3, i2) {
                            return n(this, void 0, void 0, function*() {
                                yield this._ensureAttachmentsPaths(t3);
                                const n2 = o.default.join(this.baseDir, ".buttercup", t3, `${e3}.${l.ATTACHMENT_EXT}`);
                                yield this.client.putFileContents(n2, r3);
                            });
                        }
                        removeAttachment(t3, e3) {
                            return n(this, void 0, void 0, function*() {
                                yield this._ensureAttachmentsPaths(t3);
                                const r3 = o.default.join(this.baseDir, ".buttercup", t3, `${e3}.${l.ATTACHMENT_EXT}`);
                                yield this.client.deleteFile(r3);
                            });
                        }
                        save(t3, e3) {
                            const r3 = Object.create(null, {
                                save: {
                                    get: ()=>super.save
                                }
                            });
                            return n(this, void 0, void 0, function*() {
                                const n2 = yield r3.save.call(this, t3, e3);
                                yield this.client.putFileContents(this.path, n2);
                            });
                        }
                        supportsAttachments() {
                            return true;
                        }
                        supportsRemoteBypass() {
                            return true;
                        }
                    }
                    e2.default = f, (0, a.registerDatasource)("webdav", f);
                },
                3955: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.registerDatasourcePostProcessor = e2.registerDatasource = e2.prepareDatasourceCredentials = e2.fireInstantiationHandlers = e2.credentialsToDatasource = void 0;
                    const i = r2(5456), o = n(r2(7625)), s = {}, a = {}, u = [];
                    function c(t3, e3 = null) {
                        const { data: { datasource: r3  } , masterPassword: n2  } = (0, i.getCredentials)(t3.id), s2 = e3 || r3.type || "", { open: u2 = false  } = a[s2] || {};
                        if (!u2) return t3;
                        const c2 = o.default.fromCredentials(t3, n2);
                        return (0, i.getCredentials)(c2.id).open = true, c2;
                    }
                    e2.credentialsToDatasource = function(t3) {
                        const { datasource: e3  } = (0, i.getCredentials)(t3.id).data;
                        if (!e3) throw new Error("No datasource configuration in credentials");
                        const { type: r3  } = e3;
                        if (!r3) throw new Error("No datasource type specified in datasource configuration");
                        const n2 = s[r3];
                        if (!n2) throw new Error(`No datasource found for type: ${r3}`);
                        return new n2(c(t3));
                    }, e2.fireInstantiationHandlers = function(t3, e3) {
                        u.forEach((r3)=>{
                            try {
                                r3(t3, e3);
                            } catch (t4) {
                                console.error("Failed executing a datasource instantiation handler for a datasource"), console.error(t4);
                            }
                        });
                    }, e2.prepareDatasourceCredentials = c, e2.registerDatasource = function(t3, e3, r3 = {}) {
                        if (s[t3]) throw new Error(`Datasource already registered for type: ${t3}`);
                        s[t3] = e3, a[t3] = r3;
                    }, e2.registerDatasourcePostProcessor = function(t3) {
                        return u.push(t3), {
                            remove: ()=>{
                                const e3 = u.indexOf(t3);
                                e3 >= 0 && u.splice(e3, 1);
                            }
                        };
                    };
                },
                1690: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getSharedAppEnv = void 0;
                    var n = r2(9157);
                    Object.defineProperty(e2, "getSharedAppEnv", {
                        enumerable: true,
                        get: function() {
                            return n.getSharedAppEnv;
                        }
                    });
                },
                4429: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.createAppEnv = void 0;
                    const n = r2(5877);
                    function i(t3, e3 = {}) {
                        const { defaultValue: r3 = null , failIfNotExist: n2 = true  } = e3;
                        if (this.properties[t3] !== void 0) return this.properties[t3];
                        if (n2) throw new Error(`Unable to get application environment property: '${t3}' does not exist`);
                        return r3;
                    }
                    function o(t3) {
                        return this.properties[t3] !== void 0;
                    }
                    function s(t3) {
                        const e3 = a.bind(this);
                        for(const r3 in t3)e3(r3, t3[r3]);
                    }
                    function a(t3, e3) {
                        if (this.properties[t3] !== void 0) throw new Error(`Unable to set application environment property: '${t3}' already exists`);
                        (0, n.assignObjImmutableProp)(this.properties, t3, e3);
                    }
                    e2.createAppEnv = function() {
                        const t3 = {}, e3 = {
                            properties: {}
                        };
                        return (0, n.assignObjImmutableProp)(t3, "getProperty", i.bind(e3)), (0, n.assignObjImmutableProp)(t3, "hasProperty", o.bind(e3)), (0, n.assignObjImmutableProp)(t3, "setProperties", s.bind(e3)), (0, n.assignObjImmutableProp)(t3, "setProperty", a.bind(e3)), t3;
                    };
                },
                277: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.CRYPTO_RANDOM_STRING_CHARS = e2.CRYPTO_PBKDF2_ROUNDS = void 0, e2.CRYPTO_PBKDF2_ROUNDS = 125e3, e2.CRYPTO_RANDOM_STRING_CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~-_=+[]{}|;:,.<>?!@#$%^&*()";
                },
                1981: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getGlobal = void 0, e2.getGlobal = function() {
                        if (typeof window != "undefined") return window;
                        if (r2.g !== void 0) return r2.g;
                        if (typeof self != "undefined") return self;
                        throw new Error("Unable to detect any global variable/context");
                    };
                },
                5877: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.assignObjImmutableProp = void 0, e2.assignObjImmutableProp = function(t3, e3, r2) {
                        Object.defineProperty(t3, e3, {
                            value: r2,
                            writable: false,
                            configurable: false,
                            enumerable: false
                        });
                    };
                },
                9157: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getSharedAppEnv = void 0;
                    const n = r2(4429), i = r2(5877), o = r2(1981), s = "@@__ButtercupAppEnv";
                    e2.getSharedAppEnv = function() {
                        const t3 = (0, o.getGlobal)();
                        if (!t3[s]) {
                            const e3 = (0, n.createAppEnv)();
                            (0, i.assignObjImmutableProp)(t3, s, e3);
                        }
                        return t3[s];
                    };
                },
                9790: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getCompressionResources = void 0;
                    const n = r2(9591);
                    function i(t3) {
                        return (0, n.gzip)(t3, {
                            level: 9,
                            to: "string"
                        });
                    }
                    function o(t3) {
                        return (0, n.ungzip)(t3, {
                            to: "string"
                        });
                    }
                    e2.getCompressionResources = function() {
                        return {
                            "compression/v1/compressText": i,
                            "compression/v1/decompressText": o
                        };
                    };
                },
                5680: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getCompressionResources = void 0;
                    const i = r2(9591), o = r2(8891);
                    function s(t3) {
                        return n(this, void 0, void 0, function*() {
                            return Promise.resolve().then(()=>{
                                const e3 = (0, i.gzip)(t3, {
                                    level: 9
                                });
                                return (0, o.bytesToBase64)(e3);
                            });
                        });
                    }
                    function a(t3) {
                        return n(this, void 0, void 0, function*() {
                            return Promise.resolve().then(()=>(0, i.ungzip)((0, o.base64ToBytes)(t3), {
                                    to: "string"
                                })
                            );
                        });
                    }
                    e2.getCompressionResources = function() {
                        return {
                            "compression/v2/compressText": s,
                            "compression/v2/decompressText": a
                        };
                    };
                },
                8514: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getCryptoResources = void 0;
                    const n = r2(4122), i = r2(277);
                    let o = i.CRYPTO_PBKDF2_ROUNDS;
                    function s(t3, e3) {
                        return (0, n.createAdapter)().decrypt(t3, e3);
                    }
                    function a(t3, e3) {
                        const r3 = (0, n.createAdapter)();
                        return o > 0 && r3.setDerivationRounds(o), r3.encrypt(t3, e3);
                    }
                    function u(t3) {
                        return Promise.resolve().then(()=>{
                            const e3 = i.CRYPTO_RANDOM_STRING_CHARS.length;
                            return new Uint16Array(t3).reduce((t4, r3)=>{
                                const n2 = Math.floor(r3 / 65535 * e3);
                                return `${t4}${i.CRYPTO_RANDOM_STRING_CHARS[n2]}`;
                            }, "");
                        });
                    }
                    function c(t3 = null) {
                        o = t3 || i.CRYPTO_PBKDF2_ROUNDS;
                    }
                    e2.getCryptoResources = function() {
                        return {
                            "crypto/v2/decryptBuffer": s,
                            "crypto/v2/encryptBuffer": a,
                            "crypto/v1/decryptText": s,
                            "crypto/v1/encryptText": a,
                            "crypto/v1/randomString": u,
                            "crypto/v1/setDerivationRounds": c
                        };
                    };
                },
                5534: function(t2, e2, r2) {
                    var n = this && this.__createBinding || (Object.create ? function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), Object.defineProperty(t3, n2, {
                            enumerable: true,
                            get: function() {
                                return e3[r3];
                            }
                        });
                    } : function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), t3[n2] = e3[r3];
                    }), i = this && this.__setModuleDefault || (Object.create ? function(t3, e3) {
                        Object.defineProperty(t3, "default", {
                            enumerable: true,
                            value: e3
                        });
                    } : function(t3, e3) {
                        t3.default = e3;
                    }), o = this && this.__importStar || function(t3) {
                        if (t3 && t3.__esModule) return t3;
                        var e3 = {};
                        if (t3 != null) for(var r3 in t3)r3 !== "default" && Object.prototype.hasOwnProperty.call(t3, r3) && n(e3, t3, r3);
                        return i(e3, t3), e3;
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getEncodingResources = void 0;
                    const s = o(r2(9742));
                    function a(t3, e3 = false) {
                        return e3 ? s.toByteArray(t3) : new TextDecoder().decode(s.toByteArray(t3));
                    }
                    function u(t3) {
                        return s.fromByteArray(t3);
                    }
                    function c(t3) {
                        return u(new TextEncoder().encode(t3));
                    }
                    e2.getEncodingResources = function() {
                        return {
                            "encoding/v1/base64ToBytes": (t3)=>a(t3, true)
                            ,
                            "encoding/v1/base64ToText": a,
                            "encoding/v1/bytesToBase64": u,
                            "encoding/v1/textToBase64": c
                        };
                    };
                },
                8844: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getEnvironmentResources = void 0, e2.getEnvironmentResources = function() {
                        return {
                            "env/v1/isClosedEnv": ()=>false
                        };
                    };
                },
                7921: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.applyWebConfiguration = void 0;
                    const n = r2(8514), i = r2(9790), o = r2(5680), s = r2(8844), a = r2(5365), u = r2(2779), c = r2(5534);
                    e2.applyWebConfiguration = function(t3, e3) {
                        t3.setProperties(e3(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (0, n.getCryptoResources)()), (0, i.getCompressionResources)()), (0, o.getCompressionResources)()), (0, s.getEnvironmentResources)()), (0, a.getNetResources)()), (0, u.getRNGResources)()), (0, c.getEncodingResources)())));
                    };
                },
                5365: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getNetResources = void 0;
                    const n = r2(9478);
                    e2.getNetResources = function() {
                        return {
                            "net/webdav/v1/newClient": n.createClient
                        };
                    };
                },
                2779: (t2, e2, r2)=>{
                    function n() {
                        const { v4: t3  } = r2(1614);
                        return t3();
                    }
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getRNGResources = void 0, e2.getRNGResources = function() {
                        return {
                            "rng/v1/uuid": n
                        };
                    };
                },
                3633: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.isVaultFacade = e2.isOTPURI = void 0;
                    const r2 = /^otpauth:\/\/[ht]otp\/[^\s]+$/i;
                    e2.isOTPURI = function(t3) {
                        return r2.test(t3);
                    }, e2.isVaultFacade = function(t3) {
                        return !(!t3 || typeof t3 != "object") && t3.type === "vault" && typeof t3.id == "string" && Array.isArray(t3.entries) && Array.isArray(t3.groups);
                    };
                },
                2394: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.setEntryFacadePropertyValueType = e2.getEntryFacadePath = e2.fieldsToProperties = e2.createEntryFromFacade = e2.createEntryFacade = e2.consumeEntryFacade = void 0;
                    const i = n(r2(8827)), o = r2(3081), s = n(r2(4233)), a = r2(2297), { FacadeType: u  } = s.default.Attributes;
                    function c(t3, e3) {
                        const r3 = l(t3);
                        if (e3 && e3.type) {
                            const n2 = t3.getProperty(), i2 = t3.getAttribute();
                            if (e3.type !== r3) throw new Error(`Failed consuming entry data: Expected type "${r3}" but received "${e3.type}"`);
                            return (e3.fields || []).forEach((e4)=>(function(t4, e5) {
                                    !function(t5, e6, r4, n3, i3) {
                                        switch(e6){
                                            case "property":
                                                t5.getProperty(r4) !== n3 && t5.setProperty(r4, n3);
                                                break;
                                            case "attribute":
                                                t5.getAttribute(r4) !== n3 && t5.setAttribute(r4, n3);
                                                break;
                                            default:
                                                throw new Error(`Cannot set value: Unknown property type: ${e6}`);
                                        }
                                        i3 && (0, o.getEntryPropertyValueType)(t5, r4) !== i3 && (0, o.setEntryPropertyValueType)(t5, r4, i3);
                                    }(t4, e5.propertyType, e5.property, e5.value, e5.valueType);
                                })(t3, e4)
                            ), Object.keys(n2).forEach((r4)=>{
                                e3.fields.find(({ propertyType: t4 , property: e4  })=>t4 === "property" && e4 === r4
                                ) === void 0 && t3.deleteProperty(r4);
                            }), void Object.keys(i2).forEach((r4)=>{
                                e3.fields.find(({ propertyType: t4 , property: e4  })=>t4 === "attribute" && e4 === r4
                                ) === void 0 && t3.deleteAttribute(r4);
                            });
                        }
                        throw new Error("Failed consuming entry data: Invalid item passed as a facade");
                    }
                    function l(t3) {
                        return t3 ? t3.getType() : a.EntryType.Login;
                    }
                    e2.consumeEntryFacade = c, e2.createEntryFacade = function(t3, e3 = {}) {
                        if (t3 && t3 instanceof s.default != 1) throw new Error("Failed creating entry facade: Provided item is not an Entry");
                        const { type: r3  } = e3, n2 = r3 || l(t3), c2 = i.default[n2];
                        if (!c2) throw new Error(`Failed creating entry facade: No factory found for type "${n2}"`);
                        const h = t3 ? function(t4, e4) {
                            const r4 = (t5, r5)=>e4.find((e5)=>e5.propertyType === r5 && e5.property === t5
                                )
                            , n3 = t4.getProperty(), i2 = t4.getAttribute();
                            return [
                                ...e4,
                                ...Object.keys(n3).filter((t5)=>!r4(t5, a.EntryPropertyType.Property)
                                ).map((e5)=>(0, o.createFieldDescriptor)(t4, "", a.EntryPropertyType.Property, e5, {
                                        removeable: true
                                    })
                                ),
                                ...Object.keys(i2).filter((t5)=>!r4(t5, a.EntryPropertyType.Attribute)
                                ).map((e5)=>(0, o.createFieldDescriptor)(t4, "", a.EntryPropertyType.Attribute, e5)
                                )
                            ];
                        }(t3, c2(t3)) : c2(t3);
                        if (!h.find((t4)=>t4.propertyType === a.EntryPropertyType.Attribute && t4.property === u
                        )) {
                            const e4 = (0, o.createFieldDescriptor)(t3, "", a.EntryPropertyType.Attribute, u);
                            e4.value = n2, h.push(e4);
                        }
                        return {
                            id: t3 ? t3.id : null,
                            type: n2,
                            fields: h,
                            parentID: t3 ? t3.getGroup().id : null,
                            _history: [],
                            _changes: t3 ? t3.getChanges() : []
                        };
                    }, e2.createEntryFromFacade = function(t3, e3) {
                        const r3 = t3.createEntry(), n2 = l(r3), i2 = e3.type || n2;
                        return c(r3, Object.assign(Object.assign({}, e3), {
                            parentID: t3.id,
                            type: n2,
                            id: null
                        })), i2 !== n2 && r3.setAttribute(s.default.Attributes.FacadeType, i2), r3;
                    }, e2.fieldsToProperties = function(t3) {
                        return t3.reduce((t4, e3)=>(e3.propertyType !== "property" || (t4[e3.property] = e3.value), t4)
                        , {});
                    }, e2.getEntryFacadePath = function(t3, e3) {
                        const r3 = e3.entries.find((e4)=>e4.id === t3
                        );
                        if (!r3) throw new Error(`No entry facade found for ID: ${t3}`);
                        let n2 = null;
                        const i2 = [];
                        do {
                            n2 = n2 ? e3.groups.find((t4)=>t4.id === n2
                            ).parentID : r3.parentID, n2 && n2 != "0" && i2.unshift(n2);
                        }while (n2 && n2 != "0")
                        return i2;
                    }, e2.setEntryFacadePropertyValueType = function(t3, e3, r3) {
                        const n2 = t3.fields.find((t4)=>t4.property === e3 && t4.propertyType === a.EntryPropertyType.Property
                        ), i2 = t3.fields.find((t4)=>t4.property === `${s.default.Attributes.FieldTypePrefix}${e3}` && t4.propertyType === a.EntryPropertyType.Attribute
                        );
                        n2 && (n2.valueType = r3), i2 && (i2.value = r3);
                    };
                },
                8827: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const n = r2(3081), i = r2(2297), o = "\\d";
                    function s(t3) {
                        return [
                            (0, n.createFieldDescriptor)(t3, "Title", i.EntryPropertyType.Property, "title")
                        ];
                    }
                    function a(t3) {
                        return [
                            ...s(t3),
                            (0, n.createFieldDescriptor)(t3, "Username", i.EntryPropertyType.Property, "username"),
                            (0, n.createFieldDescriptor)(t3, "Password", i.EntryPropertyType.Property, "password", {
                                valueType: i.EntryPropertyValueType.Password
                            })
                        ];
                    }
                    e2.default = {
                        [i.EntryType.CreditCard]: function(t3) {
                            return [
                                ...s(t3),
                                (0, n.createFieldDescriptor)(t3, "Card Holder", i.EntryPropertyType.Property, "username"),
                                (0, n.createFieldDescriptor)(t3, "Card Number", i.EntryPropertyType.Property, "password", {
                                    formatting: {
                                        format: [
                                            {
                                                char: o,
                                                repeat: 4
                                            },
                                            {
                                                exactly: "-"
                                            },
                                            {
                                                char: o,
                                                repeat: 4
                                            },
                                            {
                                                exactly: "-"
                                            },
                                            {
                                                char: o,
                                                repeat: 4
                                            },
                                            {
                                                exactly: "-"
                                            },
                                            {
                                                char: o,
                                                repeat: 4
                                            }
                                        ],
                                        placeholder: "DDDD-DDDD-DDDD-DDDD"
                                    }
                                }),
                                (0, n.createFieldDescriptor)(t3, "Card Type", i.EntryPropertyType.Property, "type", {
                                    formatting: {
                                        options: {
                                            visa: "Visa",
                                            mastercard: "Mastercard",
                                            amex: "American Express",
                                            discover: "Discover",
                                            generic: "Generic"
                                        },
                                        defaultOption: "generic"
                                    }
                                }),
                                (0, n.createFieldDescriptor)(t3, "CVV", i.EntryPropertyType.Property, "cvv", {
                                    formatting: {
                                        format: [
                                            {
                                                char: o,
                                                repeat: 4
                                            }
                                        ],
                                        placeholder: "DDD or DDDD"
                                    },
                                    valueType: i.EntryPropertyValueType.Password
                                }),
                                (0, n.createFieldDescriptor)(t3, "Valid From", i.EntryPropertyType.Property, "valid_from", {
                                    formatting: {
                                        format: [
                                            {
                                                char: "[01]",
                                                repeat: 1
                                            },
                                            {
                                                char: o,
                                                repeat: 1
                                            },
                                            {
                                                exactly: "/"
                                            },
                                            {
                                                char: "2",
                                                repeat: 1
                                            },
                                            {
                                                char: o,
                                                repeat: 3
                                            }
                                        ],
                                        placeholder: "MM/YYYY"
                                    }
                                }),
                                (0, n.createFieldDescriptor)(t3, "Expiry", i.EntryPropertyType.Property, "expiry", {
                                    formatting: {
                                        format: [
                                            {
                                                char: "[01]",
                                                repeat: 1
                                            },
                                            {
                                                char: o,
                                                repeat: 1
                                            },
                                            {
                                                exactly: "/"
                                            },
                                            {
                                                char: "2",
                                                repeat: 1
                                            },
                                            {
                                                char: o,
                                                repeat: 3
                                            }
                                        ],
                                        placeholder: "MM/YYYY"
                                    }
                                })
                            ];
                        },
                        [i.EntryType.Login]: a,
                        [i.EntryType.Note]: function(t3) {
                            return [
                                ...s(t3),
                                (0, n.createFieldDescriptor)(t3, "Note", i.EntryPropertyType.Property, "note", {
                                    valueType: i.EntryPropertyValueType.Note
                                })
                            ];
                        },
                        [i.EntryType.SSHKey]: function(t3) {
                            return [
                                ...s(t3),
                                (0, n.createFieldDescriptor)(t3, "Public key", i.EntryPropertyType.Property, "publicKey"),
                                (0, n.createFieldDescriptor)(t3, "Private key", i.EntryPropertyType.Property, "privateKey", {
                                    valueType: i.EntryPropertyValueType.Note
                                })
                            ];
                        },
                        [i.EntryType.Website]: function(t3) {
                            return [
                                ...a(t3),
                                (0, n.createFieldDescriptor)(t3, "URL", i.EntryPropertyType.Property, "url")
                            ];
                        }
                    };
                },
                2247: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.FIELD_VALUE_TYPES = e2.FACADE_VERSION = e2.ENTRY_TYPES = e2.DEFAULT_FIELD_TYPE = e2.DEFAULT_ENTRY_TYPE = void 0;
                    const n = r2(2297);
                    e2.DEFAULT_ENTRY_TYPE = n.EntryType.Login, e2.DEFAULT_FIELD_TYPE = n.EntryPropertyValueType.Text, e2.ENTRY_TYPES = {
                        [n.EntryType.CreditCard]: {
                            title: "Credit Card",
                            slug: n.EntryType.CreditCard
                        },
                        [n.EntryType.Login]: {
                            title: "Login",
                            slug: n.EntryType.Login
                        },
                        [n.EntryType.Note]: {
                            title: "Note",
                            slug: n.EntryType.Note
                        },
                        [n.EntryType.SSHKey]: {
                            title: "SSH Key Pair",
                            slug: n.EntryType.SSHKey
                        },
                        [n.EntryType.Website]: {
                            title: "Website Login",
                            slug: n.EntryType.Website
                        }
                    }, e2.FACADE_VERSION = 2, e2.FIELD_VALUE_TYPES = {
                        [n.EntryPropertyValueType.Note]: {
                            title: "Note",
                            slug: n.EntryPropertyValueType.Note
                        },
                        [n.EntryPropertyValueType.OTP]: {
                            title: "OTP (One Time Password)",
                            slug: n.EntryPropertyValueType.OTP
                        },
                        [n.EntryPropertyValueType.Password]: {
                            title: "Password (secret)",
                            slug: n.EntryPropertyValueType.Password
                        },
                        [n.EntryPropertyValueType.Text]: {
                            title: "Text (default)",
                            slug: n.EntryPropertyValueType.Text
                        }
                    };
                },
                3081: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.setEntryPropertyValueType = e2.idSignifiesNew = e2.getEntryPropertyValueType = e2.getEntryValue = e2.createFieldDescriptor = void 0;
                    const i = n(r2(4233)), o = r2(7066), s = r2(2297), a = [
                        s.EntryPropertyValueType.Note,
                        s.EntryPropertyValueType.OTP,
                        s.EntryPropertyValueType.Password,
                        s.EntryPropertyValueType.Text
                    ];
                    function u(t3, e3, r3) {
                        switch(e3){
                            case s.EntryPropertyType.Property:
                                return t3.getProperty(r3);
                            case s.EntryPropertyType.Attribute:
                                return t3.getAttribute(r3);
                            default:
                                throw new Error(`Cannot retrieve value: Unknown property type: ${e3}`);
                        }
                    }
                    function c(t3, e3) {
                        if (!t3) return s.EntryPropertyValueType.Text;
                        const r3 = t3.getAttribute(`${i.default.Attributes.FieldTypePrefix}${e3}`);
                        return a.indexOf(r3) >= 0 ? r3 : s.EntryPropertyValueType.Text;
                    }
                    e2.createFieldDescriptor = function(t3, e3, r3, n2, i2 = {}) {
                        const { formatting: s2 = false , removeable: a2 = false , valueType: l = null  } = i2, h = t3 ? u(t3, r3, n2) : "";
                        return {
                            id: (0, o.generateUUID)(),
                            title: e3,
                            propertyType: r3,
                            property: n2,
                            value: h,
                            valueType: l || (r3 === "attribute" ? null : c(t3, n2)),
                            formatting: s2,
                            removeable: a2
                        };
                    }, e2.getEntryValue = u, e2.getEntryPropertyValueType = c, e2.idSignifiesNew = function(t3, e3 = false) {
                        if (/^\d+$/.test(t3) === false) return e3;
                        const r3 = parseInt(t3, 10);
                        return !isNaN(r3) && r3 > 0 && r3 <= 999999;
                    }, e2.setEntryPropertyValueType = function(t3, e3, r3) {
                        t3.setAttribute(`${i.default.Attributes.FieldTypePrefix}${e3}`, r3);
                    };
                },
                9688: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.createGroupFacade = e2.createVaultFacade = e2.consumeVaultFacade = e2.consumeGroupFacade = void 0;
                    const i = r2(2394), o = r2(3081), s = r2(2247), a = n(r2(4233)), u = n(r2(3552)), c = r2(7066), { FacadeType: l  } = a.default.Attributes;
                    function h(t3, e3) {
                        const { id: r3 , title: n2 , type: i2 , attributes: o2  } = e3, s2 = t3.getAttribute();
                        if (i2 !== "group") throw new Error(`Failed consuming group facade: Invalid facade type: ${i2}`);
                        if (r3 !== t3.id) throw new Error(`Failed consuming group facade: Provided facade ID (${r3}) does not match target group's ID: ${t3.id}`);
                        if (!n2 || n2.trim().length <= 0) throw new Error("Failed consuming group facade: Title must not be empty");
                        t3.getTitle() !== n2 && t3.setTitle(n2), Object.keys(s2).filter((t4)=>!o2.hasOwnProperty(t4)
                        ).forEach((e4)=>{
                            t3.deleteAttribute(e4);
                        }), Object.keys(o2).forEach((e4)=>{
                            s2[e4] && s2[e4] === o2[e4] || t3.setAttribute(e4, o2[e4]);
                        });
                    }
                    function f(t3, e3 = {}) {
                        const { includeTrash: r3 = true  } = e3;
                        return {
                            _tag: (0, c.generateUUID)(),
                            _ver: s.FACADE_VERSION,
                            type: "vault",
                            id: t3.id,
                            attributes: t3.getAttribute(),
                            groups: y(t3, {
                                includeTrash: r3
                            }),
                            entries: p(t3, {
                                includeTrash: r3
                            })
                        };
                    }
                    function d(t3, e3 = "0") {
                        return {
                            type: "group",
                            id: t3 ? t3.id : null,
                            title: t3 ? t3.getTitle() : "",
                            attributes: t3 ? t3.getAttribute() : {},
                            parentID: e3
                        };
                    }
                    function p(t3, e3 = {}) {
                        return t3.getGroups().reduce((t4, r3)=>[
                                ...t4,
                                ...g(r3, e3)
                            ]
                        , []);
                    }
                    function g(t3, e3 = {}) {
                        const { includeTrash: r3 = true  } = e3, n2 = t3.getEntries().reduce((t4, e4)=>r3 === false && e4.isInTrash() ? t4 : [
                                ...t4,
                                Object.assign({}, (0, i.createEntryFacade)(e4))
                            ]
                        , []);
                        return t3.getGroups().forEach((t4)=>{
                            n2.push(...g(t4, e3));
                        }), n2;
                    }
                    function y(t3, e3 = {}) {
                        const { includeTrash: r3 = true  } = e3;
                        return t3._groups.reduce((t4, e4)=>r3 === false && (e4.isTrash() || e4.isInTrash()) ? t4 : [
                                ...t4,
                                d(e4, e4.vault.format.getItemParentID(e4._source))
                            ]
                        , []);
                    }
                    e2.consumeGroupFacade = h, e2.consumeVaultFacade = function(t3, e3, r3 = {}) {
                        if (e3._ver !== s.FACADE_VERSION) throw new Error("Invalid vault facade version");
                        if (!e3 || e3 && e3.type !== "vault") throw new Error(`Failed consuming vault facade: Second parameter expected to be a vault facade, got: ${e3.type}`);
                        const { mergeMode: n2 = false  } = r3, { id: a2 , type: c2 , attributes: d2 , groups: g2 , entries: m  } = e3;
                        if (c2 !== "vault") throw new Error(`Failed consuming vault facade: Invalid facade type: ${c2}`);
                        if (!n2 && a2 !== t3.id) throw new Error(`Failed consuming vault facade: Provided facade ID (${a2}) does not match target vault ID: ${t3.id}`);
                        const v = {};
                        let { groups: b , entries: _ , attributes: w  } = f(t3);
                        n2 || b.forEach((e4)=>{
                            if (!g2.find((t4)=>t4.id === e4.id
                            )) {
                                const r4 = t3.findGroupByID(e4.id);
                                r4 && r4.delete();
                            }
                        }), b = y(t3);
                        let E = [
                            ...g2
                        ];
                        for(; E.length > 0;){
                            let e4 = E.length;
                            if (E = E.filter((e5)=>{
                                const r4 = Object.assign({}, e5), i2 = (0, o.idSignifiesNew)(r4.id, n2);
                                if (!r4.id || i2) {
                                    let e6 = r4.parentID;
                                    if ((0, o.idSignifiesNew)(e6, n2)) {
                                        if (!v[e6]) return true;
                                        e6 = v[e6];
                                    }
                                    const s2 = (e6 === "0" ? t3 : t3.findGroupByID(e6)).createGroup(r4.title);
                                    i2 && (v[`${r4.id}`] = s2.id), r4.id = s2.id;
                                } else {
                                    if (!b.find((t4)=>t4.id === r4.id
                                    )) return;
                                    const { id: e6 , parentID: n3  } = r4, i3 = t3.findGroupByID(e6), o2 = i3.getParentGroup();
                                    (o2 === null && n3 !== "0" || o2 !== null && o2.id !== n3) && i3.moveTo(n3 === "0" ? t3 : t3.findGroupByID(n3));
                                }
                                return h(t3.findGroupByID(r4.id), r4), false;
                            }), e4 === E.length) {
                                const t4 = E.map((t5)=>t5.id
                                );
                                throw new Error(`Processing facade stalled: groups not resolveable: ${t4.join(", ")}`);
                            }
                        }
                        n2 || _.forEach((e4)=>{
                            if (!m.find((t4)=>t4.id === e4.id
                            )) {
                                const r4 = t3.findEntryByID(e4.id);
                                r4 && r4.delete();
                            }
                        }), _ = p(t3);
                        let A = [
                            ...m
                        ];
                        A = A.filter((e4)=>{
                            const r4 = Object.assign({}, e4), s2 = (0, o.idSignifiesNew)(r4.id, n2);
                            if (!r4.id || s2) {
                                let e5 = r4.parentID;
                                if ((0, o.idSignifiesNew)(e5, n2)) {
                                    if (!v[e5]) return true;
                                    e5 = v[e5];
                                }
                                const i2 = t3.findGroupByID(e5).createEntry();
                                s2 && (v[`${r4.id}`] = i2.id), r4.id = i2.id, r4.type && i2.setAttribute(l, r4.type);
                            } else {
                                if (!_.find((t4)=>t4.id === e4.id
                                )) return;
                                const n3 = t3.findEntryByID(r4.id);
                                n3.getGroup().id !== r4.parentID && n3.moveToGroup(t3.findGroupByID(r4.parentID));
                            }
                            const a3 = t3.findEntryByID(r4.id);
                            return (0, i.consumeEntryFacade)(a3, r4), false;
                        }), Object.keys(w).filter((t4)=>!d2.hasOwnProperty(t4)
                        ).forEach((e4)=>{
                            t3.deleteAttribute(e4);
                        }), Object.keys(d2).forEach((e4)=>{
                            e4 === u.default.Attribute.AttachmentsKey && n2 || w[e4] && w[e4] === d2[e4] || t3.setAttribute(e4, d2[e4]);
                        });
                    }, e2.createVaultFacade = f, e2.createGroupFacade = d;
                },
                8648: function(t2, e2, r2) {
                    var n = this && this.__createBinding || (Object.create ? function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), Object.defineProperty(t3, n2, {
                            enumerable: true,
                            get: function() {
                                return e3[r3];
                            }
                        });
                    } : function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), t3[n2] = e3[r3];
                    }), i = this && this.__exportStar || function(t3, e3) {
                        for(var r3 in t3)r3 === "default" || Object.prototype.hasOwnProperty.call(e3, r3) || n(e3, t3, r3);
                    }, o = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getSharedAppEnv = e2.buildSearcher = e2.VaultFacadeEntrySearch = e2.VaultEntrySearch = e2.Search = e2.MemoryStorageInterface = e2.StorageInterface = e2.Credentials = e2.FIELD_VALUE_TYPES = e2.ENTRY_TYPES = e2.DEFAULT_FIELD_TYPE = e2.DEFAULT_ENTRY_TYPE = e2.setEntryPropertyValueType = e2.getEntryPropertyValueType = e2.createFieldDescriptor = e2.setEntryFacadePropertyValueType = e2.getEntryFacadePath = e2.fieldsToProperties = e2.createEntryFromFacade = e2.createEntryFacade = e2.consumeEntryFacade = e2.isVaultFacade = e2.isOTPURI = e2.createVaultFacade = e2.createGroupFacade = e2.consumeVaultFacade = e2.consumeGroupFacade = e2.registerDatasource = e2.DatasourceAuthManager = e2.GoogleDriveDatasource = e2.DropboxDatasource = e2.WebDAVDatasource = e2.FileDatasource = e2.MemoryDatasource = e2.TextDatasource = e2.hasValidFormatBSignature = e2.getFormatBSignature = e2.VaultFormatB = e2.hasValidFormatASignature = e2.getFormatASignature = e2.VaultFormatA = e2.setDefaultFormat = e2.getDefaultFormat = e2.detectFormat = e2.AttachmentManager = e2.Entry = e2.Group = e2.Vault = e2.VaultSource = e2.VaultManager = void 0, e2.encodeBase64String = e2.decodeBase64String = e2.bytesToBase64 = e2.base64ToBytes = e2.getEntryURLs = e2.getEntryPath = e2.EntryURLType = e2.generateUUID = void 0;
                    var s = r2(6944);
                    Object.defineProperty(e2, "VaultManager", {
                        enumerable: true,
                        get: function() {
                            return o(s).default;
                        }
                    });
                    var a = r2(9203);
                    Object.defineProperty(e2, "VaultSource", {
                        enumerable: true,
                        get: function() {
                            return o(a).default;
                        }
                    });
                    var u = r2(3552);
                    Object.defineProperty(e2, "Vault", {
                        enumerable: true,
                        get: function() {
                            return o(u).default;
                        }
                    });
                    var c = r2(4730);
                    Object.defineProperty(e2, "Group", {
                        enumerable: true,
                        get: function() {
                            return o(c).default;
                        }
                    });
                    var l = r2(4233);
                    Object.defineProperty(e2, "Entry", {
                        enumerable: true,
                        get: function() {
                            return o(l).default;
                        }
                    });
                    var h = r2(1713);
                    Object.defineProperty(e2, "AttachmentManager", {
                        enumerable: true,
                        get: function() {
                            return o(h).default;
                        }
                    });
                    var f = r2(873);
                    Object.defineProperty(e2, "detectFormat", {
                        enumerable: true,
                        get: function() {
                            return f.detectFormat;
                        }
                    }), Object.defineProperty(e2, "getDefaultFormat", {
                        enumerable: true,
                        get: function() {
                            return f.getDefaultFormat;
                        }
                    }), Object.defineProperty(e2, "setDefaultFormat", {
                        enumerable: true,
                        get: function() {
                            return f.setDefaultFormat;
                        }
                    });
                    var d = r2(4814);
                    Object.defineProperty(e2, "VaultFormatA", {
                        enumerable: true,
                        get: function() {
                            return o(d).default;
                        }
                    });
                    var p = r2(9156);
                    Object.defineProperty(e2, "getFormatASignature", {
                        enumerable: true,
                        get: function() {
                            return p.getSignature;
                        }
                    }), Object.defineProperty(e2, "hasValidFormatASignature", {
                        enumerable: true,
                        get: function() {
                            return p.hasValidSignature;
                        }
                    });
                    var g = r2(2791);
                    Object.defineProperty(e2, "VaultFormatB", {
                        enumerable: true,
                        get: function() {
                            return o(g).default;
                        }
                    });
                    var y = r2(44);
                    Object.defineProperty(e2, "getFormatBSignature", {
                        enumerable: true,
                        get: function() {
                            return y.getSignature;
                        }
                    }), Object.defineProperty(e2, "hasValidFormatBSignature", {
                        enumerable: true,
                        get: function() {
                            return y.hasValidSignature;
                        }
                    });
                    var m = r2(9174);
                    Object.defineProperty(e2, "TextDatasource", {
                        enumerable: true,
                        get: function() {
                            return o(m).default;
                        }
                    });
                    var v = r2(8951);
                    Object.defineProperty(e2, "MemoryDatasource", {
                        enumerable: true,
                        get: function() {
                            return o(v).default;
                        }
                    });
                    var b = r2(4764);
                    Object.defineProperty(e2, "FileDatasource", {
                        enumerable: true,
                        get: function() {
                            return o(b).default;
                        }
                    });
                    var _ = r2(5746);
                    Object.defineProperty(e2, "WebDAVDatasource", {
                        enumerable: true,
                        get: function() {
                            return o(_).default;
                        }
                    });
                    var w = r2(4664);
                    Object.defineProperty(e2, "DropboxDatasource", {
                        enumerable: true,
                        get: function() {
                            return o(w).default;
                        }
                    });
                    var E = r2(408);
                    Object.defineProperty(e2, "GoogleDriveDatasource", {
                        enumerable: true,
                        get: function() {
                            return o(E).default;
                        }
                    });
                    var A = r2(2910);
                    Object.defineProperty(e2, "DatasourceAuthManager", {
                        enumerable: true,
                        get: function() {
                            return o(A).default;
                        }
                    });
                    var S = r2(3955);
                    Object.defineProperty(e2, "registerDatasource", {
                        enumerable: true,
                        get: function() {
                            return S.registerDatasource;
                        }
                    });
                    var P = r2(9688);
                    Object.defineProperty(e2, "consumeGroupFacade", {
                        enumerable: true,
                        get: function() {
                            return P.consumeGroupFacade;
                        }
                    }), Object.defineProperty(e2, "consumeVaultFacade", {
                        enumerable: true,
                        get: function() {
                            return P.consumeVaultFacade;
                        }
                    }), Object.defineProperty(e2, "createGroupFacade", {
                        enumerable: true,
                        get: function() {
                            return P.createGroupFacade;
                        }
                    }), Object.defineProperty(e2, "createVaultFacade", {
                        enumerable: true,
                        get: function() {
                            return P.createVaultFacade;
                        }
                    });
                    var x = r2(3633);
                    Object.defineProperty(e2, "isOTPURI", {
                        enumerable: true,
                        get: function() {
                            return x.isOTPURI;
                        }
                    }), Object.defineProperty(e2, "isVaultFacade", {
                        enumerable: true,
                        get: function() {
                            return x.isVaultFacade;
                        }
                    });
                    var T = r2(2394);
                    Object.defineProperty(e2, "consumeEntryFacade", {
                        enumerable: true,
                        get: function() {
                            return T.consumeEntryFacade;
                        }
                    }), Object.defineProperty(e2, "createEntryFacade", {
                        enumerable: true,
                        get: function() {
                            return T.createEntryFacade;
                        }
                    }), Object.defineProperty(e2, "createEntryFromFacade", {
                        enumerable: true,
                        get: function() {
                            return T.createEntryFromFacade;
                        }
                    }), Object.defineProperty(e2, "fieldsToProperties", {
                        enumerable: true,
                        get: function() {
                            return T.fieldsToProperties;
                        }
                    }), Object.defineProperty(e2, "getEntryFacadePath", {
                        enumerable: true,
                        get: function() {
                            return T.getEntryFacadePath;
                        }
                    }), Object.defineProperty(e2, "setEntryFacadePropertyValueType", {
                        enumerable: true,
                        get: function() {
                            return T.setEntryFacadePropertyValueType;
                        }
                    });
                    var O = r2(3081);
                    Object.defineProperty(e2, "createFieldDescriptor", {
                        enumerable: true,
                        get: function() {
                            return O.createFieldDescriptor;
                        }
                    }), Object.defineProperty(e2, "getEntryPropertyValueType", {
                        enumerable: true,
                        get: function() {
                            return O.getEntryPropertyValueType;
                        }
                    }), Object.defineProperty(e2, "setEntryPropertyValueType", {
                        enumerable: true,
                        get: function() {
                            return O.setEntryPropertyValueType;
                        }
                    });
                    var C = r2(2247);
                    Object.defineProperty(e2, "DEFAULT_ENTRY_TYPE", {
                        enumerable: true,
                        get: function() {
                            return C.DEFAULT_ENTRY_TYPE;
                        }
                    }), Object.defineProperty(e2, "DEFAULT_FIELD_TYPE", {
                        enumerable: true,
                        get: function() {
                            return C.DEFAULT_FIELD_TYPE;
                        }
                    }), Object.defineProperty(e2, "ENTRY_TYPES", {
                        enumerable: true,
                        get: function() {
                            return C.ENTRY_TYPES;
                        }
                    }), Object.defineProperty(e2, "FIELD_VALUE_TYPES", {
                        enumerable: true,
                        get: function() {
                            return C.FIELD_VALUE_TYPES;
                        }
                    });
                    var j = r2(7625);
                    Object.defineProperty(e2, "Credentials", {
                        enumerable: true,
                        get: function() {
                            return o(j).default;
                        }
                    });
                    var D = r2(5852);
                    Object.defineProperty(e2, "StorageInterface", {
                        enumerable: true,
                        get: function() {
                            return o(D).default;
                        }
                    });
                    var I = r2(2454);
                    Object.defineProperty(e2, "MemoryStorageInterface", {
                        enumerable: true,
                        get: function() {
                            return o(I).default;
                        }
                    });
                    var k = r2(6073);
                    Object.defineProperty(e2, "Search", {
                        enumerable: true,
                        get: function() {
                            return k.VaultEntrySearch;
                        }
                    });
                    var F = r2(6073);
                    Object.defineProperty(e2, "VaultEntrySearch", {
                        enumerable: true,
                        get: function() {
                            return F.VaultEntrySearch;
                        }
                    });
                    var R = r2(5228);
                    Object.defineProperty(e2, "VaultFacadeEntrySearch", {
                        enumerable: true,
                        get: function() {
                            return R.VaultFacadeEntrySearch;
                        }
                    });
                    var M = r2(1300);
                    Object.defineProperty(e2, "buildSearcher", {
                        enumerable: true,
                        get: function() {
                            return M.buildSearcher;
                        }
                    });
                    var N = r2(1690);
                    Object.defineProperty(e2, "getSharedAppEnv", {
                        enumerable: true,
                        get: function() {
                            return N.getSharedAppEnv;
                        }
                    });
                    var L = r2(7066);
                    Object.defineProperty(e2, "generateUUID", {
                        enumerable: true,
                        get: function() {
                            return L.generateUUID;
                        }
                    });
                    var U = r2(3265);
                    Object.defineProperty(e2, "EntryURLType", {
                        enumerable: true,
                        get: function() {
                            return U.EntryURLType;
                        }
                    }), Object.defineProperty(e2, "getEntryPath", {
                        enumerable: true,
                        get: function() {
                            return U.getEntryPath;
                        }
                    }), Object.defineProperty(e2, "getEntryURLs", {
                        enumerable: true,
                        get: function() {
                            return U.getEntryURLs;
                        }
                    });
                    var B = r2(8891);
                    Object.defineProperty(e2, "base64ToBytes", {
                        enumerable: true,
                        get: function() {
                            return B.base64ToBytes;
                        }
                    }), Object.defineProperty(e2, "bytesToBase64", {
                        enumerable: true,
                        get: function() {
                            return B.bytesToBase64;
                        }
                    }), Object.defineProperty(e2, "decodeBase64String", {
                        enumerable: true,
                        get: function() {
                            return B.decodeBase64String;
                        }
                    }), Object.defineProperty(e2, "encodeBase64String", {
                        enumerable: true,
                        get: function() {
                            return B.encodeBase64String;
                        }
                    }), i(r2(2297), e2);
                },
                8468: function(t2, e2, r2) {
                    var n = this && this.__createBinding || (Object.create ? function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), Object.defineProperty(t3, n2, {
                            enumerable: true,
                            get: function() {
                                return e3[r3];
                            }
                        });
                    } : function(t3, e3, r3, n2) {
                        n2 === void 0 && (n2 = r3), t3[n2] = e3[r3];
                    }), i = this && this.__setModuleDefault || (Object.create ? function(t3, e3) {
                        Object.defineProperty(t3, "default", {
                            enumerable: true,
                            value: e3
                        });
                    } : function(t3, e3) {
                        t3.default = e3;
                    }), o = this && this.__importStar || function(t3) {
                        if (t3 && t3.__esModule) return t3;
                        var e3 = {};
                        if (t3 != null) for(var r3 in t3)r3 !== "default" && Object.prototype.hasOwnProperty.call(t3, r3) && n(e3, t3, r3);
                        return i(e3, t3), e3;
                    }, s = this && this.__exportStar || function(t3, e3) {
                        for(var r3 in t3)r3 === "default" || Object.prototype.hasOwnProperty.call(e3, r3) || n(e3, t3, r3);
                    }, a = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.localFileClient = e2.LocalStorageDatasource = e2.LocalStorageInterface = e2.LocalFileDatasource = e2.init = void 0;
                    const u = r2(9157), c = r2(7921), l = o(r2(1436));
                    e2.localFileClient = l;
                    let h = false;
                    e2.init = function(t3 = (t4)=>t4
                    ) {
                        if (h) return;
                        h = true;
                        const e3 = (0, u.getSharedAppEnv)();
                        (0, c.applyWebConfiguration)(e3, t3);
                    };
                    var f = r2(2950);
                    Object.defineProperty(e2, "LocalFileDatasource", {
                        enumerable: true,
                        get: function() {
                            return a(f).default;
                        }
                    });
                    var d = r2(9340);
                    Object.defineProperty(e2, "LocalStorageInterface", {
                        enumerable: true,
                        get: function() {
                            return a(d).default;
                        }
                    });
                    var p = r2(9135);
                    Object.defineProperty(e2, "LocalStorageDatasource", {
                        enumerable: true,
                        get: function() {
                            return a(p).default;
                        }
                    }), s(r2(8648), e2);
                },
                2301: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.generateVaultInsights = void 0;
                    const r2 = /[0-9]+/, n = /[a-z]+/, i = /[^0-9a-zA-Z`~!@#$%^&*()=+\[\]{};:'",.<>\/?|\\_£€-]+/, o = /[`~!@#$%^&*()=+\[\]{};:'",.<>\/?|\\_£€-]+/, s = /[A-Z]+/;
                    e2.generateVaultInsights = function(t3) {
                        let e3 = 0, a = 0, u = 0, c = 0, l = null, h = null, f = 0;
                        const d = {}, p = new Set(), g = [], y = (t4)=>{
                            const u2 = t4.getEntries();
                            e3 += 1, a += u2.length, u2.forEach((t5)=>{
                                const e4 = t5.getProperty("password");
                                typeof e4 == "string" && (g.push(e4.length), (l === null || e4.length > l) && (l = e4.length), (h === null || e4.length < h) && (h = e4.length));
                                const a2 = t5.getProperty("username");
                                [
                                    "login",
                                    "website"
                                ].includes(t5.getType()) && (a2 && p.add(a2), e4 && (d[e4] = (d[e4] || 0) + 1, function(t6) {
                                    return !t6 || t6.length < 10 || !([
                                        r2,
                                        n,
                                        i,
                                        o,
                                        s
                                    ].filter((e5)=>e5.test(t6)
                                    ).length >= 3);
                                }(e4) && (f += 1)));
                            }), t4.getGroups().forEach((t5)=>y(t5)
                            );
                        };
                        t3.getGroups().forEach((t4)=>y(t4)
                        );
                        const m = g.reduce((t4, e4)=>t4 + e4
                        , 0) / g.length, v = t3.getTrashGroup();
                        if (v) {
                            const t4 = (e4)=>{
                                const r3 = e4.getGroups();
                                c += r3.length, r3.forEach((e5)=>t4(e5)
                                ), u += e4.getEntries().length;
                            };
                            t4(v);
                        }
                        const b = Object.keys(d).reduce((t4, e4)=>t4 + (d[e4] > 1 ? d[e4] : 0)
                        , 0);
                        return {
                            avgPassLen: m,
                            entries: a,
                            groups: e3,
                            longPassLen: l,
                            shortPassLen: h,
                            trashEntries: u,
                            trashGroups: c,
                            usernames: p.size,
                            duplicatePasswords: b,
                            weakPasswords: f
                        };
                    };
                },
                6664: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = n(r2(6729));
                    function o() {
                        throw new Error("Not implemented");
                    }
                    class s extends i.default {
                        constructor(t3){
                            super(), this._readOnly = false, this.dirty = false, this.source = null, this.source = t3;
                        }
                        static encodeRaw(t3, e3) {
                            o();
                        }
                        static extractSharesFromHistory(t3) {
                            o();
                        }
                        static getFormatID() {
                            return o(), null;
                        }
                        static historiesDiffer(t3, e3) {
                            return o(), false;
                        }
                        static isEncrypted(t3) {
                            o();
                        }
                        static parseEncrypted(t3, e3) {
                            o();
                        }
                        static prepareHistoryForMerge(t3) {
                            o();
                        }
                        static vaultFromMergedHistories(t3, e3) {
                            return o(), null;
                        }
                        get history() {
                            return this.getHistory();
                        }
                        get readOnly() {
                            return this._readOnly;
                        }
                        cloneEntry(t3, e3) {
                            o();
                        }
                        cloneGroup(t3, e3) {
                            o();
                        }
                        createEntry(t3, e3) {
                            o();
                        }
                        createGroup(t3, e3) {
                            o();
                        }
                        deleteEntry(t3) {
                            o();
                        }
                        deleteEntryAttribute(t3, e3) {
                            o();
                        }
                        deleteEntryProperty(t3, e3) {
                            o();
                        }
                        deleteGroup(t3) {
                            o();
                        }
                        deleteGroupAttribute(t3, e3) {
                            o();
                        }
                        deleteVaultAttribute(t3) {
                            o();
                        }
                        erase() {
                            Object.keys(this.source).forEach((t3)=>{
                                this.source[t3] = void 0, delete this.source[t3];
                            }), this.history.splice(0, 1 / 0);
                        }
                        execute(t3) {
                            o();
                        }
                        findEntryByID(t3) {
                            return o(), null;
                        }
                        findGroupByID(t3) {
                            return o(), null;
                        }
                        findGroupContainingEntryID(t3) {
                            return o(), null;
                        }
                        findGroupContainingGroupID(t3) {
                            return o(), null;
                        }
                        generateID() {
                            o();
                        }
                        getAllEntries(t3 = null) {
                            return o(), [];
                        }
                        getAllGroups(t3 = null) {
                            return o(), [];
                        }
                        getEntryAttributes(t3) {
                            return o(), {};
                        }
                        getEntryChanges(t3) {
                            return o(), [];
                        }
                        getEntryProperties(t3) {
                            return o(), {};
                        }
                        getFormat() {
                            return s;
                        }
                        getGroupAttributes(t3) {
                            return o(), {};
                        }
                        getGroupTitle(t3) {
                            return o(), "";
                        }
                        getHistory() {
                            return o(), [];
                        }
                        getItemID(t3) {
                            return o(), "";
                        }
                        getItemParentID(t3) {
                            return o(), "";
                        }
                        getVaultAttributes() {
                            return o(), {};
                        }
                        getVaultID() {
                            o();
                        }
                        initialise() {
                            o();
                        }
                        moveEntry(t3, e3) {
                            o();
                        }
                        moveGroup(t3, e3) {
                            o();
                        }
                        optimise() {
                            o();
                        }
                        setEntryAttribute(t3, e3, r3) {
                            o();
                        }
                        setEntryProperty(t3, e3, r3) {
                            o();
                        }
                        setGroupAttribute(t3, e3, r3) {
                            o();
                        }
                        setGroupTitle(t3, e3) {
                            o();
                        }
                        setVaultAttribute(t3, e3) {
                            o();
                        }
                    }
                    e2.default = s;
                },
                4814: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = r2(3572), o = n(r2(6664)), s = n(r2(3552)), a = r2(4374), u = r2(9446), c = n(r2(5072)), l = r2(9156), h = r2(4479), f = n(r2(6166)), d = r2(1690), p = r2(8891), g = r2(7066), y = r2(5456), m = r2(2429), v = r2(2297), b = {
                        aid: a.executeArchiveID,
                        cen: a.executeCreateEntry,
                        cgr: a.executeCreateGroup,
                        cmm: a.executeComment,
                        daa: a.executeDeleteArchiveAttribute,
                        dea: a.executeDeleteEntryAttribute,
                        dem: a.executeDeleteEntryProperty,
                        den: a.executeDeleteEntry,
                        dep: a.executeDeleteEntryProperty,
                        dga: a.executeDeleteGroupAttribute,
                        dgr: a.executeDeleteGroup,
                        fmt: a.executeFormat,
                        men: a.executeMoveEntry,
                        mgr: a.executeMoveGroup,
                        pad: a.executePad,
                        saa: a.executeSetArchiveAttribute,
                        sea: a.executeSetEntryAttribute,
                        sem: a.executeSetEntryProperty,
                        sep: a.executeSetEntryProperty,
                        sga: a.executeSetGroupAttribute,
                        tgr: a.executeTitleGroup
                    }, _ = /^\$[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}\s/, w = /^[a-z]{3}\s.+$/;
                    class E extends o.default {
                        constructor(t3 = {
                            id: null,
                            groups: []
                        }){
                            super(t3), this._history = [], this._history.format = v.VaultFormatID.A;
                        }
                        static encodeRaw(t3, e3) {
                            const r3 = (0, d.getSharedAppEnv)().getProperty("compression/v1/compressText"), n2 = (0, d.getSharedAppEnv)().getProperty("crypto/v1/encryptText"), { masterPassword: i2  } = (0, y.getCredentials)(e3.id);
                            return Promise.resolve().then(()=>(0, m.historyArrayToString)(t3)
                            ).then((t4)=>r3(t4)
                            ).then((t4)=>n2(t4, i2)
                            ).then(l.sign);
                        }
                        static extractSharesFromHistory(t3) {
                            return t3.reduce((t4, e3)=>{
                                if (_.test(e3)) {
                                    const r3 = e3.substring(1, 37), n2 = e3.replace(_, "");
                                    t4[r3] = t4[r3] || [], t4[r3].push(n2);
                                } else t4.base.push(e3);
                                return t4;
                            }, {
                                base: []
                            });
                        }
                        static getFormatID() {
                            return v.VaultFormatID.A;
                        }
                        static historiesDiffer(t3, e3) {
                            const r3 = f.default.calculateHistoryDifferences(t3, e3);
                            return r3 === null || r3.original.length > 0 || r3.secondary.length > 0;
                        }
                        static isEncrypted(t3) {
                            return (0, l.vaultContentsEncrypted)(t3);
                        }
                        static parseEncrypted(t3, e3) {
                            const r3 = (0, d.getSharedAppEnv)().getProperty("compression/v1/decompressText"), n2 = (0, d.getSharedAppEnv)().getProperty("crypto/v1/decryptText"), { masterPassword: i2  } = (0, y.getCredentials)(e3.id);
                            return Promise.resolve().then(()=>{
                                if (!(0, l.hasValidSignature)(t3)) throw new Error("No valid signature in vault");
                                return (0, l.stripSignature)(t3);
                            }).then((t4)=>n2(t4, i2)
                            ).then((t4)=>{
                                if (t4 && t4.length > 0) {
                                    const e4 = r3(t4);
                                    if (e4) return (0, m.historyStringToArray)(e4, v.VaultFormatID.A);
                                }
                                throw new Error("Failed reconstructing history: Decryption failed");
                            });
                        }
                        static prepareHistoryForMerge(t3) {
                            return (0, u.stripDestructiveCommands)(t3);
                        }
                        static vaultFromMergedHistories(t3, e3) {
                            const r3 = f.default.calculateHistoryDifferences(t3, e3);
                            if (r3 === null) throw new Error("Failed merging vault histories: No common base");
                            if (r3.secondary.length === 0) return s.default.createFromHistory(t3, E);
                            const n2 = E.prepareHistoryForMerge(r3.original), i2 = E.prepareHistoryForMerge(r3.secondary), o2 = r3.common, a2 = new s.default(E);
                            return a2.format.erase(), a2.format.execute(o2.concat(i2).concat(n2)), a2.format.dirty = false, a2;
                        }
                        cloneEntry(t3, e3) {}
                        cloneGroup(t3, e3) {
                            const r3 = (0, h.describeVaultDataset)(t3, e3);
                            this.execute(r3);
                        }
                        createEntry(t3, e3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.CreateEntry).addArgument(t3).addArgument(e3).generateCommand());
                        }
                        createGroup(t3, e3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.CreateGroup).addArgument(t3).addArgument(e3).generateCommand());
                        }
                        deleteEntry(t3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.DeleteEntry).addArgument(t3).generateCommand());
                        }
                        deleteEntryAttribute(t3, e3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.DeleteEntryAttribute).addArgument(t3).addArgument(e3).generateCommand());
                        }
                        deleteEntryProperty(t3, e3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.DeleteEntryProperty).addArgument(t3).addArgument(e3).generateCommand());
                        }
                        deleteGroup(t3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.DeleteGroup).addArgument(t3).generateCommand());
                        }
                        deleteGroupAttribute(t3, e3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.DeleteGroupAttribute).addArgument(t3).addArgument(e3).generateCommand());
                        }
                        deleteVaultAttribute(t3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.DeleteArchiveAttribute).addArgument(t3).generateCommand());
                        }
                        erase() {
                            super.erase(), Object.assign(this.source, {
                                id: null,
                                groups: []
                            }), this.emit("erased");
                        }
                        execute(t3) {
                            if (this.readOnly) throw new Error("Format is in read-only mode");
                            const e3 = Array.isArray(t3) ? t3 : [
                                t3
                            ];
                            e3.forEach((t4)=>this._executeCommand(t4)
                            );
                            const r3 = e3[e3.length - 1];
                            /^pad\s/i.test(r3) === false && this._pad(), this.dirty = true, this.emit("commandsExecuted");
                        }
                        findEntryByID(t3) {
                            return this.getAllEntries().find((e3)=>e3.id === t3
                            ) || null;
                        }
                        findGroupByID(t3) {
                            return this.getAllGroups().find((e3)=>e3.id === t3
                            ) || null;
                        }
                        findGroupContainingEntryID(t3) {
                            const e3 = this.getAllEntries().find((e4)=>e4.id === t3
                            );
                            return e3 && this.getAllGroups().find((t4)=>t4.id === e3.parentID
                            ) || null;
                        }
                        findGroupContainingGroupID(t3) {
                            const e3 = (r3)=>{
                                for (const n2 of r3){
                                    if (n2.id === t3) return null;
                                    const r4 = n2.groups || [];
                                    if (r4.find((e4)=>e4.id === t3
                                    )) return n2;
                                    const i2 = e3(r4);
                                    if (i2) return i2;
                                }
                                return null;
                            };
                            return e3(this.getAllGroups());
                        }
                        generateID() {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.ArchiveID).addArgument((0, g.generateUUID)()).generateCommand());
                        }
                        getAllEntries(t3 = null) {
                            return (0, u.getAllEntries)(this.source, t3);
                        }
                        getAllGroups(t3 = null) {
                            return (0, u.getAllGroups)(this.source, t3);
                        }
                        getEntryAttributes(t3) {
                            return t3.attributes;
                        }
                        getEntryChanges(t3) {
                            return (t3.history || []).filter((t4)=>t4.propertyType === v.EntryPropertyType.Property
                            ).map((t4)=>{
                                const e3 = t4.originalValue ? typeof t4.newValue == "string" ? v.EntryChangeType.Modified : v.EntryChangeType.Deleted : v.EntryChangeType.Created, r3 = {
                                    property: t4.property,
                                    type: e3,
                                    ts: null
                                };
                                return (e3 === v.EntryChangeType.Created || v.EntryChangeType.Modified) && (r3.value = t4.newValue), r3;
                            });
                        }
                        getEntryProperties(t3) {
                            return t3.properties;
                        }
                        getFormat() {
                            return E;
                        }
                        getGroupAttributes(t3) {
                            return t3.attributes;
                        }
                        getGroupTitle(t3) {
                            return t3.title;
                        }
                        getHistory() {
                            return this._history.format || (this._history.format = v.VaultFormatID.A), this._history;
                        }
                        getItemID(t3) {
                            return t3.id;
                        }
                        getItemParentID(t3) {
                            return t3.parentID;
                        }
                        getVaultAttributes() {
                            return this.source.attributes || {};
                        }
                        getVaultID() {
                            return this.source.id;
                        }
                        initialise() {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.Format).addArgument((0, l.getFormat)()).generateCommand()), this.generateID();
                        }
                        moveEntry(t3, e3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.MoveEntry).addArgument(t3).addArgument(e3).generateCommand());
                        }
                        moveGroup(t3, e3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.MoveGroup).addArgument(t3).addArgument(e3).generateCommand());
                        }
                        optimise() {
                            const t3 = new c.default(this);
                            t3.canBeFlattened() && t3.flatten();
                        }
                        setEntryAttribute(t3, e3, r3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.SetEntryAttribute).addArgument(t3).addArgument(e3).addArgument(r3).generateCommand());
                        }
                        setEntryProperty(t3, e3, r3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.SetEntryProperty).addArgument(t3).addArgument(e3).addArgument(r3).generateCommand());
                        }
                        setGroupAttribute(t3, e3, r3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.SetGroupAttribute).addArgument(t3).addArgument(e3).addArgument(r3).generateCommand());
                        }
                        setGroupTitle(t3, e3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.SetGroupTitle).addArgument(t3).addArgument(e3).generateCommand());
                        }
                        setVaultAttribute(t3, e3) {
                            this.execute(u.InigoCommand.create(u.InigoCommand.Command.SetArchiveAttribute).addArgument(t3).addArgument(e3).generateCommand());
                        }
                        _executeCommand(t3) {
                            let e3 = t3, r3 = null;
                            if (_.test(e3) && (r3 = /^\$([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/.exec(e3)[1], e3 = e3.replace(_, "")), !w.test(e3)) throw new Error(`Invalid command: ${t3}`);
                            if (/^pad\s/i.test(t3) && /^pad\s/i.test(this.history[this.history.length - 1])) return;
                            const n2 = (0, u.extractCommandComponents)(e3), o2 = n2.shift().toLowerCase(), s2 = b[o2];
                            try {
                                s2.apply(null, [
                                    this.source,
                                    {
                                        shareID: r3
                                    },
                                    ...this._processCommandParameters(o2, n2)
                                ]), this.history.push(t3);
                            } catch (t4) {
                                throw new i.Layerr(t4, `Failed executing vault command: ${o2}`);
                            }
                        }
                        _pad() {
                            this._executeCommand(u.InigoCommand.generatePaddingCommand());
                        }
                        _processCommandParameters(t3, e3) {
                            const r3 = Object.keys(u.COMMAND_MANIFEST).find((e4)=>u.COMMAND_MANIFEST[e4].s === t3
                            ), n2 = u.COMMAND_MANIFEST[r3];
                            if (!n2) throw new Error(`Cannot process command parameters: no command found for key: ${t3}`);
                            return e3.map((t4, e4)=>n2.args[e4].encode === true && (0, p.isEncoded)(t4) ? (0, p.decodeStringValue)(t4) : t4
                            );
                        }
                    }
                    e2.default = E;
                },
                2791: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const o = i(r2(6664)), s = i(r2(3552)), a = r2(7066), u = r2(1690), c = r2(5456), l = r2(2429), h = r2(44), f = r2(3280), d = r2(2879), p = r2(120), g = r2(5138), y = r2(2606), m = r2(2297);
                    function v() {
                        return {
                            id: null,
                            a: {},
                            g: [],
                            e: [],
                            c: (0, y.getDateString)()
                        };
                    }
                    class b extends o.default {
                        constructor(t3 = v()){
                            super(t3);
                        }
                        static encodeRaw(t3, e3) {
                            const r3 = (0, u.getSharedAppEnv)().getProperty("compression/v2/compressText"), n2 = (0, u.getSharedAppEnv)().getProperty("crypto/v1/encryptText"), { masterPassword: i2  } = (0, c.getCredentials)(e3.id);
                            return Promise.resolve().then(()=>(0, l.historyArrayToString)(t3)
                            ).then((t4)=>r3(t4)
                            ).then((t4)=>n2(t4, i2)
                            ).then(h.sign);
                        }
                        static extractSharesFromHistory(t3) {
                            return {};
                        }
                        static getFormatID() {
                            return m.VaultFormatID.B;
                        }
                        static historiesDiffer(t3, e3) {
                            return (0, f.historiesDiffer)(t3, e3);
                        }
                        static isEncrypted(t3) {
                            return (0, h.vaultContentsEncrypted)(t3);
                        }
                        static parseEncrypted(t3, e3) {
                            const r3 = (0, u.getSharedAppEnv)().getProperty("compression/v2/decompressText"), i2 = (0, u.getSharedAppEnv)().getProperty("crypto/v1/decryptText"), { masterPassword: o2  } = (0, c.getCredentials)(e3.id);
                            return Promise.resolve().then(()=>{
                                if (!(0, h.hasValidSignature)(t3)) throw new Error("No valid signature in vault");
                                return (0, h.stripSignature)(t3);
                            }).then((t4)=>i2(t4, o2)
                            ).then((t4)=>n(this, void 0, void 0, function*() {
                                    const e4 = yield r3(t4);
                                    return (0, l.historyStringToArray)(e4, m.VaultFormatID.B);
                                })
                            );
                        }
                        static prepareHistoryForMerge(t3) {
                            return t3;
                        }
                        static vaultFromMergedHistories(t3, e3) {
                            const r3 = JSON.parse(t3[0]), n2 = JSON.parse(e3[0]), i2 = (0, d.mergeRawVaults)(r3, n2), o2 = new s.default();
                            return o2._format = new b(i2), o2;
                        }
                        cloneEntry(t3, e3) {}
                        cloneGroup(t3, e3) {
                            const r3 = JSON.parse(JSON.stringify(t3));
                            r3.id = (0, a.generateUUID)(), r3.g = e3, this.source.g.push(r3);
                            const n2 = this.source.e.filter((e4)=>e4.g === t3.id
                            ).map((t4)=>{
                                const e4 = JSON.parse(JSON.stringify(t4));
                                return e4.g = r3.id, e4;
                            });
                            this.source.e.push(...n2), this.source.g.forEach((e4)=>{
                                e4.g === t3.id && this.cloneGroup(e4, r3.id);
                            });
                        }
                        createEntry(t3, e3) {
                            const r3 = {
                                id: e3,
                                g: t3,
                                p: {},
                                a: {}
                            };
                            this.source.e.push(r3);
                        }
                        createGroup(t3, e3) {
                            const r3 = {
                                id: e3,
                                g: t3,
                                t: "",
                                a: {}
                            };
                            this.source.g.push(r3);
                        }
                        deleteEntry(t3) {
                            const e3 = this.source.e.findIndex((e4)=>e4.id === t3
                            );
                            e3 >= 0 && this.source.e.splice(e3, 1);
                        }
                        deleteEntryAttribute(t3, e3) {
                            const r3 = this.source.e.find((e4)=>e4.id === t3
                            );
                            r3.a[e3] && (r3.a[e3].deleted = (0, y.getTimestamp)());
                        }
                        deleteEntryProperty(t3, e3) {
                            const r3 = this.source.e.find((e4)=>e4.id === t3
                            );
                            r3.p[e3] && (r3.p[e3].deleted = (0, y.getTimestamp)());
                        }
                        deleteGroup(t3) {
                            const e3 = this.source.g.findIndex((e4)=>e4.id === t3
                            );
                            e3 >= 0 && this.source.g.splice(e3, 1);
                        }
                        deleteGroupAttribute(t3, e3) {
                            const r3 = this.source.g.find((e4)=>e4.id === t3
                            );
                            r3.a[e3] && (r3.a[e3].deleted = (0, y.getTimestamp)());
                        }
                        deleteVaultAttribute(t3) {
                            this.source.a[t3] && (this.source.a[t3].deleted = (0, y.getTimestamp)());
                        }
                        erase() {
                            super.erase(), Object.assign(this.source, v()), this.emit("erased");
                        }
                        execute(t3) {
                            let e3;
                            if (Array.isArray(t3)) {
                                if (t3.length !== 1) throw new Error(`Format-B commands array must contain a single command, received: ${t3.length}`);
                                e3 = t3[0];
                            } else e3 = t3;
                            this.source = JSON.parse(e3), this.dirty = true, this.emit("commandsExecuted");
                        }
                        findEntryByID(t3) {
                            return this.source.e.find((e3)=>e3.id === t3
                            ) || null;
                        }
                        findGroupByID(t3) {
                            return this.source.g.find((e3)=>e3.id === t3
                            ) || null;
                        }
                        findGroupContainingEntryID(t3) {
                            const e3 = this.getAllEntries().find((e4)=>e4.id === t3
                            );
                            return e3 && this.getAllGroups().find((t4)=>t4.id === e3.g
                            ) || null;
                        }
                        findGroupContainingGroupID(t3) {
                            const e3 = this.getAllGroups(), r3 = e3.find((e4)=>e4.id === t3
                            );
                            return r3 && e3.find((t4)=>t4.id === r3.g
                            ) || null;
                        }
                        generateID() {
                            this.source.id = (0, a.generateUUID)();
                        }
                        getAllEntries(t3 = null) {
                            const e3 = this.source;
                            return t3 === null ? e3.e : e3.e.filter((e4)=>e4.g === t3
                            );
                        }
                        getAllGroups(t3 = null) {
                            const e3 = this.source;
                            return t3 === null ? e3.g : e3.g.filter((e4)=>e4.g === t3
                            );
                        }
                        getEntryAttributes(t3) {
                            return (0, p.valuesObjectToKeyValueObject)(t3.a);
                        }
                        getEntryChanges(t3) {
                            return Object.keys(t3.p).reduce((e3, r3)=>[
                                    ...e3,
                                    ...t3.p[r3].history.map((e4)=>({
                                            property: r3,
                                            type: e4.updated === t3.p[r3].created ? m.EntryChangeType.Created : m.EntryChangeType.Modified,
                                            ts: e4.updated,
                                            value: e4.value
                                        })
                                    ),
                                    ...t3.p[r3].deleted ? [
                                        {
                                            property: r3,
                                            type: m.EntryChangeType.Deleted,
                                            ts: t3.p[r3].deleted,
                                            value: null
                                        }
                                    ] : []
                                ]
                            , []);
                        }
                        getEntryProperties(t3) {
                            return (0, p.valuesObjectToKeyValueObject)(t3.p);
                        }
                        getFormat() {
                            return b;
                        }
                        getGroupAttributes(t3) {
                            return (0, p.valuesObjectToKeyValueObject)(t3.a);
                        }
                        getGroupTitle(t3) {
                            return t3.t;
                        }
                        getHistory() {
                            const t3 = [
                                JSON.stringify(this.source)
                            ];
                            return t3.format = m.VaultFormatID.B, t3;
                        }
                        getItemID(t3) {
                            return t3.id;
                        }
                        getItemParentID(t3) {
                            return t3.g;
                        }
                        getVaultAttributes() {
                            return (0, p.valuesObjectToKeyValueObject)(this.source.a);
                        }
                        getVaultID() {
                            return this.source.id;
                        }
                        initialise() {
                            Object.assign(this.source, {
                                a: this.source.a || {},
                                g: this.source.g || [],
                                e: this.source.e || []
                            }), this.generateID();
                        }
                        moveEntry(t3, e3) {
                            this.source.e.find((e4)=>e4.id === t3
                            ).g = e3;
                        }
                        moveGroup(t3, e3) {
                            this.source.g.find((e4)=>e4.id === t3
                            ).g = e3;
                        }
                        optimise() {}
                        setEntryAttribute(t3, e3, r3) {
                            const n2 = this.source.e.find((e4)=>e4.id === t3
                            );
                            if (n2.a[e3]) {
                                const t4 = n2.a[e3];
                                t4.history.unshift((0, g.valueToHistoryItem)(t4)), t4.value = r3, t4.updated = (0, y.getTimestamp)();
                            } else n2.a[e3] = (0, g.newRawValue)(r3);
                        }
                        setEntryProperty(t3, e3, r3) {
                            const n2 = this.source.e.find((e4)=>e4.id === t3
                            );
                            if (n2.p[e3]) {
                                const t4 = n2.p[e3];
                                t4.history.unshift((0, g.valueToHistoryItem)(t4)), t4.value = r3, t4.updated = (0, y.getTimestamp)();
                            } else n2.p[e3] = (0, g.newRawValue)(r3);
                        }
                        setGroupAttribute(t3, e3, r3) {
                            const n2 = this.source.g.find((e4)=>e4.id === t3
                            );
                            if (n2.a[e3]) {
                                const t4 = n2.a[e3];
                                t4.history.unshift((0, g.valueToHistoryItem)(t4)), t4.value = r3, t4.updated = (0, y.getTimestamp)();
                            } else n2.a[e3] = (0, g.newRawValue)(r3);
                        }
                        setGroupTitle(t3, e3) {
                            this.source.g.find((e4)=>e4.id === t3
                            ).t = e3;
                        }
                        setVaultAttribute(t3, e3) {
                            if (this.source.a[t3]) {
                                const r3 = this.source.a[t3];
                                r3.history.unshift((0, g.valueToHistoryItem)(r3)), r3.value = e3, r3.updated = (0, y.getTimestamp)();
                            } else this.source.a[t3] = (0, g.newRawValue)(e3);
                        }
                    }
                    e2.default = b;
                },
                2429: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.historyStringToArray = e2.historyArrayToString = void 0, e2.historyArrayToString = function(t3) {
                        return t3.join("\n");
                    }, e2.historyStringToArray = function(t3, e3) {
                        const r2 = t3.split("\n");
                        return e3 && (r2.format = e3), r2;
                    };
                },
                5072: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = r2(4479), o = n(r2(4814));
                    function s(t3) {
                        const e3 = t3.substr(0, 3);
                        return [
                            "cmm"
                        ].indexOf(e3) >= 0;
                    }
                    class a {
                        constructor(t3){
                            this.format = t3;
                        }
                        canBeFlattened() {
                            return this.format.history.length >= a.FLATTENING_MIN_LINES;
                        }
                        flatten(t3 = false) {
                            const e3 = this.format.history, r3 = [], n2 = new o.default();
                            let u, c = e3.length - a.PRESERVE_LINES;
                            if (c <= 0 || !this.canBeFlattened()) {
                                if (!t3) return false;
                                c = e3.length;
                            }
                            for(let t4 = 0; t4 < c; t4 += 1)u = e3[t4], s(u) && r3.push(u), n2.execute(u);
                            const l = (0, i.describeVaultDataset)(n2.source, "0"), h = [
                                ...r3,
                                ...l,
                                ...e3.slice(c)
                            ];
                            return this.format.erase(), this.format.execute(h), true;
                        }
                    }
                    e2.default = a, a.FLATTENING_MIN_LINES = 6e3, a.PRESERVE_LINES = 5e3;
                },
                6166: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const n = r2(9688), i = [
                        "string",
                        "number",
                        "boolean",
                        "undefined"
                    ];
                    function o(t3, e3) {
                        if (Array.isArray(t3) && Array.isArray(e3)) {
                            if (!t3.some(function(t4) {
                                return !e3.some(function(e4) {
                                    return o(t4, e4) === false;
                                });
                            })) return e3.some(function(e4) {
                                return !t3.some(function(t4) {
                                    return o(e4, t4) === false;
                                });
                            });
                        } else if (typeof t3 == "object" && typeof e3 == "object") {
                            if (t3 === null && e3 === null) return false;
                            let n2 = (r3 = [
                                ...Object.keys(t3),
                                ...Object.keys(e3)
                            ]).filter(function(t4, e4) {
                                return r3.indexOf(t4) === e4;
                            });
                            if (!n2.some(function(r4) {
                                return !(t3.hasOwnProperty(r4) && e3.hasOwnProperty(r4));
                            })) return n2.some(function(r4) {
                                return o(t3[r4], e3[r4]);
                            });
                        } else if (i.indexOf(typeof t3) === i.indexOf(typeof e3)) return t3 !== e3;
                        var r3;
                        return true;
                    }
                    class s {
                        constructor(t3, e3){
                            this._vaultA = t3, this._vaultB = e3;
                        }
                        static calculateHistoryDifferences(t3, e3) {
                            return function(t4, e4) {
                                const r3 = [
                                    ...t4
                                ], n2 = [
                                    ...e4
                                ], i2 = function(t5, e5) {
                                    const r4 = (t6)=>t6 && t6.length >= 3 ? t6.substr(0, 3) : ""
                                    , n3 = (t6)=>t6.split(" ")[1]
                                    ;
                                    for(let i3 = t5.length - 1; i3 >= 9; i3 -= 1)if (r4(t5[i3]) === "pad") {
                                        const o2 = n3(t5[i3]);
                                        for(let t6 = e5.length - 1; t6 >= 0; t6 -= 1)if (r4(e5[t6]) === "pad" && n3(e5[t6]) === o2) return {
                                            a: i3,
                                            b: t6
                                        };
                                    }
                                    return null;
                                }(r3, n2);
                                return i2 === null ? null : {
                                    original: r3.splice(i2.a + 1, r3.length),
                                    secondary: n2.splice(i2.b + 1, n2.length),
                                    common: r3
                                };
                            }(t3, e3);
                        }
                        calculateDifferences() {
                            return s.calculateHistoryDifferences(this._vaultA.format.history, this._vaultB.format.history);
                        }
                        vaultsDiffer() {
                            const t3 = (0, n.createVaultFacade)(this._vaultA), e3 = (0, n.createVaultFacade)(this._vaultB);
                            return delete t3.id, delete e3.id, delete t3._tag, delete e3._tag, o(t3, e3);
                        }
                    }
                    e2.default = s;
                },
                4374: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.executeTitleGroup = e2.executeSetGroupAttribute = e2.executeSetEntryProperty = e2.executeSetEntryAttribute = e2.executeSetArchiveAttribute = e2.executePad = e2.executeMoveGroup = e2.executeMoveEntry = e2.executeFormat = e2.executeDeleteGroupAttribute = e2.executeDeleteGroup = e2.executeDeleteEntryProperty = e2.executeDeleteEntryAttribute = e2.executeDeleteEntry = e2.executeDeleteArchiveAttribute = e2.executeCreateGroup = e2.executeCreateEntry = e2.executeComment = e2.executeArchiveID = void 0;
                    const n = r2(9446), i = r2(2297);
                    e2.executeArchiveID = function(t3, e3, r3) {
                        if (!e3.shareID) {
                            if (t3.id) throw new Error("Vault ID already set");
                            t3.id = r3;
                        }
                    }, e2.executeComment = function() {}, e2.executeCreateEntry = function(t3, e3, r3, i2) {
                        t3.groups = t3.groups || [];
                        const o = {
                            id: i2,
                            properties: {
                                title: ""
                            },
                            shareID: e3.shareID,
                            parentID: r3
                        };
                        e3.permissions && (o.permissions = e3.permissions);
                        const s = (0, n.findGroupByID)(t3.groups, r3);
                        if (!s) throw new Error(`Invalid group ID: ${r3}`);
                        s.entries = s.entries || [], s.entries.push(o);
                    }, e2.executeCreateGroup = function(t3, e3, r3, i2) {
                        t3.groups = t3.groups || [];
                        const o = {
                            id: i2,
                            title: "New group",
                            shareID: e3.shareID,
                            parentID: r3
                        };
                        if (e3.permissions && (o.permissions = e3.permissions), r3 === "0") t3.groups.push(o);
                        else {
                            const e4 = (0, n.findGroupByID)(t3.groups, r3);
                            if (!e4) throw new Error(`Invalid parent group ID: ${r3}`);
                            e4.groups = e4.groups || [], e4.groups.push(o);
                        }
                    }, e2.executeDeleteArchiveAttribute = function(t3, e3, r3) {
                        const n2 = t3.attributes || {};
                        if (n2.hasOwnProperty(r3) !== true) throw new Error(`Vault contains no such attribute: ${r3}`);
                        if (!delete n2[r3]) throw new Error(`Failed deleting attribute: ${r3}`);
                    }, e2.executeDeleteEntry = function(t3, e3, r3) {
                        t3.groups = t3.groups || [];
                        const { group: i2 , index: o  } = (0, n.findGroupContainingEntryID)(t3.groups, r3);
                        if (!i2) throw new Error(`Failed deleting entry: Invalid entry ID: ${r3}`);
                        i2.entries.splice(o, 1);
                    }, e2.executeDeleteEntryAttribute = function(t3, e3, r3, o) {
                        t3.groups = t3.groups || [];
                        const s = (0, n.findEntryByID)(t3.groups, r3);
                        if (!s) throw new Error("Entry not found for ID");
                        s.attributes = s.attributes || {};
                        const a = s.attributes[o];
                        if (!delete s.attributes[o]) throw new Error("Failed deleting attribute");
                        s.history = s.history || [], s.history.push((0, n.generateEntryLegacyHistoryItem)(o, i.EntryPropertyType.Attribute, a, null));
                    }, e2.executeDeleteEntryProperty = function(t3, e3, r3, o) {
                        t3.groups = t3.groups || [];
                        const s = (0, n.findEntryByID)(t3.groups, r3);
                        if (!s) throw new Error(`Entry not found for ID: ${r3}`);
                        s.properties = s.properties || {};
                        const a = s.properties[o];
                        if (!delete s.properties[o]) throw new Error(`Failed deleting property: ${o}`);
                        s.history = s.history || [], s.history.push((0, n.generateEntryLegacyHistoryItem)(o, i.EntryPropertyType.Property, a, null));
                    }, e2.executeDeleteGroup = function(t3, e3, r3) {
                        t3.groups = t3.groups || [];
                        const { group: i2 , index: o  } = (0, n.findGroupContainingGroupID)(t3, r3);
                        if (!i2) throw new Error(`Invalid group ID: ${r3}`);
                        i2.groups.splice(o, 1);
                    }, e2.executeDeleteGroupAttribute = function(t3, e3, r3, i2) {
                        t3.groups = t3.groups || [];
                        const o = (0, n.findGroupByID)(t3.groups, r3);
                        if (!o) throw new Error(`Group not found for ID: ${r3}`);
                        if (o.attributes = o.attributes || {}, !delete o.attributes[i2]) throw new Error(`Failed deleting attribute: ${i2}`);
                    }, e2.executeFormat = function(t3, e3, r3) {
                        if (!e3.shareID) {
                            if (t3.format) throw new Error("Format already set");
                            t3.format = r3;
                        }
                    }, e2.executeMoveEntry = function(t3, e3, r3, i2) {
                        t3.groups = t3.groups || [];
                        const { group: o , index: s  } = (0, n.findGroupContainingEntryID)(t3.groups, r3);
                        if (!o) throw new Error(`Invalid entry ID: ${r3}`);
                        const a = (0, n.findGroupByID)(t3.groups, i2);
                        if (!a) throw new Error("Invalid group ID");
                        const [u] = o.entries.splice(s, 1);
                        a.entries = a.entries || [], a.entries.push(u), u.parentID = i2;
                    }, e2.executeMoveGroup = function(t3, e3, r3, i2) {
                        t3.groups = t3.groups || [];
                        const { group: o , index: s  } = (0, n.findGroupContainingGroupID)(t3, r3);
                        if (!o) throw new Error(`Invalid group ID: ${r3}`);
                        const a = i2.length === 1 && parseInt(i2, 10) === 0 ? t3 : (0, n.findGroupByID)(t3.groups, i2);
                        if (!a) throw new Error(`Invalid target group ID: ${i2}`);
                        const [u] = o.groups.splice(s, 1);
                        a.groups = a.groups || [], a.groups.push(u), u.parentID = i2;
                    }, e2.executePad = function() {}, e2.executeSetArchiveAttribute = function(t3, e3, r3, n2) {
                        t3.attributes = t3.attributes || {}, t3.attributes[r3] = n2;
                    }, e2.executeSetEntryAttribute = function(t3, e3, r3, o, s) {
                        t3.groups = t3.groups || [];
                        const a = (0, n.findEntryByID)(t3.groups, r3);
                        if (!a) throw new Error(`Entry not found for ID: ${r3}`);
                        a.attributes = a.attributes || {};
                        const u = typeof a.attributes[o] == "string" ? a.attributes[o] : null;
                        a.attributes[o] = s, a.history = a.history || [], a.history.push((0, n.generateEntryLegacyHistoryItem)(o, i.EntryPropertyType.Attribute, u, s));
                    }, e2.executeSetEntryProperty = function(t3, e3, r3, o, s) {
                        t3.groups = t3.groups || [];
                        const a = (0, n.findEntryByID)(t3.groups, r3);
                        if (!a) throw new Error(`Entry not found for ID: ${r3}`);
                        a.properties = a.properties || {};
                        const u = typeof a.properties[o] == "string" ? a.properties[o] : null;
                        a.properties[o] = s, a.history = a.history || [], a.history.push((0, n.generateEntryLegacyHistoryItem)(o, i.EntryPropertyType.Property, u, s));
                    }, e2.executeSetGroupAttribute = function(t3, e3, r3, i2, o) {
                        t3.groups = t3.groups || [];
                        const s = (0, n.findGroupByID)(t3.groups, r3);
                        if (!s) throw new Error(`Group not found for ID: ${r3}`);
                        s.attributes = s.attributes || {}, s.attributes[i2] = o;
                    }, e2.executeTitleGroup = function(t3, e3, r3, i2) {
                        t3.groups = t3.groups || [];
                        const o = (0, n.findGroupByID)(t3.groups, r3);
                        if (!o) throw new Error(`Group not found for ID: ${r3}`);
                        o.title = i2;
                    };
                },
                4479: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.describeVaultDataset = void 0;
                    const n = r2(9446), { Command: i  } = n.InigoCommand;
                    e2.describeVaultDataset = function t3(e3, r3) {
                        const o = typeof e3.format == "string" ? "0" : e3.id, s = o === "0" ? [] : e3.entries || [];
                        var a = [];
                        if (o === "0" && (typeof e3.format == "string" && a.push(n.InigoCommand.create(i.Format).addArgument(e3.format).generateCommand()), e3.id && a.push(n.InigoCommand.create(i.ArchiveID).addArgument(e3.id).generateCommand()), e3.attributes && Object.keys(e3.attributes).forEach(function(t4) {
                            a.push(n.InigoCommand.create(i.SetArchiveAttribute).addArgument(t4).addArgument(e3.attributes[t4]).generateCommand());
                        })), o !== "0") {
                            if (!r3) throw new Error("No parent group ID specified");
                            if (a.push(n.InigoCommand.create(i.CreateGroup).addArgument(r3).addArgument(o).generateCommand()), e3.title && a.push(n.InigoCommand.create(i.SetGroupTitle).addArgument(o).addArgument(e3.title).generateCommand()), e3.attributes) for(var u in e3.attributes)e3.attributes.hasOwnProperty(u) && a.push(n.InigoCommand.create(i.SetGroupAttribute).addArgument(o).addArgument(u).addArgument(e3.attributes[u]).generateCommand());
                            a.push(n.InigoCommand.generatePaddingCommand());
                        }
                        return s.forEach(function(t4) {
                            if (a.push(n.InigoCommand.create(i.CreateEntry).addArgument(o).addArgument(t4.id).generateCommand()), t4.properties && Object.keys(t4.properties).forEach((e5)=>{
                                a.push(n.InigoCommand.create(i.SetEntryProperty).addArgument(t4.id).addArgument(e5).addArgument(t4.properties[e5]).generateCommand());
                            }), t4.attributes) for(var e4 in t4.attributes)t4.attributes.hasOwnProperty(e4) && a.push(n.InigoCommand.create(i.SetEntryAttribute).addArgument(t4.id).addArgument(e4).addArgument(t4.attributes[e4]).generateCommand());
                            a.push(n.InigoCommand.generatePaddingCommand());
                        }), (e3.groups || []).forEach(function(e4) {
                            a = a.concat(t3(e4, o));
                        }), a;
                    };
                },
                9156: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.vaultContentsEncrypted = e2.stripSignature = e2.sign = e2.hasValidSignature = e2.getSignature = e2.getFormat = void 0;
                    const r2 = "b~>buttercup/a";
                    function n(t3) {
                        return t3.indexOf(r2) === 0;
                    }
                    function i(t3) {
                        const e3 = r2.length;
                        return t3.substr(e3, t3.length - e3);
                    }
                    e2.getFormat = function() {
                        return "buttercup/a";
                    }, e2.getSignature = function() {
                        return r2;
                    }, e2.hasValidSignature = n, e2.sign = function(t3) {
                        return n(t3) ? t3 : r2 + t3;
                    }, e2.stripSignature = i, e2.vaultContentsEncrypted = function(t3) {
                        if (typeof t3 == "string" && n(t3)) {
                            const e3 = i(t3);
                            return /["\s\t\n~]/.test(e3) === false;
                        }
                        return false;
                    };
                },
                9446: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.stripDestructiveCommands = e2.historyStringToArray = e2.historyArrayToString = e2.getAllGroups = e2.getAllEntries = e2.generateEntryLegacyHistoryItem = e2.findGroupContainingGroupID = e2.findGroupContainingEntryID = e2.findGroupByID = e2.findEntryByID = e2.extractCommandComponents = e2.InigoCommand = e2.COMMAND_MANIFEST = e2.COMMAND_ARGUMENT = void 0;
                    const n = r2(8891), i = r2(7066);
                    e2.COMMAND_ARGUMENT = {
                        ItemID: {
                            test: /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/i,
                            wrap: (t3)=>t3
                            ,
                            encode: false
                        },
                        ItemIDOrRoot: {
                            test: /^([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|0)$/i,
                            wrap: (t3)=>t3
                            ,
                            encode: false
                        },
                        StringKey: {
                            test: /\S+/,
                            wrap: (t3)=>(0, n.encodeStringValue)(t3)
                            ,
                            encode: true
                        },
                        StringValue: {
                            test: /(^[\s\S]+$|^$)/,
                            wrap: (t3)=>(0, n.encodeStringValue)(t3)
                            ,
                            encode: true
                        }
                    };
                    const o = e2.COMMAND_ARGUMENT;
                    e2.COMMAND_MANIFEST = {
                        ArchiveID: {
                            s: "aid",
                            d: false,
                            args: [
                                o.ItemID
                            ]
                        },
                        Comment: {
                            s: "cmm",
                            d: false,
                            args: [
                                o.StringValue
                            ]
                        },
                        CreateEntry: {
                            s: "cen",
                            d: false,
                            args: [
                                o.ItemID,
                                o.ItemID
                            ]
                        },
                        CreateGroup: {
                            s: "cgr",
                            d: false,
                            args: [
                                o.ItemIDOrRoot,
                                o.ItemID
                            ]
                        },
                        DeleteArchiveAttribute: {
                            s: "daa",
                            d: true,
                            args: [
                                o.StringValue
                            ]
                        },
                        DeleteEntry: {
                            s: "den",
                            d: true,
                            args: [
                                o.ItemID
                            ]
                        },
                        DeleteEntryAttribute: {
                            s: "dea",
                            d: true,
                            args: [
                                o.ItemID,
                                o.StringValue
                            ]
                        },
                        DeleteEntryMeta: {
                            s: "dem",
                            d: true,
                            args: [
                                o.ItemID,
                                o.StringValue
                            ]
                        },
                        DeleteEntryProperty: {
                            s: "dep",
                            d: true,
                            args: [
                                o.ItemID,
                                o.StringValue
                            ]
                        },
                        DeleteGroup: {
                            s: "dgr",
                            d: true,
                            args: [
                                o.ItemID
                            ]
                        },
                        DeleteGroupAttribute: {
                            s: "dga",
                            d: true,
                            args: [
                                o.ItemID,
                                o.StringValue
                            ]
                        },
                        Format: {
                            s: "fmt",
                            d: false,
                            args: [
                                o.StringValue
                            ]
                        },
                        MoveEntry: {
                            s: "men",
                            d: false,
                            args: [
                                o.ItemID,
                                o.ItemID
                            ]
                        },
                        MoveGroup: {
                            s: "mgr",
                            d: false,
                            args: [
                                o.ItemID,
                                o.ItemIDOrRoot
                            ]
                        },
                        Pad: {
                            s: "pad",
                            d: false,
                            args: [
                                o.ItemID
                            ]
                        },
                        SetArchiveAttribute: {
                            s: "saa",
                            d: false,
                            args: [
                                o.StringValue,
                                o.StringValue
                            ]
                        },
                        SetEntryAttribute: {
                            s: "sea",
                            d: false,
                            args: [
                                o.ItemID,
                                o.StringValue,
                                o.StringValue
                            ]
                        },
                        SetEntryMeta: {
                            s: "sem",
                            d: false,
                            args: [
                                o.ItemID,
                                o.StringValue,
                                o.StringValue
                            ]
                        },
                        SetEntryProperty: {
                            s: "sep",
                            d: false,
                            args: [
                                o.ItemID,
                                o.StringKey,
                                o.StringValue
                            ]
                        },
                        SetGroupAttribute: {
                            s: "sga",
                            d: false,
                            args: [
                                o.ItemID,
                                o.StringValue,
                                o.StringValue
                            ]
                        },
                        SetGroupTitle: {
                            s: "tgr",
                            d: false,
                            args: [
                                o.ItemID,
                                o.StringValue
                            ]
                        }
                    };
                    const s = "__ESCAPED_QUOTE__", a = "__QUOTEDSTR__";
                    class u {
                        constructor(t3){
                            this._commandKey = t3, this._commandArgs = [];
                        }
                        static create(t3) {
                            return new u(t3);
                        }
                        static generatePaddingCommand() {
                            return u.create(e2.COMMAND_MANIFEST.Pad).addArgument((0, i.generateUUID)()).generateCommand();
                        }
                        addArgument(t3) {
                            const e3 = this._commandArgs.length, r3 = this._commandKey.args, n2 = !(r3.length <= e3) && r3[e3];
                            if (n2 === false) throw new Error(`Failed adding argument for command "${this._commandKey.s}": too many arguments`);
                            if (!n2.test.test(t3)) throw new Error(`Failed adding argument for command "${this._commandKey.s}": argument ${e3} is of invalid format`);
                            return this._commandArgs.push(n2.wrap(t3)), this;
                        }
                        generateCommand() {
                            return [
                                this._commandKey.s
                            ].concat(this._commandArgs).join(" ");
                        }
                    }
                    function c(t3, e3) {
                        for(let r3 = 0, n2 = t3.length; r3 < n2; r3 += 1){
                            if (e3(t3[r3]) === true) return t3[r3];
                            if (t3[r3].groups) {
                                const n3 = c(t3[r3].groups, e3);
                                if (n3) return n3;
                            }
                        }
                        return null;
                    }
                    e2.InigoCommand = u, u.Command = e2.COMMAND_MANIFEST, e2.extractCommandComponents = function(t3) {
                        const e3 = /("[^"]*")/, r3 = [];
                        let n2, i2 = t3.replace(/\\\"/g, s);
                        for(; n2 = e3.exec(i2);){
                            const [t4] = n2;
                            i2 = i2.substr(0, n2.index) + a + i2.substr(n2.index + t4.length), r3.push(t4.substring(1, t4.length - 1));
                        }
                        return i2.split(" ").map((t4)=>{
                            let e4 = t4.trim();
                            return e4 === a && (e4 = r3.shift()), e4 = e4.replace(new RegExp(s, "g"), '"'), e4;
                        });
                    }, e2.findEntryByID = function t3(e3, r3) {
                        for(let n2 = 0, i2 = e3.length; n2 < i2; n2 += 1){
                            const i3 = e3[n2];
                            if (i3.entries) {
                                for(let t4 = 0, e4 = i3.entries.length; t4 < e4; t4 += 1)if (i3.entries[t4].id === r3) return i3.entries[t4];
                            }
                            if (i3.groups) {
                                const e4 = t3(i3.groups, r3);
                                if (e4) return e4;
                            }
                        }
                        return null;
                    }, e2.findGroupByID = function(t3, e3) {
                        return c(t3, function(t4) {
                            return t4.id === e3;
                        });
                    }, e2.findGroupContainingEntryID = function t3(e3, r3) {
                        for(let o2 = 0, s2 = e3.length; o2 < s2; o2 += 1){
                            const s3 = e3[o2];
                            if (s3.entries) {
                                for(var n2 = 0, i2 = s3.entries.length; n2 < i2; n2 += 1)if (s3.entries[n2].id === r3) return {
                                    group: s3,
                                    index: n2
                                };
                            }
                            if (s3.groups) {
                                const e4 = t3(s3.groups, r3);
                                if (e4.group) return e4;
                            }
                        }
                        return {
                            group: null,
                            index: null
                        };
                    }, e2.findGroupContainingGroupID = function t3(e3, r3) {
                        const n2 = e3.groups || [];
                        for(let i2 = 0, o2 = n2.length; i2 < o2; i2 += 1){
                            if (n2[i2].id === r3) return {
                                group: e3,
                                index: i2
                            };
                            const o3 = t3(n2[i2], r3);
                            if (o3.group) return o3;
                        }
                        return {
                            group: null,
                            index: null
                        };
                    }, e2.generateEntryLegacyHistoryItem = function(t3, e3, r3 = null, n2 = null) {
                        return Object.freeze({
                            property: t3,
                            propertyType: e3,
                            originalValue: r3,
                            newValue: n2
                        });
                    }, e2.getAllEntries = function(t3, e3 = null) {
                        const r3 = [], n2 = (t4)=>{
                            e3 !== null && t4.id !== e3 || r3.push(...t4.entries || []), (t4.groups || []).forEach((t5)=>n2(t5)
                            );
                        };
                        return t3.groups.forEach((t4)=>n2(t4)
                        ), r3;
                    }, e2.getAllGroups = function(t3, e3 = null) {
                        const r3 = [], n2 = (t4)=>{
                            (t4.groups || []).forEach((t5)=>{
                                (e3 === null || e3 === "0" && t5.parentID === void 0 || e3 === t5.parentID) && r3.push(t5), n2(t5);
                            });
                        };
                        return n2(t3), r3;
                    }, e2.historyArrayToString = function(t3) {
                        return t3.join("\n");
                    }, e2.historyStringToArray = function(t3) {
                        return t3.split("\n");
                    }, e2.stripDestructiveCommands = function(t3) {
                        const r3 = Object.keys(e2.COMMAND_MANIFEST).map((t4)=>e2.COMMAND_MANIFEST[t4]
                        ).filter((t4)=>t4.d
                        ).map((t4)=>t4.s
                        );
                        return t3.filter((t4)=>{
                            return r3.indexOf((e3 = t4) && e3.length >= 3 ? e3.substr(0, 3) : "") < 0;
                            var e3;
                        });
                    };
                },
                3280: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.valuesDiffer = e2.propertiesDiffer = e2.historiesDiffer = void 0;
                    const n = r2(5138);
                    function i(t3) {
                        return JSON.parse(t3[0]);
                    }
                    function o(t3, e3) {
                        const r3 = [
                            ...new Set([
                                ...Object.keys(t3),
                                ...Object.keys(e3)
                            ])
                        ];
                        return r3.length !== 0 && r3.some((r4)=>s(t3[r4], e3[r4])
                        );
                    }
                    function s(t3, e3) {
                        for (const r4 of [
                            "value",
                            "created",
                            "updated"
                        ])if (t3[r4] !== e3[r4]) return true;
                        if (t3.history.length !== e3.history.length) return true;
                        if (t3.history.length === 0) return false;
                        const r3 = (0, n.sortValueHistory)([
                            ...t3.history
                        ]), i2 = (0, n.sortValueHistory)([
                            ...e3.history
                        ]);
                        for(const t4 in r3)if (r3[t4].value !== i2[t4].value || r3[t4].updated !== i2[t4].updated) return true;
                        return false;
                    }
                    e2.historiesDiffer = function(t3, e3) {
                        const r3 = i(t3), n2 = i(e3);
                        return r3.e.length !== n2.e.length || r3.g.length !== n2.g.length || !!o(r3.a, n2.a) || [
                            [
                                r3,
                                n2
                            ],
                            [
                                n2,
                                r3
                            ]
                        ].some(([t4, e4])=>!!(t4.e.some((t5)=>{
                                const r4 = e4.e.find((e5)=>e5.id === t5.id
                                );
                                return !r4 || t5.g !== r4.g || o(t5.p, r4.p) || o(t5.a, r4.a);
                            }) && t4.e.length > 0) || !!(t4.g.some((t5)=>{
                                const r4 = e4.g.find((e5)=>e5.id === t5.id
                                );
                                return !r4 || t5.g !== r4.g || t5.t !== r4.t || o(t5.a, r4.a);
                            }) && t4.g.length > 0)
                        );
                    }, e2.propertiesDiffer = o, e2.valuesDiffer = s;
                },
                120: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.valuesObjectToKeyValueObject = e2.isFormatBGroup = e2.isFormatBEntry = e2.convertFormatAVault = e2.convertFormatAGroup = e2.convertFormatAEntry = void 0;
                    const n = r2(5138), i = r2(2606), o = r2(9446);
                    function s(t3) {
                        return {
                            id: t3.id,
                            a: u(t3.attributes || {}),
                            p: u(t3.properties || {}),
                            g: t3.parentID
                        };
                    }
                    function a(t3) {
                        return {
                            id: t3.id,
                            a: u(t3.attributes || {}),
                            t: t3.title,
                            g: t3.parentID
                        };
                    }
                    function u(t3) {
                        return Object.keys(t3).reduce((e3, r3)=>Object.assign(e3, {
                                [r3]: (0, n.newRawValue)(t3[r3])
                            })
                        , {});
                    }
                    e2.convertFormatAEntry = s, e2.convertFormatAGroup = a, e2.convertFormatAVault = function(t3) {
                        return {
                            id: t3.id,
                            a: u(t3.attributes || {}),
                            g: (0, o.getAllGroups)(t3).map((t4)=>a(t4)
                            ),
                            e: (0, o.getAllEntries)(t3).map((t4)=>s(t4)
                            ),
                            c: (0, i.getDateString)()
                        };
                    }, e2.isFormatBEntry = function(t3) {
                        return t3.g !== void 0;
                    }, e2.isFormatBGroup = function(t3) {
                        return t3.g !== void 0;
                    }, e2.valuesObjectToKeyValueObject = function(t3) {
                        return Object.keys(t3).reduce((e3, r3)=>t3[r3].deleted ? e3 : Object.assign(e3, {
                                [r3]: t3[r3].value
                            })
                        , {});
                    };
                },
                5138: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.valueToHistoryItem = e2.trimValueHistory = e2.sortValueHistory = e2.newRawValue = e2.mergeValues = e2.cloneValue = e2.MAX_PROPERTY_HISTORY = e2.MAX_ATTRIBUTE_HISTORY = void 0;
                    const n = r2(2606), i = r2(2297);
                    function o(t3) {
                        return t3.sort((t4, e3)=>t4.updated > e3.updated ? -1 : e3.updated > t4.updated ? 1 : 0
                        );
                    }
                    function s(t3, r3) {
                        const n2 = r3 === i.EntryPropertyType.Attribute ? e2.MAX_ATTRIBUTE_HISTORY : e2.MAX_PROPERTY_HISTORY;
                        return o(t3).slice(0, n2);
                    }
                    function a(t3) {
                        return {
                            value: t3.value,
                            updated: t3.updated
                        };
                    }
                    e2.MAX_ATTRIBUTE_HISTORY = 3, e2.MAX_PROPERTY_HISTORY = 5, e2.cloneValue = function(t3) {
                        return {
                            value: t3.value,
                            created: t3.created,
                            updated: t3.updated,
                            history: t3.history.map((t4)=>Object.assign({}, t4)
                            )
                        };
                    }, e2.mergeValues = function(t3, e3, r3) {
                        const n2 = t3.updated > e3.updated || t3.updated === e3.updated ? t3 : e3, i2 = o([
                            a(t3 === n2 ? e3 : t3),
                            ...t3.history,
                            ...e3.history
                        ].filter((t4, e4, r4)=>r4.findIndex((e5)=>e5.value === t4.value && e5.updated === t4.updated
                            ) === e4
                        ));
                        return {
                            value: n2.value,
                            created: n2.created,
                            updated: n2.updated,
                            history: s(i2, r3)
                        };
                    }, e2.newRawValue = function(t3) {
                        const e3 = (0, n.getTimestamp)();
                        return {
                            value: t3,
                            created: e3,
                            updated: e3,
                            history: []
                        };
                    }, e2.sortValueHistory = o, e2.trimValueHistory = s, e2.valueToHistoryItem = a;
                },
                2879: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.mergeRawVaults = void 0;
                    const n = r2(5138), i = r2(2297);
                    function o(t3) {
                        return {
                            id: t3.id,
                            p: Object.assign({}, t3.p),
                            a: Object.assign({}, t3.a),
                            g: t3.g
                        };
                    }
                    function s(t3) {
                        return {
                            id: t3.id,
                            t: t3.t,
                            g: t3.g,
                            a: Object.assign({}, t3.a)
                        };
                    }
                    function a(t3, e3, r3) {
                        return [
                            ...new Set([
                                ...Object.keys(t3),
                                ...Object.keys(e3)
                            ])
                        ].reduce((i2, o2)=>(t3[o2] && !e3[o2] || !t3[o2] && e3[o2] ? i2[o2] = (0, n.cloneValue)(t3[o2] || e3[o2]) : i2[o2] = (0, n.mergeValues)(t3[o2], e3[o2], r3), i2)
                        , {});
                    }
                    e2.mergeRawVaults = function(t3, e3) {
                        const r3 = {
                            id: t3.id,
                            a: a(t3.a, e3.a, i.EntryPropertyType.Attribute),
                            g: [],
                            e: [],
                            c: t3.c
                        }, n2 = t3.g.filter((t4)=>!e3.g.find((e4)=>e4.id === t4.id
                            )
                        ), u = e3.g.filter((e4)=>!t3.g.find((t4)=>t4.id === e4.id
                            )
                        );
                        [
                            ...n2,
                            ...u
                        ].forEach((t4)=>{
                            r3.g.push(s(t4));
                        }), t3.g.forEach((t4)=>{
                            if (n2.indexOf(t4) >= 0) return;
                            const o2 = e3.g.find((e4)=>e4.id === t4.id
                            ), u2 = s(o2);
                            u2.a = a(t4.a, o2.a, i.EntryPropertyType.Attribute), r3.g.push(u2);
                        });
                        const c = t3.e.filter((t4)=>!e3.e.find((e4)=>e4.id === t4.id
                            )
                        ), l = e3.e.filter((e4)=>!t3.e.find((t4)=>t4.id === e4.id
                            )
                        );
                        return [
                            ...c,
                            ...l
                        ].forEach((t4)=>{
                            r3.e.push(o(t4));
                        }), t3.e.forEach((t4)=>{
                            if (c.indexOf(t4) >= 0) return;
                            const n3 = e3.e.find((e4)=>e4.id === t4.id
                            ), s2 = o(n3);
                            s2.p = a(t4.p, n3.p, i.EntryPropertyType.Property), s2.a = a(t4.a, n3.a, i.EntryPropertyType.Attribute), r3.e.push(s2);
                        }), r3;
                    };
                },
                44: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.vaultContentsEncrypted = e2.stripSignature = e2.sign = e2.hasValidSignature = e2.getSignature = void 0;
                    const r2 = "b~>buttercup/b";
                    function n(t3) {
                        return t3.indexOf(r2) === 0;
                    }
                    function i(t3) {
                        const e3 = r2.length;
                        return t3.substr(e3, t3.length - e3);
                    }
                    e2.getSignature = function() {
                        return r2;
                    }, e2.hasValidSignature = n, e2.sign = function(t3) {
                        return n(t3) ? t3 : r2 + t3;
                    }, e2.stripSignature = i, e2.vaultContentsEncrypted = function(t3) {
                        if (typeof t3 == "string" && n(t3)) {
                            const e3 = i(t3);
                            return /["\s\t\n~]/.test(e3) === false;
                        }
                        return false;
                    };
                },
                873: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.setDefaultFormat = e2.getFormatForID = e2.getDefaultFormat = e2.detectFormat = void 0;
                    const i = n(r2(4814)), o = n(r2(2791)), s = r2(44), a = r2(2297), u = i.default;
                    let c = u;
                    e2.detectFormat = function(t3) {
                        return (0, s.hasValidSignature)(t3) ? o.default : i.default;
                    }, e2.getDefaultFormat = function() {
                        return c;
                    }, e2.getFormatForID = function(t3) {
                        return t3 === a.VaultFormatID.B ? o.default : i.default;
                    }, e2.setDefaultFormat = function(t3 = null) {
                        c = t3 || u;
                    };
                },
                9507: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.BaseSearch = void 0;
                    const o = i(r2(5493)), s = i(r2(5852)), a = r2(1300);
                    function u(t3) {
                        const e3 = /^((https?|ftp):\/\/)?([^\/]+)/i.exec(t3);
                        return e3 && e3[3] || "";
                    }
                    e2.BaseSearch = class {
                        constructor(t3, e3, r3 = new s.default(), n2 = a.buildSearcher){
                            this._entries = [], this._fuse = null, this._results = [], this._scores = {}, this._targets = t3, this._entryFetcher = e3, this._memory = r3, this._searcherFactory = n2;
                        }
                        get results() {
                            return this._results;
                        }
                        incrementScore(t3, e3, r3) {
                            return n(this, void 0, void 0, function*() {
                                const n2 = yield this._memory.getValue(`bcup_search_${t3}`);
                                let i2 = {};
                                if (n2) try {
                                    i2 = JSON.parse(n2);
                                } catch (t4) {}
                                const o2 = u(r3);
                                o2 && (i2[e3] = i2[e3] || {}, i2[e3][o2] = i2[e3][o2] ? i2[e3][o2] + 1 : 1, yield this._memory.setValue(`bcup_search_${t3}`, JSON.stringify(i2)));
                            });
                        }
                        prepare() {
                            return n(this, void 0, void 0, function*() {
                                this._entries = [], this._scores = {};
                                for (const t3 of this._targets){
                                    const e3 = yield this._memory.getValue(`bcup_search_${t3.id}`);
                                    if (e3) try {
                                        const r4 = JSON.parse(e3);
                                        this._scores[t3.id] = r4;
                                    } catch (t4) {}
                                    const r3 = yield this._entryFetcher(t3, this._memory);
                                    this._entries.push(...r3);
                                }
                                this._fuse = this._searcherFactory(this._entries);
                            });
                        }
                        searchByTerm(t3) {
                            if (!this._fuse) throw new Error("Searching interface not prepared");
                            return this._results = this._fuse.search(t3).map((t4)=>t4.item
                            ), this._results;
                        }
                        searchByURL(t3) {
                            const e3 = u(t3);
                            if (!e3) return this._results = [], this._results;
                            const r3 = this._entries.reduce((r4, n2)=>{
                                let i2 = 1 / 0;
                                const s2 = n2.urls.reduce((r5, n3)=>{
                                    const s3 = u(n3);
                                    if (!s3) return r5;
                                    if ((a3 = s3) !== (c = e3) && (a3.length > c.length ? a3.indexOf(c) !== a3.length - c.length : c.indexOf(a3) !== c.length - a3.length)) return r5;
                                    var a3, c;
                                    const l = o.default.get(n3, t3);
                                    return l < i2 ? (i2 = l, n3) : r5;
                                }, null);
                                if (!s2) return r4;
                                const a2 = u(s2);
                                return [
                                    ...r4,
                                    {
                                        item: n2,
                                        score: i2,
                                        url: s2,
                                        domainScore: Math.max(n2.domainScores[e3] || 0, n2.domainScores[a2] || 0)
                                    }
                                ];
                            }, []);
                            return this._results = r3.sort((t4, e4)=>t4.domainScore > e4.domainScore ? -1 : e4.domainScore > t4.domainScore || t4.score > e4.score ? 1 : e4.score > t4.score ? -1 : 0
                            ).map((t4)=>t4.item
                            ), this._results;
                        }
                    };
                },
                6073: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.VaultEntrySearch = void 0;
                    const i = r2(9507), o = r2(3265);
                    function s(t3, e3) {
                        return n(this, void 0, void 0, function*() {
                            const r3 = yield e3.getValue(`bcup_search_${t3.id}`);
                            let n2 = {};
                            if (r3) try {
                                const t4 = JSON.parse(r3);
                                n2 = t4;
                            } catch (t43) {}
                            return t3.getAllEntries().filter((t4)=>t4.isInTrash() === false
                            ).map((e4)=>{
                                const r4 = e4.getProperties(), i2 = (0, o.getEntryURLs)(r4, o.EntryURLType.General);
                                return {
                                    id: e4.id,
                                    properties: r4,
                                    entryType: e4.getType(),
                                    urls: i2,
                                    groupID: e4.getGroup().id,
                                    vaultID: t3.id,
                                    domainScores: n2[e4.id] || {}
                                };
                            });
                        });
                    }
                    class a extends i.BaseSearch {
                        constructor(t3, e3, r3){
                            super(t3, s, e3, r3);
                        }
                    }
                    e2.VaultEntrySearch = a;
                },
                5228: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.VaultFacadeEntrySearch = void 0;
                    const i = r2(9507), o = r2(3265), s = r2(2394);
                    function a(t3, e3) {
                        return n(this, void 0, void 0, function*() {
                            const r3 = yield e3.getValue(`bcup_search_${t3.id}`);
                            let n2 = {};
                            if (r3) try {
                                const t4 = JSON.parse(r3);
                                n2 = t4;
                            } catch (t4) {}
                            return t3.entries.reduce((e4, r4)=>{
                                const i2 = (0, s.fieldsToProperties)(r4.fields), a2 = (0, o.getEntryURLs)(i2, o.EntryURLType.General);
                                return e4.push({
                                    id: r4.id,
                                    properties: i2,
                                    entryType: r4.type,
                                    urls: a2,
                                    groupID: r4.parentID,
                                    vaultID: t3.id,
                                    domainScores: n2[r4.id] || {}
                                }), e4;
                            }, []);
                        });
                    }
                    class u extends i.BaseSearch {
                        constructor(t3, e3, r3){
                            super(t3, a, e3, r3);
                        }
                    }
                    e2.VaultFacadeEntrySearch = u;
                },
                6255: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getAllChildEntries = e2.findEntriesByProperty = void 0, e2.findEntriesByProperty = function(t3, e3, r2) {
                        return t3.filter((t4)=>{
                            const n = t4.getProperties(e3), i = Object.keys(n);
                            return i.length > 0 && i.some((t5)=>{
                                const e4 = n[t5];
                                return r2 instanceof RegExp ? r2.test(e4) : e4.indexOf(r2) >= 0;
                            });
                        });
                    }, e2.getAllChildEntries = function(t3, e3) {
                        return e3 === "0" ? [
                            ...t3
                        ] : t3.filter((t4)=>{
                            if (t4.vault.format.getItemParentID(t4._source) === e3) return true;
                            let r2;
                            for(; (r2 = r2 ? r2.getParentGroup() : t4.getGroup()) !== null;)if (r2.id === e3) return true;
                            return false;
                        });
                    };
                },
                2736: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getAllChildGroups = e2.findGroupsByTitle = void 0, e2.findGroupsByTitle = function(t3, e3) {
                        return t3.filter((t4)=>e3 instanceof RegExp ? e3.test(t4.getTitle()) : t4.getTitle().indexOf(e3) >= 0
                        );
                    }, e2.getAllChildGroups = function(t3, e3) {
                        return e3 === "0" ? [
                            ...t3
                        ] : t3.filter((t4)=>{
                            var r2;
                            if ((r2 = t4).vault.format.getItemParentID(r2._source) === e3) return true;
                            let n;
                            for(; (n = n ? n.getParentGroup() : t4.getParentGroup()) !== null;)if (n.id === e3) return true;
                            return false;
                        });
                    };
                },
                1300: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.buildSearcher = void 0;
                    const i = n(r2(4221)), o = [
                        {
                            name: "properties.title",
                            weight: 0.6
                        },
                        {
                            name: "properties.username",
                            weight: 0.25
                        },
                        {
                            name: "urls",
                            weight: 0.15
                        }
                    ];
                    e2.buildSearcher = function(t3, e3 = o) {
                        return new i.default(t3, {
                            includeScore: true,
                            keys: e3,
                            shouldSort: true,
                            threshold: 0.5
                        });
                    };
                },
                2454: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = n(r2(5852));
                    class o extends i.default {
                        constructor(){
                            super(...arguments), this._store = {};
                        }
                        getAllKeys() {
                            return Promise.resolve(Object.keys(this._store));
                        }
                        getValue(t3) {
                            const e3 = this._store.hasOwnProperty(t3) ? this._store[t3] : null;
                            return Promise.resolve(e3);
                        }
                        removeKey(t3) {
                            return this._store[t3] = void 0, delete this._store[t3], Promise.resolve();
                        }
                        setValue(t3, e3) {
                            return this._store[t3] = e3, Promise.resolve();
                        }
                    }
                    e2.default = o;
                },
                5852: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.default = class {
                        getAllKeys() {
                            return Promise.resolve([]);
                        }
                        getValue(t3) {
                            return Promise.resolve(null);
                        }
                        removeKey(t3) {
                            return Promise.resolve();
                        }
                        setValue(t3, e3) {
                            return Promise.resolve();
                        }
                    };
                },
                4745: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getBufferSize = e2.encryptAttachment = e2.decryptAttachment = e2.ATTACHMENT_EXT = void 0;
                    const n = r2(1690), i = r2(5456);
                    e2.ATTACHMENT_EXT = "bcatt", e2.decryptAttachment = function(t3, e3) {
                        const { masterPassword: r3  } = (0, i.getCredentials)(e3.id);
                        return (0, n.getSharedAppEnv)().getProperty("crypto/v2/decryptBuffer")(t3, r3);
                    }, e2.encryptAttachment = function(t3, e3) {
                        const { masterPassword: r3  } = (0, i.getCredentials)(e3.id);
                        return (0, n.getSharedAppEnv)().getProperty("crypto/v2/encryptBuffer")(t3, r3);
                    }, e2.getBufferSize = function(t3) {
                        return t3.byteLength !== void 0 ? t3.byteLength : t3.length;
                    };
                },
                2606: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getTimestamp = e2.getDateString = e2.getDateFromDateString = void 0, e2.getDateFromDateString = function(t3) {
                        return new Date(t3);
                    }, e2.getDateString = function(t3 = new Date()) {
                        return t3.toISOString();
                    }, e2.getTimestamp = function(t3 = new Date()) {
                        return t3.getTime();
                    };
                },
                8891: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.isEncoded = e2.getUniqueID = e2.encodeStringValue = e2.encodeBase64String = e2.decodeStringValue = e2.decodeBase64String = e2.bytesToBase64 = e2.base64ToBytes = e2.ENCODED_STRING_PREFIX = void 0;
                    const n = r2(7066), i = r2(1690), o = /^utf8\+base64:(|[a-zA-Z0-9+\/=]+)$/;
                    function s(t3) {
                        return o.test(t3);
                    }
                    e2.ENCODED_STRING_PREFIX = "utf8+base64:", e2.base64ToBytes = function(t3) {
                        return (0, i.getSharedAppEnv)().getProperty("encoding/v1/base64ToBytes")(t3);
                    }, e2.bytesToBase64 = function(t3) {
                        return (0, i.getSharedAppEnv)().getProperty("encoding/v1/bytesToBase64")(t3);
                    }, e2.decodeBase64String = function(t3) {
                        return (0, i.getSharedAppEnv)().getProperty("encoding/v1/base64ToText")(t3);
                    }, e2.decodeStringValue = function(t3) {
                        if (s(t3) !== true) throw new Error("Cannot decode: provided value is not encoded");
                        const r3 = t3.substr(e2.ENCODED_STRING_PREFIX.length);
                        return (0, i.getSharedAppEnv)().getProperty("encoding/v1/base64ToText")(r3);
                    }, e2.encodeBase64String = function(t3) {
                        return (0, i.getSharedAppEnv)().getProperty("encoding/v1/textToBase64")(t3);
                    }, e2.encodeStringValue = function(t3) {
                        const r3 = (0, i.getSharedAppEnv)().getProperty("encoding/v1/textToBase64");
                        return `${e2.ENCODED_STRING_PREFIX}${r3(t3)}`;
                    }, e2.getUniqueID = function() {
                        return (0, n.generateUUID)();
                    }, e2.isEncoded = s;
                },
                3265: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getEntryURLs = e2.getEntryPath = e2.EntryURLType = void 0;
                    const n = r2(8644);
                    var i;
                    !function(t3) {
                        t3.Any = "any", t3.General = "general", t3.Icon = "icon", t3.Login = "login";
                    }(i = e2.EntryURLType || (e2.EntryURLType = {}));
                    const o = /(^|[a-zA-Z0-9_-]|\b)(ur[li]|UR[LI]|Ur[li])(\b|$|[_-])/, s = /icon[\s_-]*ur[li]/i;
                    e2.getEntryPath = function(t3) {
                        let e3 = null;
                        const r3 = [];
                        do {
                            e3 = e3 ? e3.getParentGroup() : t3.getGroup(), e3 && r3.unshift(e3.id);
                        }while (e3)
                        return r3;
                    }, e2.getEntryURLs = function(t3, e3 = i.Any) {
                        const r3 = Object.keys(t3).filter((t4)=>o.test(t4)
                        ).reduce((e4, r4)=>Object.assign(e4, {
                                [r4]: t3[r4]
                            })
                        , {});
                        if (e3 === i.General || e3 === i.Login) return Object.keys(r3).sort((t4, r4)=>{
                            if (e3 === i.General) {
                                const e4 = /^ur[li]$/i, n2 = e4.test(t4) ? 1 : 0;
                                return (e4.test(r4) ? 1 : 0) - n2;
                            }
                            if (e3 === i.Login) {
                                const e4 = /login/i, n2 = e4.test(t4) ? 1 : 0;
                                return (e4.test(r4) ? 1 : 0) - n2;
                            }
                            return 0;
                        }).map((t4)=>r3[t4]
                        );
                        if (e3 === i.Icon) {
                            const t4 = Object.keys(r3).find((t5)=>s.test(t5)
                            );
                            return t4 ? [
                                r3[t4]
                            ] : [];
                        }
                        return (0, n.objectValues)(r3);
                    };
                },
                8644: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.objectValues = void 0, e2.objectValues = function(t3) {
                        return Object.keys(t3).map((e3)=>t3[e3]
                        );
                    };
                },
                4600: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.removeSharePrefix = e2.prependSharePrefix = e2.moveGroupBetweenVaults = e2.mergeHistories = void 0;
                    const i = n(r2(3552)), o = /^\$[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}\s/;
                    e2.mergeHistories = function(t3, e3) {
                        return [];
                    }, e2.moveGroupBetweenVaults = function(t3, e3) {
                        (e3 instanceof i.default ? e3 : e3.vault).format.cloneGroup(t3._source, e3 instanceof i.default ? "0" : e3.id), t3.delete(true);
                    }, e2.prependSharePrefix = function(t3, e3) {
                        return t3.map((t4)=>o.test(t4) ? t4 : `$${e3} ${t4}`
                        );
                    }, e2.removeSharePrefix = function(t3) {
                        return t3.map((t4)=>o.test(t4) ? t4.replace(o, "") : t4
                        );
                    };
                },
                7066: (t2, e2, r2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.generateUUID = void 0;
                    const n = r2(1690);
                    e2.generateUUID = function() {
                        return (0, n.getSharedAppEnv)().getProperty("rng/v1/uuid")();
                    };
                },
                5647: (t2, e2)=>{
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.storeSourceOfflineCopy = e2.sourceHasOfflineCopy = e2.getSourceOfflineArchive = void 0;
                    const r2 = "bcup_archivecache_";
                    function n(t3, e3) {
                        const n2 = `${r2}${e3}`;
                        return t3.getValue(n2);
                    }
                    e2.getSourceOfflineArchive = n, e2.sourceHasOfflineCopy = function(t3, e3) {
                        return n(t3, e3).then((t4)=>!!t4 && t4.length > 0
                        );
                    }, e2.storeSourceOfflineCopy = function(t3, e3, n2) {
                        const i = `${r2}${e3}`;
                        return t3.setValue(i, n2);
                    };
                },
                2297: (t2, e2)=>{
                    var r2, n, i, o, s, a, u;
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.VaultSourceStatus = e2.VaultPermission = e2.VaultFormatID = e2.EntryType = e2.EntryPropertyValueType = e2.EntryPropertyType = e2.EntryChangeType = void 0, (u = e2.EntryChangeType || (e2.EntryChangeType = {})).Created = "created", u.Modified = "modified", u.Deleted = "deleted", (a = e2.EntryPropertyType || (e2.EntryPropertyType = {})).Attribute = "attribute", a.Property = "property", (s = e2.EntryPropertyValueType || (e2.EntryPropertyValueType = {})).Note = "note", s.OTP = "otp", s.Password = "password", s.Text = "text", (o = e2.EntryType || (e2.EntryType = {})).CreditCard = "credit_card", o.Login = "login", o.Note = "note", o.SSHKey = "ssh_key", o.Website = "website", (i = e2.VaultFormatID || (e2.VaultFormatID = {})).A = "a", i.B = "b", (n = e2.VaultPermission || (e2.VaultPermission = {})).Manage = "archive/member/manage", n.Read = "archive/member/read", n.Write = "archive/member/write", (r2 = e2.VaultSourceStatus || (e2.VaultSourceStatus = {})).Locked = "locked", r2.Pending = "pending", r2.Unlocked = "unlocked";
                },
                2950: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const i = r2(3955), o = n(r2(9174)), s = r2(5456), a = r2(1436);
                    class u extends o.default {
                        constructor(t3){
                            super(t3);
                            const { data: e3  } = (0, s.getCredentials)(t3.id), { datasource: r3  } = e3, { path: n2 , token: o2  } = r3;
                            this._path = n2, this._token = o2, this.client = (0, a.buildClient)(o2), this.type = "localfile", (0, i.fireInstantiationHandlers)("localfile", this);
                        }
                        get path() {
                            return this._path;
                        }
                        get token() {
                            return this._token;
                        }
                        load(t3) {
                            return new Promise((t4, e3)=>{
                                this.client.readFile(this.path, (r3, n2)=>{
                                    if (r3) return e3(r3);
                                    t4(n2);
                                });
                            }).then((e3)=>(this.setContent(e3), super.load(t3))
                            );
                        }
                        save(t3, e3) {
                            return super.save(t3, e3).then((t4)=>new Promise((e4, r3)=>{
                                    this.client.writeFile(this.path, t4, (n2)=>{
                                        if (n2) return r3(n2);
                                        e4(t4);
                                    });
                                })
                            );
                        }
                        supportsRemoteBypass() {
                            return false;
                        }
                    }
                    e2.default = u, (0, i.registerDatasource)("localfile", u);
                },
                9135: function(t2, e2, r2) {
                    var n = this && this.__awaiter || function(t3, e3, r3, n2) {
                        return new (r3 || (r3 = Promise))(function(i2, o2) {
                            function s2(t4) {
                                try {
                                    u2(n2.next(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function a2(t4) {
                                try {
                                    u2(n2.throw(t4));
                                } catch (t5) {
                                    o2(t5);
                                }
                            }
                            function u2(t4) {
                                var e4;
                                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                                    t5(e4);
                                })).then(s2, a2);
                            }
                            u2((n2 = n2.apply(t3, e3 || [])).next());
                        });
                    }, i = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    });
                    const o = i(r2(9174)), s = r2(3955), a = r2(5456), u = i(r2(9340)), c = "localstorage";
                    class l extends o.default {
                        constructor(t3){
                            super(t3);
                            const { data: e3  } = (0, a.getCredentials)(t3.id), { datasource: r3  } = e3, { property: n2  } = r3;
                            this._property = n2, this._storage = new u.default(), this.type = c, (0, s.fireInstantiationHandlers)(c, this);
                        }
                        load(t3) {
                            const e3 = Object.create(null, {
                                load: {
                                    get: ()=>super.load
                                }
                            });
                            return n(this, void 0, void 0, function*() {
                                const r3 = yield this._storage.getValue("vault");
                                if (!r3) throw new Error("No vault in storage");
                                return this.setContent(r3), e3.load.call(this, t3);
                            });
                        }
                        save(t3, e3) {
                            return super.save(t3, e3).then((t4)=>n(this, void 0, void 0, function*() {
                                    return yield this._storage.setValue("vault", t4), t4;
                                })
                            );
                        }
                        supportsAttachments() {
                            return false;
                        }
                    }
                    e2.default = l, (0, s.registerDatasource)(c, l);
                },
                9340: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.getStorage = void 0;
                    const i = n(r2(5852));
                    function o() {
                        return window.localStorage;
                    }
                    e2.getStorage = o;
                    class s extends i.default {
                        constructor(){
                            super(...arguments), this._storage = o();
                        }
                        get storage() {
                            return this._storage;
                        }
                        getAllKeys() {
                            return Promise.resolve(Object.keys(this.storage));
                        }
                        getValue(t3) {
                            const e3 = this.storage.getItem(t3);
                            return Promise.resolve(e3);
                        }
                        removeKey(t3) {
                            return this.storage.removeItem(t3), Promise.resolve();
                        }
                        setValue(t3, e3) {
                            return this.storage.setItem(t3, e3), Promise.resolve();
                        }
                    }
                    e2.default = s;
                },
                1436: function(t2, e2, r2) {
                    var n = this && this.__importDefault || function(t3) {
                        return t3 && t3.__esModule ? t3 : {
                            default: t3
                        };
                    };
                    Object.defineProperty(e2, "__esModule", {
                        value: true
                    }), e2.initiateConnection = e2.completeConnection = e2.buildClient = void 0;
                    const i = n(r2(4078)), o = r2(1690), s = "http://localhost:12821";
                    e2.buildClient = function(t3) {
                        const e3 = (0, o.getSharedAppEnv)().getProperty("crypto/v1/encryptText"), r3 = (0, o.getSharedAppEnv)().getProperty("crypto/v1/decryptText");
                        return {
                            readdir: (n2, o2)=>{
                                const a = (0, i.default)(s, "/get/directory");
                                e3(n2, t3).then((t4)=>fetch(a, {
                                        method: "POST",
                                        headers: {
                                            "Content-Type": "application/json; charset=utf-8"
                                        },
                                        body: JSON.stringify({
                                            payload: t4
                                        })
                                    })
                                ).then((t4)=>{
                                    if (t4.ok && t4.status === 200) return t4.json();
                                    throw new Error(`Failed reading remote file: ${n2}`);
                                }).then((e4)=>r3(e4.payload, t3)
                                ).then(JSON.parse).then((t4)=>o2(null, t4)
                                ).catch(o2);
                            },
                            readFile: (e4, r4, n2)=>{
                                const a = (0, o.getSharedAppEnv)().getProperty("crypto/v1/encryptText"), u = (0, o.getSharedAppEnv)().getProperty("crypto/v1/decryptText"), c = typeof r4 == "function" ? r4 : n2, l = (0, i.default)(s, "/get/file");
                                a(e4, t3).then((t4)=>fetch(l, {
                                        method: "POST",
                                        headers: {
                                            "Content-Type": "application/json; charset=utf-8"
                                        },
                                        body: JSON.stringify({
                                            payload: t4
                                        })
                                    })
                                ).then((t4)=>{
                                    if (t4.ok && t4.status === 200) return t4.json();
                                    throw new Error(`Failed reading remote file: ${e4}`);
                                }).then((e5)=>u(e5.payload, t3)
                                ).then((t4)=>{
                                    c(null, t4);
                                }).catch(c);
                            },
                            writeFile: (e4, r4, n2, a)=>{
                                const u = (0, o.getSharedAppEnv)().getProperty("crypto/v1/encryptText"), c = typeof n2 == "function" ? n2 : a;
                                if (typeof r4 != "string") throw new Error("Failed writing file: Expected data to be of type string");
                                const l = (0, i.default)(s, "/put/file");
                                u(JSON.stringify({
                                    filename: e4,
                                    contents: r4
                                }), t3).then((t4)=>fetch(l, {
                                        method: "POST",
                                        headers: {
                                            "Content-Type": "application/json; charset=utf-8"
                                        },
                                        body: JSON.stringify({
                                            payload: t4
                                        })
                                    })
                                ).then((t4)=>{
                                    if (!t4.ok || t4.status !== 200) throw new Error(`Failed writing remote file: ${e4}`);
                                    c();
                                }).catch(c);
                            }
                        };
                    }, e2.completeConnection = function(t3) {
                        if (!t3) return Promise.reject(new Error("Code is required"));
                        const e3 = (0, o.getSharedAppEnv)().getProperty("crypto/v1/decryptText"), r3 = (0, i.default)(s, `/connect/${t3}`);
                        return fetch(r3).then((t4)=>t4.json()
                        ).then((r4)=>{
                            if (r4.status !== "ok") throw new Error("Connection response status was not OK");
                            const { payload: n2  } = r4;
                            return e3(n2, t3);
                        });
                    }, e2.initiateConnection = function() {
                        const t3 = (0, i.default)(s, "/connect");
                        return fetch("http://localhost:12821").then((t4)=>t4.json()
                        ).then((e3)=>{
                            if (e3.status !== "ok") throw new Error("Received non-OK status");
                            if (!e3.ready) throw new Error("Endpoint is not yet ready");
                            return fetch(t3).then((t4)=>t4.json()
                            ).then((t4)=>{
                                if (t4.status !== "ok") throw new Error("Endpoint connection procedure failed");
                            });
                        });
                    };
                },
                4078: function(t2, e2, r2) {
                    var n, i, o;
                    o = function() {
                        function t3(t4) {
                            var e3 = [];
                            if (t4.length === 0) return "";
                            if (typeof t4[0] != "string") throw new TypeError("Url must be a string. Received " + t4[0]);
                            if (t4[0].match(/^[^/:]+:\/*$/) && t4.length > 1) {
                                var r3 = t4.shift();
                                t4[0] = r3 + t4[0];
                            }
                            t4[0].match(/^file:\/\/\//) ? t4[0] = t4[0].replace(/^([^/:]+):\/*/, "$1:///") : t4[0] = t4[0].replace(/^([^/:]+):\/*/, "$1://");
                            for(var n2 = 0; n2 < t4.length; n2++){
                                var i2 = t4[n2];
                                if (typeof i2 != "string") throw new TypeError("Url must be a string. Received " + i2);
                                i2 !== "" && (n2 > 0 && (i2 = i2.replace(/^[\/]+/, "")), i2 = n2 < t4.length - 1 ? i2.replace(/[\/]+$/, "") : i2.replace(/[\/]+$/, "/"), e3.push(i2));
                            }
                            var o2 = e3.join("/"), s = (o2 = o2.replace(/\/(\?|&|#[^!])/g, "$1")).split("?");
                            return s.shift() + (s.length > 0 ? "?" : "") + s.join("&");
                        }
                        return function() {
                            return t3(typeof arguments[0] == "object" ? arguments[0] : [].slice.call(arguments));
                        };
                    }, t2.exports ? t2.exports = o() : (i = typeof (n = o) == "function" ? n.call(e2, r2, e2, t2) : n) === void 0 || (t2.exports = i);
                },
                1614: (t2, e2, r2)=>{
                    var n;
                    r2.r(e2), r2.d(e2, {
                        NIL: ()=>j
                        ,
                        parse: ()=>y
                        ,
                        stringify: ()=>l
                        ,
                        v1: ()=>g
                        ,
                        v3: ()=>P
                        ,
                        v4: ()=>x
                        ,
                        v5: ()=>C
                        ,
                        validate: ()=>a
                        ,
                        version: ()=>D
                    });
                    var i = new Uint8Array(16);
                    function o() {
                        if (!n && !(n = typeof crypto != "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != "undefined" && typeof msCrypto.getRandomValues == "function" && msCrypto.getRandomValues.bind(msCrypto))) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
                        return n(i);
                    }
                    const s = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i, a = function(t3) {
                        return typeof t3 == "string" && s.test(t3);
                    };
                    for(var u = [], c = 0; c < 256; ++c)u.push((c + 256).toString(16).substr(1));
                    const l = function(t3) {
                        var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, r3 = (u[t3[e3 + 0]] + u[t3[e3 + 1]] + u[t3[e3 + 2]] + u[t3[e3 + 3]] + "-" + u[t3[e3 + 4]] + u[t3[e3 + 5]] + "-" + u[t3[e3 + 6]] + u[t3[e3 + 7]] + "-" + u[t3[e3 + 8]] + u[t3[e3 + 9]] + "-" + u[t3[e3 + 10]] + u[t3[e3 + 11]] + u[t3[e3 + 12]] + u[t3[e3 + 13]] + u[t3[e3 + 14]] + u[t3[e3 + 15]]).toLowerCase();
                        if (!a(r3)) throw TypeError("Stringified UUID is invalid");
                        return r3;
                    };
                    var h, f, d = 0, p = 0;
                    const g = function(t3, e3, r3) {
                        var n2 = e3 && r3 || 0, i2 = e3 || new Array(16), s2 = (t3 = t3 || {}).node || h, a2 = t3.clockseq !== void 0 ? t3.clockseq : f;
                        if (s2 == null || a2 == null) {
                            var u2 = t3.random || (t3.rng || o)();
                            s2 == null && (s2 = h = [
                                1 | u2[0],
                                u2[1],
                                u2[2],
                                u2[3],
                                u2[4],
                                u2[5]
                            ]), a2 == null && (a2 = f = 16383 & (u2[6] << 8 | u2[7]));
                        }
                        var c2 = t3.msecs !== void 0 ? t3.msecs : Date.now(), g2 = t3.nsecs !== void 0 ? t3.nsecs : p + 1, y2 = c2 - d + (g2 - p) / 1e4;
                        if (y2 < 0 && t3.clockseq === void 0 && (a2 = a2 + 1 & 16383), (y2 < 0 || c2 > d) && t3.nsecs === void 0 && (g2 = 0), g2 >= 1e4) throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
                        d = c2, p = g2, f = a2;
                        var m2 = (1e4 * (268435455 & (c2 += 122192928e5)) + g2) % 4294967296;
                        i2[n2++] = m2 >>> 24 & 255, i2[n2++] = m2 >>> 16 & 255, i2[n2++] = m2 >>> 8 & 255, i2[n2++] = 255 & m2;
                        var v2 = c2 / 4294967296 * 1e4 & 268435455;
                        i2[n2++] = v2 >>> 8 & 255, i2[n2++] = 255 & v2, i2[n2++] = v2 >>> 24 & 15 | 16, i2[n2++] = v2 >>> 16 & 255, i2[n2++] = a2 >>> 8 | 128, i2[n2++] = 255 & a2;
                        for(var b2 = 0; b2 < 6; ++b2)i2[n2 + b2] = s2[b2];
                        return e3 || l(i2);
                    }, y = function(t3) {
                        if (!a(t3)) throw TypeError("Invalid UUID");
                        var e3, r3 = new Uint8Array(16);
                        return r3[0] = (e3 = parseInt(t3.slice(0, 8), 16)) >>> 24, r3[1] = e3 >>> 16 & 255, r3[2] = e3 >>> 8 & 255, r3[3] = 255 & e3, r3[4] = (e3 = parseInt(t3.slice(9, 13), 16)) >>> 8, r3[5] = 255 & e3, r3[6] = (e3 = parseInt(t3.slice(14, 18), 16)) >>> 8, r3[7] = 255 & e3, r3[8] = (e3 = parseInt(t3.slice(19, 23), 16)) >>> 8, r3[9] = 255 & e3, r3[10] = (e3 = parseInt(t3.slice(24, 36), 16)) / 1099511627776 & 255, r3[11] = e3 / 4294967296 & 255, r3[12] = e3 >>> 24 & 255, r3[13] = e3 >>> 16 & 255, r3[14] = e3 >>> 8 & 255, r3[15] = 255 & e3, r3;
                    };
                    function m(t3, e3, r3) {
                        function n2(t4, n3, i2, o2) {
                            if (typeof t4 == "string" && (t4 = function(t5) {
                                t5 = unescape(encodeURIComponent(t5));
                                for(var e4 = [], r4 = 0; r4 < t5.length; ++r4)e4.push(t5.charCodeAt(r4));
                                return e4;
                            }(t4)), typeof n3 == "string" && (n3 = y(n3)), n3.length !== 16) throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
                            var s2 = new Uint8Array(16 + t4.length);
                            if (s2.set(n3), s2.set(t4, n3.length), (s2 = r3(s2))[6] = 15 & s2[6] | e3, s2[8] = 63 & s2[8] | 128, i2) {
                                o2 = o2 || 0;
                                for(var a2 = 0; a2 < 16; ++a2)i2[o2 + a2] = s2[a2];
                                return i2;
                            }
                            return l(s2);
                        }
                        try {
                            n2.name = t3;
                        } catch (t4) {}
                        return n2.DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8", n2.URL = "6ba7b811-9dad-11d1-80b4-00c04fd430c8", n2;
                    }
                    function v(t3) {
                        return 14 + (t3 + 64 >>> 9 << 4) + 1;
                    }
                    function b(t3, e3) {
                        var r3 = (65535 & t3) + (65535 & e3);
                        return (t3 >> 16) + (e3 >> 16) + (r3 >> 16) << 16 | 65535 & r3;
                    }
                    function _(t3, e3, r3, n2, i2, o2) {
                        return b((s2 = b(b(e3, t3), b(n2, o2))) << (a2 = i2) | s2 >>> 32 - a2, r3);
                        var s2, a2;
                    }
                    function w(t3, e3, r3, n2, i2, o2, s2) {
                        return _(e3 & r3 | ~e3 & n2, t3, e3, i2, o2, s2);
                    }
                    function E(t3, e3, r3, n2, i2, o2, s2) {
                        return _(e3 & n2 | r3 & ~n2, t3, e3, i2, o2, s2);
                    }
                    function A(t3, e3, r3, n2, i2, o2, s2) {
                        return _(e3 ^ r3 ^ n2, t3, e3, i2, o2, s2);
                    }
                    function S(t3, e3, r3, n2, i2, o2, s2) {
                        return _(r3 ^ (e3 | ~n2), t3, e3, i2, o2, s2);
                    }
                    const P = m("v3", 48, function(t3) {
                        if (typeof t3 == "string") {
                            var e3 = unescape(encodeURIComponent(t3));
                            t3 = new Uint8Array(e3.length);
                            for(var r3 = 0; r3 < e3.length; ++r3)t3[r3] = e3.charCodeAt(r3);
                        }
                        return function(t4) {
                            for(var e4 = [], r4 = 32 * t4.length, n2 = "0123456789abcdef", i2 = 0; i2 < r4; i2 += 8){
                                var o2 = t4[i2 >> 5] >>> i2 % 32 & 255, s2 = parseInt(n2.charAt(o2 >>> 4 & 15) + n2.charAt(15 & o2), 16);
                                e4.push(s2);
                            }
                            return e4;
                        }(function(t4, e4) {
                            t4[e4 >> 5] |= 128 << e4 % 32, t4[v(e4) - 1] = e4;
                            for(var r4 = 1732584193, n2 = -271733879, i2 = -1732584194, o2 = 271733878, s2 = 0; s2 < t4.length; s2 += 16){
                                var a2 = r4, u2 = n2, c2 = i2, l2 = o2;
                                r4 = w(r4, n2, i2, o2, t4[s2], 7, -680876936), o2 = w(o2, r4, n2, i2, t4[s2 + 1], 12, -389564586), i2 = w(i2, o2, r4, n2, t4[s2 + 2], 17, 606105819), n2 = w(n2, i2, o2, r4, t4[s2 + 3], 22, -1044525330), r4 = w(r4, n2, i2, o2, t4[s2 + 4], 7, -176418897), o2 = w(o2, r4, n2, i2, t4[s2 + 5], 12, 1200080426), i2 = w(i2, o2, r4, n2, t4[s2 + 6], 17, -1473231341), n2 = w(n2, i2, o2, r4, t4[s2 + 7], 22, -45705983), r4 = w(r4, n2, i2, o2, t4[s2 + 8], 7, 1770035416), o2 = w(o2, r4, n2, i2, t4[s2 + 9], 12, -1958414417), i2 = w(i2, o2, r4, n2, t4[s2 + 10], 17, -42063), n2 = w(n2, i2, o2, r4, t4[s2 + 11], 22, -1990404162), r4 = w(r4, n2, i2, o2, t4[s2 + 12], 7, 1804603682), o2 = w(o2, r4, n2, i2, t4[s2 + 13], 12, -40341101), i2 = w(i2, o2, r4, n2, t4[s2 + 14], 17, -1502002290), r4 = E(r4, n2 = w(n2, i2, o2, r4, t4[s2 + 15], 22, 1236535329), i2, o2, t4[s2 + 1], 5, -165796510), o2 = E(o2, r4, n2, i2, t4[s2 + 6], 9, -1069501632), i2 = E(i2, o2, r4, n2, t4[s2 + 11], 14, 643717713), n2 = E(n2, i2, o2, r4, t4[s2], 20, -373897302), r4 = E(r4, n2, i2, o2, t4[s2 + 5], 5, -701558691), o2 = E(o2, r4, n2, i2, t4[s2 + 10], 9, 38016083), i2 = E(i2, o2, r4, n2, t4[s2 + 15], 14, -660478335), n2 = E(n2, i2, o2, r4, t4[s2 + 4], 20, -405537848), r4 = E(r4, n2, i2, o2, t4[s2 + 9], 5, 568446438), o2 = E(o2, r4, n2, i2, t4[s2 + 14], 9, -1019803690), i2 = E(i2, o2, r4, n2, t4[s2 + 3], 14, -187363961), n2 = E(n2, i2, o2, r4, t4[s2 + 8], 20, 1163531501), r4 = E(r4, n2, i2, o2, t4[s2 + 13], 5, -1444681467), o2 = E(o2, r4, n2, i2, t4[s2 + 2], 9, -51403784), i2 = E(i2, o2, r4, n2, t4[s2 + 7], 14, 1735328473), r4 = A(r4, n2 = E(n2, i2, o2, r4, t4[s2 + 12], 20, -1926607734), i2, o2, t4[s2 + 5], 4, -378558), o2 = A(o2, r4, n2, i2, t4[s2 + 8], 11, -2022574463), i2 = A(i2, o2, r4, n2, t4[s2 + 11], 16, 1839030562), n2 = A(n2, i2, o2, r4, t4[s2 + 14], 23, -35309556), r4 = A(r4, n2, i2, o2, t4[s2 + 1], 4, -1530992060), o2 = A(o2, r4, n2, i2, t4[s2 + 4], 11, 1272893353), i2 = A(i2, o2, r4, n2, t4[s2 + 7], 16, -155497632), n2 = A(n2, i2, o2, r4, t4[s2 + 10], 23, -1094730640), r4 = A(r4, n2, i2, o2, t4[s2 + 13], 4, 681279174), o2 = A(o2, r4, n2, i2, t4[s2], 11, -358537222), i2 = A(i2, o2, r4, n2, t4[s2 + 3], 16, -722521979), n2 = A(n2, i2, o2, r4, t4[s2 + 6], 23, 76029189), r4 = A(r4, n2, i2, o2, t4[s2 + 9], 4, -640364487), o2 = A(o2, r4, n2, i2, t4[s2 + 12], 11, -421815835), i2 = A(i2, o2, r4, n2, t4[s2 + 15], 16, 530742520), r4 = S(r4, n2 = A(n2, i2, o2, r4, t4[s2 + 2], 23, -995338651), i2, o2, t4[s2], 6, -198630844), o2 = S(o2, r4, n2, i2, t4[s2 + 7], 10, 1126891415), i2 = S(i2, o2, r4, n2, t4[s2 + 14], 15, -1416354905), n2 = S(n2, i2, o2, r4, t4[s2 + 5], 21, -57434055), r4 = S(r4, n2, i2, o2, t4[s2 + 12], 6, 1700485571), o2 = S(o2, r4, n2, i2, t4[s2 + 3], 10, -1894986606), i2 = S(i2, o2, r4, n2, t4[s2 + 10], 15, -1051523), n2 = S(n2, i2, o2, r4, t4[s2 + 1], 21, -2054922799), r4 = S(r4, n2, i2, o2, t4[s2 + 8], 6, 1873313359), o2 = S(o2, r4, n2, i2, t4[s2 + 15], 10, -30611744), i2 = S(i2, o2, r4, n2, t4[s2 + 6], 15, -1560198380), n2 = S(n2, i2, o2, r4, t4[s2 + 13], 21, 1309151649), r4 = S(r4, n2, i2, o2, t4[s2 + 4], 6, -145523070), o2 = S(o2, r4, n2, i2, t4[s2 + 11], 10, -1120210379), i2 = S(i2, o2, r4, n2, t4[s2 + 2], 15, 718787259), n2 = S(n2, i2, o2, r4, t4[s2 + 9], 21, -343485551), r4 = b(r4, a2), n2 = b(n2, u2), i2 = b(i2, c2), o2 = b(o2, l2);
                            }
                            return [
                                r4,
                                n2,
                                i2,
                                o2
                            ];
                        }(function(t4) {
                            if (t4.length === 0) return [];
                            for(var e4 = 8 * t4.length, r4 = new Uint32Array(v(e4)), n2 = 0; n2 < e4; n2 += 8)r4[n2 >> 5] |= (255 & t4[n2 / 8]) << n2 % 32;
                            return r4;
                        }(t3), 8 * t3.length));
                    }), x = function(t3, e3, r3) {
                        var n2 = (t3 = t3 || {}).random || (t3.rng || o)();
                        if (n2[6] = 15 & n2[6] | 64, n2[8] = 63 & n2[8] | 128, e3) {
                            r3 = r3 || 0;
                            for(var i2 = 0; i2 < 16; ++i2)e3[r3 + i2] = n2[i2];
                            return e3;
                        }
                        return l(n2);
                    };
                    function T(t3, e3, r3, n2) {
                        switch(t3){
                            case 0:
                                return e3 & r3 ^ ~e3 & n2;
                            case 1:
                            case 3:
                                return e3 ^ r3 ^ n2;
                            case 2:
                                return e3 & r3 ^ e3 & n2 ^ r3 & n2;
                        }
                    }
                    function O(t3, e3) {
                        return t3 << e3 | t3 >>> 32 - e3;
                    }
                    const C = m("v5", 80, function(t3) {
                        var e3 = [
                            1518500249,
                            1859775393,
                            2400959708,
                            3395469782
                        ], r3 = [
                            1732584193,
                            4023233417,
                            2562383102,
                            271733878,
                            3285377520
                        ];
                        if (typeof t3 == "string") {
                            var n2 = unescape(encodeURIComponent(t3));
                            t3 = [];
                            for(var i2 = 0; i2 < n2.length; ++i2)t3.push(n2.charCodeAt(i2));
                        } else Array.isArray(t3) || (t3 = Array.prototype.slice.call(t3));
                        t3.push(128);
                        for(var o2 = t3.length / 4 + 2, s2 = Math.ceil(o2 / 16), a2 = new Array(s2), u2 = 0; u2 < s2; ++u2){
                            for(var c2 = new Uint32Array(16), l2 = 0; l2 < 16; ++l2)c2[l2] = t3[64 * u2 + 4 * l2] << 24 | t3[64 * u2 + 4 * l2 + 1] << 16 | t3[64 * u2 + 4 * l2 + 2] << 8 | t3[64 * u2 + 4 * l2 + 3];
                            a2[u2] = c2;
                        }
                        a2[s2 - 1][14] = 8 * (t3.length - 1) / Math.pow(2, 32), a2[s2 - 1][14] = Math.floor(a2[s2 - 1][14]), a2[s2 - 1][15] = 8 * (t3.length - 1) & 4294967295;
                        for(var h2 = 0; h2 < s2; ++h2){
                            for(var f2 = new Uint32Array(80), d2 = 0; d2 < 16; ++d2)f2[d2] = a2[h2][d2];
                            for(var p2 = 16; p2 < 80; ++p2)f2[p2] = O(f2[p2 - 3] ^ f2[p2 - 8] ^ f2[p2 - 14] ^ f2[p2 - 16], 1);
                            for(var g2 = r3[0], y2 = r3[1], m2 = r3[2], v2 = r3[3], b2 = r3[4], _2 = 0; _2 < 80; ++_2){
                                var w2 = Math.floor(_2 / 20), E2 = O(g2, 5) + T(w2, y2, m2, v2) + b2 + e3[w2] + f2[_2] >>> 0;
                                b2 = v2, v2 = m2, m2 = O(y2, 30) >>> 0, y2 = g2, g2 = E2;
                            }
                            r3[0] = r3[0] + g2 >>> 0, r3[1] = r3[1] + y2 >>> 0, r3[2] = r3[2] + m2 >>> 0, r3[3] = r3[3] + v2 >>> 0, r3[4] = r3[4] + b2 >>> 0;
                        }
                        return [
                            r3[0] >> 24 & 255,
                            r3[0] >> 16 & 255,
                            r3[0] >> 8 & 255,
                            255 & r3[0],
                            r3[1] >> 24 & 255,
                            r3[1] >> 16 & 255,
                            r3[1] >> 8 & 255,
                            255 & r3[1],
                            r3[2] >> 24 & 255,
                            r3[2] >> 16 & 255,
                            r3[2] >> 8 & 255,
                            255 & r3[2],
                            r3[3] >> 24 & 255,
                            r3[3] >> 16 & 255,
                            r3[3] >> 8 & 255,
                            255 & r3[3],
                            r3[4] >> 24 & 255,
                            r3[4] >> 16 & 255,
                            r3[4] >> 8 & 255,
                            255 & r3[4]
                        ];
                    }), j = "00000000-0000-0000-0000-000000000000", D = function(t3) {
                        if (!a(t3)) throw TypeError("Invalid UUID");
                        return parseInt(t3.substr(14, 1), 16);
                    };
                },
                9478: (t2, e2, r2)=>{
                    t2.exports = (()=>{
                        var t3 = {
                            5056: (t4, e4, r3)=>{
                                t4.exports = r3(203);
                            },
                            3198: (t4, e4, r3)=>{
                                var n2 = r3(3401), i2 = r3(5888), o = r3(4963), s = r3(8826), a = r3(4466), u = r3(8418), c = r3(6130), l = r3(1824);
                                t4.exports = function(t5) {
                                    return new Promise(function(e5, r4) {
                                        var h = t5.data, f = t5.headers;
                                        n2.isFormData(h) && delete f["Content-Type"];
                                        var d = new XMLHttpRequest();
                                        if (t5.auth) {
                                            var p = t5.auth.username || "", g = t5.auth.password ? unescape(encodeURIComponent(t5.auth.password)) : "";
                                            f.Authorization = "Basic " + btoa(p + ":" + g);
                                        }
                                        var y = a(t5.baseURL, t5.url);
                                        if (d.open(t5.method.toUpperCase(), s(y, t5.params, t5.paramsSerializer), true), d.timeout = t5.timeout, d.onreadystatechange = function() {
                                            if (d && d.readyState === 4 && (d.status !== 0 || d.responseURL && d.responseURL.indexOf("file:") === 0)) {
                                                var n3 = "getAllResponseHeaders" in d ? u(d.getAllResponseHeaders()) : null, o2 = {
                                                    data: t5.responseType && t5.responseType !== "text" ? d.response : d.responseText,
                                                    status: d.status,
                                                    statusText: d.statusText,
                                                    headers: n3,
                                                    config: t5,
                                                    request: d
                                                };
                                                i2(e5, r4, o2), d = null;
                                            }
                                        }, d.onabort = function() {
                                            d && (r4(l("Request aborted", t5, "ECONNABORTED", d)), d = null);
                                        }, d.onerror = function() {
                                            r4(l("Network Error", t5, null, d)), d = null;
                                        }, d.ontimeout = function() {
                                            var e6 = "timeout of " + t5.timeout + "ms exceeded";
                                            t5.timeoutErrorMessage && (e6 = t5.timeoutErrorMessage), r4(l(e6, t5, "ECONNABORTED", d)), d = null;
                                        }, n2.isStandardBrowserEnv()) {
                                            var m = (t5.withCredentials || c(y)) && t5.xsrfCookieName ? o.read(t5.xsrfCookieName) : void 0;
                                            m && (f[t5.xsrfHeaderName] = m);
                                        }
                                        if ("setRequestHeader" in d && n2.forEach(f, function(t6, e6) {
                                            h === void 0 && e6.toLowerCase() === "content-type" ? delete f[e6] : d.setRequestHeader(e6, t6);
                                        }), n2.isUndefined(t5.withCredentials) || (d.withCredentials = !!t5.withCredentials), t5.responseType) try {
                                            d.responseType = t5.responseType;
                                        } catch (e6) {
                                            if (t5.responseType !== "json") throw e6;
                                        }
                                        typeof t5.onDownloadProgress == "function" && d.addEventListener("progress", t5.onDownloadProgress), typeof t5.onUploadProgress == "function" && d.upload && d.upload.addEventListener("progress", t5.onUploadProgress), t5.cancelToken && t5.cancelToken.promise.then(function(t6) {
                                            d && (d.abort(), r4(t6), d = null);
                                        }), h || (h = null), d.send(h);
                                    });
                                };
                            },
                            203: (t4, e4, r3)=>{
                                var n2 = r3(3401), i2 = r3(9366), o = r3(1112), s = r3(3674);
                                function a(t5) {
                                    var e5 = new o(t5), r4 = i2(o.prototype.request, e5);
                                    return n2.extend(r4, o.prototype, e5), n2.extend(r4, e5), r4;
                                }
                                var u = a(r3(3570));
                                u.Axios = o, u.create = function(t5) {
                                    return a(s(u.defaults, t5));
                                }, u.Cancel = r3(4900), u.CancelToken = r3(4078), u.isCancel = r3(1907), u.all = function(t5) {
                                    return Promise.all(t5);
                                }, u.spread = r3(7998), u.isAxiosError = r3(1720), t4.exports = u, t4.exports.default = u;
                            },
                            4900: (t4)=>{
                                function e4(t5) {
                                    this.message = t5;
                                }
                                e4.prototype.toString = function() {
                                    return "Cancel" + (this.message ? ": " + this.message : "");
                                }, e4.prototype.__CANCEL__ = true, t4.exports = e4;
                            },
                            4078: (t4, e4, r3)=>{
                                var n2 = r3(4900);
                                function i2(t5) {
                                    if (typeof t5 != "function") throw new TypeError("executor must be a function.");
                                    var e5;
                                    this.promise = new Promise(function(t6) {
                                        e5 = t6;
                                    });
                                    var r4 = this;
                                    t5(function(t6) {
                                        r4.reason || (r4.reason = new n2(t6), e5(r4.reason));
                                    });
                                }
                                i2.prototype.throwIfRequested = function() {
                                    if (this.reason) throw this.reason;
                                }, i2.source = function() {
                                    var t5;
                                    return {
                                        token: new i2(function(e5) {
                                            t5 = e5;
                                        }),
                                        cancel: t5
                                    };
                                }, t4.exports = i2;
                            },
                            1907: (t4)=>{
                                t4.exports = function(t5) {
                                    return !(!t5 || !t5.__CANCEL__);
                                };
                            },
                            1112: (t4, e4, r3)=>{
                                var n2 = r3(3401), i2 = r3(8826), o = r3(9655), s = r3(4412), a = r3(3674);
                                function u(t5) {
                                    this.defaults = t5, this.interceptors = {
                                        request: new o(),
                                        response: new o()
                                    };
                                }
                                u.prototype.request = function(t5) {
                                    typeof t5 == "string" ? (t5 = arguments[1] || {}).url = arguments[0] : t5 = t5 || {}, (t5 = a(this.defaults, t5)).method ? t5.method = t5.method.toLowerCase() : this.defaults.method ? t5.method = this.defaults.method.toLowerCase() : t5.method = "get";
                                    var e5 = [
                                        s,
                                        void 0
                                    ], r4 = Promise.resolve(t5);
                                    for(this.interceptors.request.forEach(function(t6) {
                                        e5.unshift(t6.fulfilled, t6.rejected);
                                    }), this.interceptors.response.forEach(function(t6) {
                                        e5.push(t6.fulfilled, t6.rejected);
                                    }); e5.length;)r4 = r4.then(e5.shift(), e5.shift());
                                    return r4;
                                }, u.prototype.getUri = function(t5) {
                                    return t5 = a(this.defaults, t5), i2(t5.url, t5.params, t5.paramsSerializer).replace(/^\?/, "");
                                }, n2.forEach([
                                    "delete",
                                    "get",
                                    "head",
                                    "options"
                                ], function(t5) {
                                    u.prototype[t5] = function(e5, r4) {
                                        return this.request(a(r4 || {}, {
                                            method: t5,
                                            url: e5,
                                            data: (r4 || {}).data
                                        }));
                                    };
                                }), n2.forEach([
                                    "post",
                                    "put",
                                    "patch"
                                ], function(t5) {
                                    u.prototype[t5] = function(e5, r4, n3) {
                                        return this.request(a(n3 || {}, {
                                            method: t5,
                                            url: e5,
                                            data: r4
                                        }));
                                    };
                                }), t4.exports = u;
                            },
                            9655: (t4, e4, r3)=>{
                                var n2 = r3(3401);
                                function i2() {
                                    this.handlers = [];
                                }
                                i2.prototype.use = function(t5, e5) {
                                    return this.handlers.push({
                                        fulfilled: t5,
                                        rejected: e5
                                    }), this.handlers.length - 1;
                                }, i2.prototype.eject = function(t5) {
                                    this.handlers[t5] && (this.handlers[t5] = null);
                                }, i2.prototype.forEach = function(t5) {
                                    n2.forEach(this.handlers, function(e5) {
                                        e5 !== null && t5(e5);
                                    });
                                }, t4.exports = i2;
                            },
                            4466: (t4, e4, r3)=>{
                                var n2 = r3(4206), i2 = r3(7955);
                                t4.exports = function(t5, e5) {
                                    return t5 && !n2(e5) ? i2(t5, e5) : e5;
                                };
                            },
                            1824: (t4, e4, r3)=>{
                                var n2 = r3(834);
                                t4.exports = function(t5, e5, r4, i2, o) {
                                    var s = new Error(t5);
                                    return n2(s, e5, r4, i2, o);
                                };
                            },
                            4412: (t4, e4, r3)=>{
                                var n2 = r3(3401), i2 = r3(8092), o = r3(1907), s = r3(3570);
                                function a(t5) {
                                    t5.cancelToken && t5.cancelToken.throwIfRequested();
                                }
                                t4.exports = function(t5) {
                                    return a(t5), t5.headers = t5.headers || {}, t5.data = i2(t5.data, t5.headers, t5.transformRequest), t5.headers = n2.merge(t5.headers.common || {}, t5.headers[t5.method] || {}, t5.headers), n2.forEach([
                                        "delete",
                                        "get",
                                        "head",
                                        "post",
                                        "put",
                                        "patch",
                                        "common"
                                    ], function(e5) {
                                        delete t5.headers[e5];
                                    }), (t5.adapter || s.adapter)(t5).then(function(e5) {
                                        return a(t5), e5.data = i2(e5.data, e5.headers, t5.transformResponse), e5;
                                    }, function(e5) {
                                        return o(e5) || (a(t5), e5 && e5.response && (e5.response.data = i2(e5.response.data, e5.response.headers, t5.transformResponse))), Promise.reject(e5);
                                    });
                                };
                            },
                            834: (t4)=>{
                                t4.exports = function(t5, e4, r3, n2, i2) {
                                    return t5.config = e4, r3 && (t5.code = r3), t5.request = n2, t5.response = i2, t5.isAxiosError = true, t5.toJSON = function() {
                                        return {
                                            message: this.message,
                                            name: this.name,
                                            description: this.description,
                                            number: this.number,
                                            fileName: this.fileName,
                                            lineNumber: this.lineNumber,
                                            columnNumber: this.columnNumber,
                                            stack: this.stack,
                                            config: this.config,
                                            code: this.code
                                        };
                                    }, t5;
                                };
                            },
                            3674: (t4, e4, r3)=>{
                                var n2 = r3(3401);
                                t4.exports = function(t5, e5) {
                                    e5 = e5 || {};
                                    var r4 = {}, i2 = [
                                        "url",
                                        "method",
                                        "data"
                                    ], o = [
                                        "headers",
                                        "auth",
                                        "proxy",
                                        "params"
                                    ], s = [
                                        "baseURL",
                                        "transformRequest",
                                        "transformResponse",
                                        "paramsSerializer",
                                        "timeout",
                                        "timeoutMessage",
                                        "withCredentials",
                                        "adapter",
                                        "responseType",
                                        "xsrfCookieName",
                                        "xsrfHeaderName",
                                        "onUploadProgress",
                                        "onDownloadProgress",
                                        "decompress",
                                        "maxContentLength",
                                        "maxBodyLength",
                                        "maxRedirects",
                                        "transport",
                                        "httpAgent",
                                        "httpsAgent",
                                        "cancelToken",
                                        "socketPath",
                                        "responseEncoding"
                                    ], a = [
                                        "validateStatus"
                                    ];
                                    function u(t6, e6) {
                                        return n2.isPlainObject(t6) && n2.isPlainObject(e6) ? n2.merge(t6, e6) : n2.isPlainObject(e6) ? n2.merge({}, e6) : n2.isArray(e6) ? e6.slice() : e6;
                                    }
                                    function c(i3) {
                                        n2.isUndefined(e5[i3]) ? n2.isUndefined(t5[i3]) || (r4[i3] = u(void 0, t5[i3])) : r4[i3] = u(t5[i3], e5[i3]);
                                    }
                                    n2.forEach(i2, function(t6) {
                                        n2.isUndefined(e5[t6]) || (r4[t6] = u(void 0, e5[t6]));
                                    }), n2.forEach(o, c), n2.forEach(s, function(i3) {
                                        n2.isUndefined(e5[i3]) ? n2.isUndefined(t5[i3]) || (r4[i3] = u(void 0, t5[i3])) : r4[i3] = u(void 0, e5[i3]);
                                    }), n2.forEach(a, function(n3) {
                                        n3 in e5 ? r4[n3] = u(t5[n3], e5[n3]) : n3 in t5 && (r4[n3] = u(void 0, t5[n3]));
                                    });
                                    var l = i2.concat(o).concat(s).concat(a), h = Object.keys(t5).concat(Object.keys(e5)).filter(function(t6) {
                                        return l.indexOf(t6) === -1;
                                    });
                                    return n2.forEach(h, c), r4;
                                };
                            },
                            5888: (t4, e4, r3)=>{
                                var n2 = r3(1824);
                                t4.exports = function(t5, e5, r4) {
                                    var i2 = r4.config.validateStatus;
                                    r4.status && i2 && !i2(r4.status) ? e5(n2("Request failed with status code " + r4.status, r4.config, null, r4.request, r4)) : t5(r4);
                                };
                            },
                            8092: (t4, e4, r3)=>{
                                var n2 = r3(3401);
                                t4.exports = function(t5, e5, r4) {
                                    return n2.forEach(r4, function(r5) {
                                        t5 = r5(t5, e5);
                                    }), t5;
                                };
                            },
                            3570: (t4, e4, r3)=>{
                                var n2 = r3(3401), i2 = r3(5854), o = {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                };
                                function s(t5, e5) {
                                    !n2.isUndefined(t5) && n2.isUndefined(t5["Content-Type"]) && (t5["Content-Type"] = e5);
                                }
                                var a, u = {
                                    adapter: ((typeof XMLHttpRequest != "undefined" || typeof process != "undefined" && Object.prototype.toString.call(process) === "[object process]") && (a = r3(3198)), a),
                                    transformRequest: [
                                        function(t5, e5) {
                                            return i2(e5, "Accept"), i2(e5, "Content-Type"), n2.isFormData(t5) || n2.isArrayBuffer(t5) || n2.isBuffer(t5) || n2.isStream(t5) || n2.isFile(t5) || n2.isBlob(t5) ? t5 : n2.isArrayBufferView(t5) ? t5.buffer : n2.isURLSearchParams(t5) ? (s(e5, "application/x-www-form-urlencoded;charset=utf-8"), t5.toString()) : n2.isObject(t5) ? (s(e5, "application/json;charset=utf-8"), JSON.stringify(t5)) : t5;
                                        }
                                    ],
                                    transformResponse: [
                                        function(t5) {
                                            if (typeof t5 == "string") try {
                                                t5 = JSON.parse(t5);
                                            } catch (t6) {}
                                            return t5;
                                        }
                                    ],
                                    timeout: 0,
                                    xsrfCookieName: "XSRF-TOKEN",
                                    xsrfHeaderName: "X-XSRF-TOKEN",
                                    maxContentLength: -1,
                                    maxBodyLength: -1,
                                    validateStatus: function(t5) {
                                        return t5 >= 200 && t5 < 300;
                                    },
                                    headers: {
                                        common: {
                                            Accept: "application/json, text/plain, */*"
                                        }
                                    }
                                };
                                n2.forEach([
                                    "delete",
                                    "get",
                                    "head"
                                ], function(t5) {
                                    u.headers[t5] = {};
                                }), n2.forEach([
                                    "post",
                                    "put",
                                    "patch"
                                ], function(t5) {
                                    u.headers[t5] = n2.merge(o);
                                }), t4.exports = u;
                            },
                            9366: (t4)=>{
                                t4.exports = function(t5, e4) {
                                    return function() {
                                        for(var r3 = new Array(arguments.length), n2 = 0; n2 < r3.length; n2++)r3[n2] = arguments[n2];
                                        return t5.apply(e4, r3);
                                    };
                                };
                            },
                            8826: (t4, e4, r3)=>{
                                var n2 = r3(3401);
                                function i2(t5) {
                                    return encodeURIComponent(t5).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
                                }
                                t4.exports = function(t5, e5, r4) {
                                    if (!e5) return t5;
                                    var o;
                                    if (r4) o = r4(e5);
                                    else if (n2.isURLSearchParams(e5)) o = e5.toString();
                                    else {
                                        var s = [];
                                        n2.forEach(e5, function(t6, e6) {
                                            t6 != null && (n2.isArray(t6) ? e6 += "[]" : t6 = [
                                                t6
                                            ], n2.forEach(t6, function(t7) {
                                                n2.isDate(t7) ? t7 = t7.toISOString() : n2.isObject(t7) && (t7 = JSON.stringify(t7)), s.push(i2(e6) + "=" + i2(t7));
                                            }));
                                        }), o = s.join("&");
                                    }
                                    if (o) {
                                        var a = t5.indexOf("#");
                                        a !== -1 && (t5 = t5.slice(0, a)), t5 += (t5.indexOf("?") === -1 ? "?" : "&") + o;
                                    }
                                    return t5;
                                };
                            },
                            7955: (t4)=>{
                                t4.exports = function(t5, e4) {
                                    return e4 ? t5.replace(/\/+$/, "") + "/" + e4.replace(/^\/+/, "") : t5;
                                };
                            },
                            4963: (t4, e4, r3)=>{
                                var n2 = r3(3401);
                                t4.exports = n2.isStandardBrowserEnv() ? {
                                    write: function(t5, e5, r4, i2, o, s) {
                                        var a = [];
                                        a.push(t5 + "=" + encodeURIComponent(e5)), n2.isNumber(r4) && a.push("expires=" + new Date(r4).toGMTString()), n2.isString(i2) && a.push("path=" + i2), n2.isString(o) && a.push("domain=" + o), s === true && a.push("secure"), document.cookie = a.join("; ");
                                    },
                                    read: function(t5) {
                                        var e5 = document.cookie.match(new RegExp("(^|;\\s*)(" + t5 + ")=([^;]*)"));
                                        return e5 ? decodeURIComponent(e5[3]) : null;
                                    },
                                    remove: function(t5) {
                                        this.write(t5, "", Date.now() - 864e5);
                                    }
                                } : {
                                    write: function() {},
                                    read: function() {
                                        return null;
                                    },
                                    remove: function() {}
                                };
                            },
                            4206: (t4)=>{
                                t4.exports = function(t5) {
                                    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t5);
                                };
                            },
                            1720: (t4)=>{
                                function e4(t5) {
                                    return (e4 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                t4.exports = function(t5) {
                                    return e4(t5) === "object" && t5.isAxiosError === true;
                                };
                            },
                            6130: (t4, e4, r3)=>{
                                var n2 = r3(3401);
                                t4.exports = n2.isStandardBrowserEnv() ? function() {
                                    var t5, e5 = /(msie|trident)/i.test(navigator.userAgent), r4 = document.createElement("a");
                                    function i2(t6) {
                                        var n3 = t6;
                                        return e5 && (r4.setAttribute("href", n3), n3 = r4.href), r4.setAttribute("href", n3), {
                                            href: r4.href,
                                            protocol: r4.protocol ? r4.protocol.replace(/:$/, "") : "",
                                            host: r4.host,
                                            search: r4.search ? r4.search.replace(/^\?/, "") : "",
                                            hash: r4.hash ? r4.hash.replace(/^#/, "") : "",
                                            hostname: r4.hostname,
                                            port: r4.port,
                                            pathname: r4.pathname.charAt(0) === "/" ? r4.pathname : "/" + r4.pathname
                                        };
                                    }
                                    return t5 = i2(window.location.href), function(e6) {
                                        var r5 = n2.isString(e6) ? i2(e6) : e6;
                                        return r5.protocol === t5.protocol && r5.host === t5.host;
                                    };
                                }() : function() {
                                    return true;
                                };
                            },
                            5854: (t4, e4, r3)=>{
                                var n2 = r3(3401);
                                t4.exports = function(t5, e5) {
                                    n2.forEach(t5, function(r4, n3) {
                                        n3 !== e5 && n3.toUpperCase() === e5.toUpperCase() && (t5[e5] = r4, delete t5[n3]);
                                    });
                                };
                            },
                            8418: (t4, e4, r3)=>{
                                var n2 = r3(3401), i2 = [
                                    "age",
                                    "authorization",
                                    "content-length",
                                    "content-type",
                                    "etag",
                                    "expires",
                                    "from",
                                    "host",
                                    "if-modified-since",
                                    "if-unmodified-since",
                                    "last-modified",
                                    "location",
                                    "max-forwards",
                                    "proxy-authorization",
                                    "referer",
                                    "retry-after",
                                    "user-agent"
                                ];
                                t4.exports = function(t5) {
                                    var e5, r4, o, s = {};
                                    return t5 ? (n2.forEach(t5.split("\n"), function(t6) {
                                        if (o = t6.indexOf(":"), e5 = n2.trim(t6.substr(0, o)).toLowerCase(), r4 = n2.trim(t6.substr(o + 1)), e5) {
                                            if (s[e5] && i2.indexOf(e5) >= 0) return;
                                            s[e5] = e5 === "set-cookie" ? (s[e5] ? s[e5] : []).concat([
                                                r4
                                            ]) : s[e5] ? s[e5] + ", " + r4 : r4;
                                        }
                                    }), s) : s;
                                };
                            },
                            7998: (t4)=>{
                                t4.exports = function(t5) {
                                    return function(e4) {
                                        return t5.apply(null, e4);
                                    };
                                };
                            },
                            3401: (t4, e4, r3)=>{
                                function n2(t5) {
                                    return (n2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                var i2 = r3(9366), o = Object.prototype.toString;
                                function s(t5) {
                                    return o.call(t5) === "[object Array]";
                                }
                                function a(t5) {
                                    return t5 === void 0;
                                }
                                function u(t5) {
                                    return t5 !== null && n2(t5) === "object";
                                }
                                function c(t5) {
                                    if (o.call(t5) !== "[object Object]") return false;
                                    var e5 = Object.getPrototypeOf(t5);
                                    return e5 === null || e5 === Object.prototype;
                                }
                                function l(t5) {
                                    return o.call(t5) === "[object Function]";
                                }
                                function h(t5, e5) {
                                    if (t5 != null) if (n2(t5) !== "object" && (t5 = [
                                        t5
                                    ]), s(t5)) for(var r4 = 0, i3 = t5.length; r4 < i3; r4++)e5.call(null, t5[r4], r4, t5);
                                    else for(var o2 in t5)Object.prototype.hasOwnProperty.call(t5, o2) && e5.call(null, t5[o2], o2, t5);
                                }
                                t4.exports = {
                                    isArray: s,
                                    isArrayBuffer: function(t5) {
                                        return o.call(t5) === "[object ArrayBuffer]";
                                    },
                                    isBuffer: function(t5) {
                                        return t5 !== null && !a(t5) && t5.constructor !== null && !a(t5.constructor) && typeof t5.constructor.isBuffer == "function" && t5.constructor.isBuffer(t5);
                                    },
                                    isFormData: function(t5) {
                                        return typeof FormData != "undefined" && t5 instanceof FormData;
                                    },
                                    isArrayBufferView: function(t5) {
                                        return typeof ArrayBuffer != "undefined" && ArrayBuffer.isView ? ArrayBuffer.isView(t5) : t5 && t5.buffer && t5.buffer instanceof ArrayBuffer;
                                    },
                                    isString: function(t5) {
                                        return typeof t5 == "string";
                                    },
                                    isNumber: function(t5) {
                                        return typeof t5 == "number";
                                    },
                                    isObject: u,
                                    isPlainObject: c,
                                    isUndefined: a,
                                    isDate: function(t5) {
                                        return o.call(t5) === "[object Date]";
                                    },
                                    isFile: function(t5) {
                                        return o.call(t5) === "[object File]";
                                    },
                                    isBlob: function(t5) {
                                        return o.call(t5) === "[object Blob]";
                                    },
                                    isFunction: l,
                                    isStream: function(t5) {
                                        return u(t5) && l(t5.pipe);
                                    },
                                    isURLSearchParams: function(t5) {
                                        return typeof URLSearchParams != "undefined" && t5 instanceof URLSearchParams;
                                    },
                                    isStandardBrowserEnv: function() {
                                        return (typeof navigator == "undefined" || navigator.product !== "ReactNative" && navigator.product !== "NativeScript" && navigator.product !== "NS") && typeof window != "undefined" && typeof document != "undefined";
                                    },
                                    forEach: h,
                                    merge: function t5() {
                                        var e5 = {};
                                        function r4(r5, n4) {
                                            c(e5[n4]) && c(r5) ? e5[n4] = t5(e5[n4], r5) : c(r5) ? e5[n4] = t5({}, r5) : s(r5) ? e5[n4] = r5.slice() : e5[n4] = r5;
                                        }
                                        for(var n3 = 0, i3 = arguments.length; n3 < i3; n3++)h(arguments[n3], r4);
                                        return e5;
                                    },
                                    extend: function(t5, e5, r4) {
                                        return h(e5, function(e6, n3) {
                                            t5[n3] = r4 && typeof e6 == "function" ? i2(e6, r4) : e6;
                                        }), t5;
                                    },
                                    trim: function(t5) {
                                        return t5.replace(/^\s*/, "").replace(/\s*$/, "");
                                    },
                                    stripBOM: function(t5) {
                                        return t5.charCodeAt(0) === 65279 && (t5 = t5.slice(1)), t5;
                                    }
                                };
                            },
                            9584: (t4)=>{
                                function e4(t5, e5, i2) {
                                    t5 instanceof RegExp && (t5 = r3(t5, i2)), e5 instanceof RegExp && (e5 = r3(e5, i2));
                                    var o = n2(t5, e5, i2);
                                    return o && {
                                        start: o[0],
                                        end: o[1],
                                        pre: i2.slice(0, o[0]),
                                        body: i2.slice(o[0] + t5.length, o[1]),
                                        post: i2.slice(o[1] + e5.length)
                                    };
                                }
                                function r3(t5, e5) {
                                    var r4 = e5.match(t5);
                                    return r4 ? r4[0] : null;
                                }
                                function n2(t5, e5, r4) {
                                    var n3, i2, o, s, a, u = r4.indexOf(t5), c = r4.indexOf(e5, u + 1), l = u;
                                    if (u >= 0 && c > 0) {
                                        for(n3 = [], o = r4.length; l >= 0 && !a;)l == u ? (n3.push(l), u = r4.indexOf(t5, l + 1)) : n3.length == 1 ? a = [
                                            n3.pop(),
                                            c
                                        ] : ((i2 = n3.pop()) < o && (o = i2, s = c), c = r4.indexOf(e5, l + 1)), l = u < c && u >= 0 ? u : c;
                                        n3.length && (a = [
                                            o,
                                            s
                                        ]);
                                    }
                                    return a;
                                }
                                t4.exports = e4, e4.range = n2;
                            },
                            9146: function(t4, e4, n2) {
                                var i2;
                                function o(t5) {
                                    return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                t4 = n2.nmd(t4), function(s) {
                                    var a = o(e4) == "object" && e4, u = o(t4) == "object" && t4 && t4.exports == a && t4, c = (r2.g === void 0 ? "undefined" : o(r2.g)) == "object" && r2.g;
                                    c.global !== c && c.window !== c || (s = c);
                                    var l = function(t5) {
                                        this.message = t5;
                                    };
                                    (l.prototype = new Error()).name = "InvalidCharacterError";
                                    var h = function(t5) {
                                        throw new l(t5);
                                    }, f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", d = /[\t\n\f\r ]/g, p = {
                                        encode: function(t5) {
                                            t5 = String(t5), /[^\0-\xFF]/.test(t5) && h("The string to be encoded contains characters outside of the Latin1 range.");
                                            for(var e5, r3, n3, i3, o2 = t5.length % 3, s2 = "", a2 = -1, u2 = t5.length - o2; ++a2 < u2;)e5 = t5.charCodeAt(a2) << 16, r3 = t5.charCodeAt(++a2) << 8, n3 = t5.charCodeAt(++a2), s2 += f.charAt((i3 = e5 + r3 + n3) >> 18 & 63) + f.charAt(i3 >> 12 & 63) + f.charAt(i3 >> 6 & 63) + f.charAt(63 & i3);
                                            return o2 == 2 ? (e5 = t5.charCodeAt(a2) << 8, r3 = t5.charCodeAt(++a2), s2 += f.charAt((i3 = e5 + r3) >> 10) + f.charAt(i3 >> 4 & 63) + f.charAt(i3 << 2 & 63) + "=") : o2 == 1 && (i3 = t5.charCodeAt(a2), s2 += f.charAt(i3 >> 2) + f.charAt(i3 << 4 & 63) + "=="), s2;
                                        },
                                        decode: function(t5) {
                                            var e5 = (t5 = String(t5).replace(d, "")).length;
                                            e5 % 4 == 0 && (e5 = (t5 = t5.replace(/==?$/, "")).length), (e5 % 4 == 1 || /[^+a-zA-Z0-9/]/.test(t5)) && h("Invalid character: the string to be decoded is not correctly encoded.");
                                            for(var r3, n3, i3 = 0, o2 = "", s2 = -1; ++s2 < e5;)n3 = f.indexOf(t5.charAt(s2)), r3 = i3 % 4 ? 64 * r3 + n3 : n3, (i3++) % 4 && (o2 += String.fromCharCode(255 & r3 >> (-2 * i3 & 6)));
                                            return o2;
                                        },
                                        version: "1.0.0"
                                    };
                                    if (o(n2.amdO) == "object" && n2.amdO) (i2 = (function() {
                                        return p;
                                    }).call(e4, n2, e4, t4)) === void 0 || (t4.exports = i2);
                                    else if (a && !a.nodeType) if (u) u.exports = p;
                                    else for(var g in p)p.hasOwnProperty(g) && (a[g] = p[g]);
                                    else s.base64 = p;
                                }(this);
                            },
                            7562: (t4, e4, r3)=>{
                                var n2 = r3(8824), i2 = r3(9584);
                                t4.exports = function(t5) {
                                    return t5 ? (t5.substr(0, 2) === "{}" && (t5 = "\\{\\}" + t5.substr(2)), m(function(t6) {
                                        return t6.split("\\\\").join(o).split("\\{").join(s).split("\\}").join(a).split("\\,").join(u).split("\\.").join(c);
                                    }(t5), true).map(h)) : [];
                                };
                                var o = "\0SLASH" + Math.random() + "\0", s = "\0OPEN" + Math.random() + "\0", a = "\0CLOSE" + Math.random() + "\0", u = "\0COMMA" + Math.random() + "\0", c = "\0PERIOD" + Math.random() + "\0";
                                function l(t5) {
                                    return parseInt(t5, 10) == t5 ? parseInt(t5, 10) : t5.charCodeAt(0);
                                }
                                function h(t5) {
                                    return t5.split(o).join("\\").split(s).join("{").split(a).join("}").split(u).join(",").split(c).join(".");
                                }
                                function f(t5) {
                                    if (!t5) return [
                                        ""
                                    ];
                                    var e5 = [], r4 = i2("{", "}", t5);
                                    if (!r4) return t5.split(",");
                                    var n3 = r4.pre, o2 = r4.body, s2 = r4.post, a2 = n3.split(",");
                                    a2[a2.length - 1] += "{" + o2 + "}";
                                    var u2 = f(s2);
                                    return s2.length && (a2[a2.length - 1] += u2.shift(), a2.push.apply(a2, u2)), e5.push.apply(e5, a2), e5;
                                }
                                function d(t5) {
                                    return "{" + t5 + "}";
                                }
                                function p(t5) {
                                    return /^-?0\d/.test(t5);
                                }
                                function g(t5, e5) {
                                    return t5 <= e5;
                                }
                                function y(t5, e5) {
                                    return t5 >= e5;
                                }
                                function m(t5, e5) {
                                    var r4 = [], o2 = i2("{", "}", t5);
                                    if (!o2 || /\$$/.test(o2.pre)) return [
                                        t5
                                    ];
                                    var s2, u2 = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(o2.body), c2 = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(o2.body), h2 = u2 || c2, v = o2.body.indexOf(",") >= 0;
                                    if (!h2 && !v) return o2.post.match(/,.*\}/) ? m(t5 = o2.pre + "{" + o2.body + a + o2.post) : [
                                        t5
                                    ];
                                    if (h2) s2 = o2.body.split(/\.\./);
                                    else if ((s2 = f(o2.body)).length === 1 && (s2 = m(s2[0], false).map(d)).length === 1) return (w = o2.post.length ? m(o2.post, false) : [
                                        ""
                                    ]).map(function(t6) {
                                        return o2.pre + s2[0] + t6;
                                    });
                                    var b, _ = o2.pre, w = o2.post.length ? m(o2.post, false) : [
                                        ""
                                    ];
                                    if (h2) {
                                        var E = l(s2[0]), A = l(s2[1]), S = Math.max(s2[0].length, s2[1].length), P = s2.length == 3 ? Math.abs(l(s2[2])) : 1, x = g;
                                        A < E && (P *= -1, x = y);
                                        var T = s2.some(p);
                                        b = [];
                                        for(var O = E; x(O, A); O += P){
                                            var C;
                                            if (c2) (C = String.fromCharCode(O)) === "\\" && (C = "");
                                            else if (C = String(O), T) {
                                                var j = S - C.length;
                                                if (j > 0) {
                                                    var D = new Array(j + 1).join("0");
                                                    C = O < 0 ? "-" + D + C.slice(1) : D + C;
                                                }
                                            }
                                            b.push(C);
                                        }
                                    } else b = n2(s2, function(t6) {
                                        return m(t6, false);
                                    });
                                    for(var I = 0; I < b.length; I++)for(var k = 0; k < w.length; k++){
                                        var F = _ + b[I] + w[k];
                                        (!e5 || h2 || F) && r4.push(F);
                                    }
                                    return r4;
                                }
                            },
                            5106: (t4)=>{
                                var e4 = {
                                    utf8: {
                                        stringToBytes: function(t5) {
                                            return e4.bin.stringToBytes(unescape(encodeURIComponent(t5)));
                                        },
                                        bytesToString: function(t5) {
                                            return decodeURIComponent(escape(e4.bin.bytesToString(t5)));
                                        }
                                    },
                                    bin: {
                                        stringToBytes: function(t5) {
                                            for(var e5 = [], r3 = 0; r3 < t5.length; r3++)e5.push(255 & t5.charCodeAt(r3));
                                            return e5;
                                        },
                                        bytesToString: function(t5) {
                                            for(var e5 = [], r3 = 0; r3 < t5.length; r3++)e5.push(String.fromCharCode(t5[r3]));
                                            return e5.join("");
                                        }
                                    }
                                };
                                t4.exports = e4;
                            },
                            8824: (t4)=>{
                                t4.exports = function(t5, r3) {
                                    for(var n2 = [], i2 = 0; i2 < t5.length; i2++){
                                        var o = r3(t5[i2], i2);
                                        e4(o) ? n2.push.apply(n2, o) : n2.push(o);
                                    }
                                    return n2;
                                };
                                var e4 = Array.isArray || function(t5) {
                                    return Object.prototype.toString.call(t5) === "[object Array]";
                                };
                            },
                            3718: (t4)=>{
                                var e4, r3;
                                e4 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", r3 = {
                                    rotl: function(t5, e5) {
                                        return t5 << e5 | t5 >>> 32 - e5;
                                    },
                                    rotr: function(t5, e5) {
                                        return t5 << 32 - e5 | t5 >>> e5;
                                    },
                                    endian: function(t5) {
                                        if (t5.constructor == Number) return 16711935 & r3.rotl(t5, 8) | 4278255360 & r3.rotl(t5, 24);
                                        for(var e5 = 0; e5 < t5.length; e5++)t5[e5] = r3.endian(t5[e5]);
                                        return t5;
                                    },
                                    randomBytes: function(t5) {
                                        for(var e5 = []; t5 > 0; t5--)e5.push(Math.floor(256 * Math.random()));
                                        return e5;
                                    },
                                    bytesToWords: function(t5) {
                                        for(var e5 = [], r4 = 0, n2 = 0; r4 < t5.length; r4++, n2 += 8)e5[n2 >>> 5] |= t5[r4] << 24 - n2 % 32;
                                        return e5;
                                    },
                                    wordsToBytes: function(t5) {
                                        for(var e5 = [], r4 = 0; r4 < 32 * t5.length; r4 += 8)e5.push(t5[r4 >>> 5] >>> 24 - r4 % 32 & 255);
                                        return e5;
                                    },
                                    bytesToHex: function(t5) {
                                        for(var e5 = [], r4 = 0; r4 < t5.length; r4++)e5.push((t5[r4] >>> 4).toString(16)), e5.push((15 & t5[r4]).toString(16));
                                        return e5.join("");
                                    },
                                    hexToBytes: function(t5) {
                                        for(var e5 = [], r4 = 0; r4 < t5.length; r4 += 2)e5.push(parseInt(t5.substr(r4, 2), 16));
                                        return e5;
                                    },
                                    bytesToBase64: function(t5) {
                                        for(var r4 = [], n2 = 0; n2 < t5.length; n2 += 3)for(var i2 = t5[n2] << 16 | t5[n2 + 1] << 8 | t5[n2 + 2], o = 0; o < 4; o++)8 * n2 + 6 * o <= 8 * t5.length ? r4.push(e4.charAt(i2 >>> 6 * (3 - o) & 63)) : r4.push("=");
                                        return r4.join("");
                                    },
                                    base64ToBytes: function(t5) {
                                        t5 = t5.replace(/[^A-Z0-9+\/]/gi, "");
                                        for(var r4 = [], n2 = 0, i2 = 0; n2 < t5.length; i2 = ++n2 % 4)i2 != 0 && r4.push((e4.indexOf(t5.charAt(n2 - 1)) & Math.pow(2, -2 * i2 + 8) - 1) << 2 * i2 | e4.indexOf(t5.charAt(n2)) >>> 6 - 2 * i2);
                                        return r4;
                                    }
                                }, t4.exports = r3;
                            },
                            7412: (t4, e4, r3)=>{
                                function n2(t5) {
                                    return (n2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                var i2 = r3(6410).buildOptions, o = {
                                    attributeNamePrefix: "@_",
                                    attrNodeName: false,
                                    textNodeName: "#text",
                                    ignoreAttributes: true,
                                    cdataTagName: false,
                                    cdataPositionChar: "\\c",
                                    format: false,
                                    indentBy: "  ",
                                    supressEmptyNode: false,
                                    tagValueProcessor: function(t5) {
                                        return t5;
                                    },
                                    attrValueProcessor: function(t5) {
                                        return t5;
                                    }
                                }, s = [
                                    "attributeNamePrefix",
                                    "attrNodeName",
                                    "textNodeName",
                                    "ignoreAttributes",
                                    "cdataTagName",
                                    "cdataPositionChar",
                                    "format",
                                    "indentBy",
                                    "supressEmptyNode",
                                    "tagValueProcessor",
                                    "attrValueProcessor"
                                ];
                                function a(t5) {
                                    this.options = i2(t5, o, s), this.options.ignoreAttributes || this.options.attrNodeName ? this.isAttribute = function() {
                                        return false;
                                    } : (this.attrPrefixLen = this.options.attributeNamePrefix.length, this.isAttribute = g), this.options.cdataTagName ? this.isCDATA = y : this.isCDATA = function() {
                                        return false;
                                    }, this.replaceCDATAstr = u, this.replaceCDATAarr = c, this.options.format ? (this.indentate = p, this.tagEndChar = ">\n", this.newLine = "\n") : (this.indentate = function() {
                                        return "";
                                    }, this.tagEndChar = ">", this.newLine = ""), this.options.supressEmptyNode ? (this.buildTextNode = d, this.buildObjNode = h) : (this.buildTextNode = f, this.buildObjNode = l), this.buildTextValNode = f, this.buildObjectNode = l;
                                }
                                function u(t5, e5) {
                                    return t5 = this.options.tagValueProcessor("" + t5), this.options.cdataPositionChar === "" || t5 === "" ? t5 + "<![CDATA[" + e5 + "]]" + this.tagEndChar : t5.replace(this.options.cdataPositionChar, "<![CDATA[" + e5 + "]]" + this.tagEndChar);
                                }
                                function c(t5, e5) {
                                    if (t5 = this.options.tagValueProcessor("" + t5), this.options.cdataPositionChar === "" || t5 === "") return t5 + "<![CDATA[" + e5.join("]]><![CDATA[") + "]]" + this.tagEndChar;
                                    for(var r4 in e5)t5 = t5.replace(this.options.cdataPositionChar, "<![CDATA[" + e5[r4] + "]]>");
                                    return t5 + this.newLine;
                                }
                                function l(t5, e5, r4, n3) {
                                    return r4 && !t5.includes("<") ? this.indentate(n3) + "<" + e5 + r4 + ">" + t5 + "</" + e5 + this.tagEndChar : this.indentate(n3) + "<" + e5 + r4 + this.tagEndChar + t5 + this.indentate(n3) + "</" + e5 + this.tagEndChar;
                                }
                                function h(t5, e5, r4, n3) {
                                    return t5 !== "" ? this.buildObjectNode(t5, e5, r4, n3) : this.indentate(n3) + "<" + e5 + r4 + "/" + this.tagEndChar;
                                }
                                function f(t5, e5, r4, n3) {
                                    return this.indentate(n3) + "<" + e5 + r4 + ">" + this.options.tagValueProcessor(t5) + "</" + e5 + this.tagEndChar;
                                }
                                function d(t5, e5, r4, n3) {
                                    return t5 !== "" ? this.buildTextValNode(t5, e5, r4, n3) : this.indentate(n3) + "<" + e5 + r4 + "/" + this.tagEndChar;
                                }
                                function p(t5) {
                                    return this.options.indentBy.repeat(t5);
                                }
                                function g(t5) {
                                    return !!t5.startsWith(this.options.attributeNamePrefix) && t5.substr(this.attrPrefixLen);
                                }
                                function y(t5) {
                                    return t5 === this.options.cdataTagName;
                                }
                                a.prototype.parse = function(t5) {
                                    return this.j2x(t5, 0).val;
                                }, a.prototype.j2x = function(t5, e5) {
                                    for(var r4 = "", i3 = "", o2 = Object.keys(t5), s2 = o2.length, a2 = 0; a2 < s2; a2++){
                                        var u2 = o2[a2];
                                        if (t5[u2] === void 0) ;
                                        else if (t5[u2] === null) i3 += this.indentate(e5) + "<" + u2 + "/" + this.tagEndChar;
                                        else if (t5[u2] instanceof Date) i3 += this.buildTextNode(t5[u2], u2, "", e5);
                                        else if (n2(t5[u2]) !== "object") {
                                            var c2 = this.isAttribute(u2);
                                            c2 ? r4 += " " + c2 + '="' + this.options.attrValueProcessor("" + t5[u2]) + '"' : this.isCDATA(u2) ? t5[this.options.textNodeName] ? i3 += this.replaceCDATAstr(t5[this.options.textNodeName], t5[u2]) : i3 += this.replaceCDATAstr("", t5[u2]) : u2 === this.options.textNodeName ? t5[this.options.cdataTagName] || (i3 += this.options.tagValueProcessor("" + t5[u2])) : i3 += this.buildTextNode(t5[u2], u2, "", e5);
                                        } else if (Array.isArray(t5[u2])) if (this.isCDATA(u2)) i3 += this.indentate(e5), t5[this.options.textNodeName] ? i3 += this.replaceCDATAarr(t5[this.options.textNodeName], t5[u2]) : i3 += this.replaceCDATAarr("", t5[u2]);
                                        else for(var l2 = t5[u2].length, h2 = 0; h2 < l2; h2++){
                                            var f2 = t5[u2][h2];
                                            if (f2 === void 0) ;
                                            else if (f2 === null) i3 += this.indentate(e5) + "<" + u2 + "/" + this.tagEndChar;
                                            else if (n2(f2) === "object") {
                                                var d2 = this.j2x(f2, e5 + 1);
                                                i3 += this.buildObjNode(d2.val, u2, d2.attrStr, e5);
                                            } else i3 += this.buildTextNode(f2, u2, "", e5);
                                        }
                                        else if (this.options.attrNodeName && u2 === this.options.attrNodeName) for(var p2 = Object.keys(t5[u2]), g2 = p2.length, y2 = 0; y2 < g2; y2++)r4 += " " + p2[y2] + '="' + this.options.attrValueProcessor("" + t5[u2][p2[y2]]) + '"';
                                        else {
                                            var m = this.j2x(t5[u2], e5 + 1);
                                            i3 += this.buildObjNode(m.val, u2, m.attrStr, e5);
                                        }
                                    }
                                    return {
                                        attrStr: r4,
                                        val: i3
                                    };
                                }, t4.exports = a;
                            },
                            3927: (t4, e4, r3)=>{
                                var n2 = function(t5) {
                                    return String.fromCharCode(t5);
                                }, i2 = {
                                    nilChar: n2(176),
                                    missingChar: n2(201),
                                    nilPremitive: n2(175),
                                    missingPremitive: n2(200),
                                    emptyChar: n2(178),
                                    emptyValue: n2(177),
                                    boundryChar: n2(179),
                                    objStart: n2(198),
                                    arrStart: n2(204),
                                    arrayEnd: n2(185)
                                }, o = [
                                    i2.nilChar,
                                    i2.nilPremitive,
                                    i2.missingChar,
                                    i2.missingPremitive,
                                    i2.boundryChar,
                                    i2.emptyChar,
                                    i2.emptyValue,
                                    i2.arrayEnd,
                                    i2.objStart,
                                    i2.arrStart
                                ], s = function t5(e5, r4, n3) {
                                    if (typeof r4 == "string") return e5 && e5[0] && e5[0].val !== void 0 ? a(e5[0].val) : a(e5);
                                    var o2, s2 = (o2 = e5) === void 0 ? i2.missingChar : o2 === null ? i2.nilChar : !(o2.child && Object.keys(o2.child).length === 0 && (!o2.attrsMap || Object.keys(o2.attrsMap).length === 0)) || i2.emptyChar;
                                    if (s2 === true) {
                                        var c2 = "";
                                        if (Array.isArray(r4)) {
                                            c2 += i2.arrStart;
                                            var l2 = r4[0], h2 = e5.length;
                                            if (typeof l2 == "string") for(var f = 0; f < h2; f++){
                                                var d = a(e5[f].val);
                                                c2 = u(c2, d);
                                            }
                                            else for(var p = 0; p < h2; p++){
                                                var g = t5(e5[p], l2, n3);
                                                c2 = u(c2, g);
                                            }
                                            c2 += i2.arrayEnd;
                                        } else {
                                            c2 += i2.objStart;
                                            var y = Object.keys(r4);
                                            for(var m in Array.isArray(e5) && (e5 = e5[0]), y){
                                                var v, b = y[m];
                                                v = !n3.ignoreAttributes && e5.attrsMap && e5.attrsMap[b] ? t5(e5.attrsMap[b], r4[b], n3) : b === n3.textNodeName ? t5(e5.val, r4[b], n3) : t5(e5.child[b], r4[b], n3), c2 = u(c2, v);
                                            }
                                        }
                                        return c2;
                                    }
                                    return s2;
                                }, a = function(t5) {
                                    switch(t5){
                                        case void 0:
                                            return i2.missingPremitive;
                                        case null:
                                            return i2.nilPremitive;
                                        case "":
                                            return i2.emptyValue;
                                        default:
                                            return t5;
                                    }
                                }, u = function(t5, e5) {
                                    return c(e5[0]) || c(t5[t5.length - 1]) || (t5 += i2.boundryChar), t5 + e5;
                                }, c = function(t5) {
                                    return o.indexOf(t5) !== -1;
                                }, l = r3(4369), h = r3(6410).buildOptions;
                                e4.convert2nimn = function(t5, e5, r4) {
                                    return r4 = h(r4, l.defaultOptions, l.props), s(t5, e5, r4);
                                };
                            },
                            504: (t4, e4, r3)=>{
                                function n2(t5) {
                                    return (n2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                var i2 = r3(6410);
                                e4.convertToJson = function t5(e5, r4, o) {
                                    var s = {};
                                    if ((!e5.child || i2.isEmptyObject(e5.child)) && (!e5.attrsMap || i2.isEmptyObject(e5.attrsMap))) return i2.isExist(e5.val) ? e5.val : "";
                                    if (i2.isExist(e5.val) && (typeof e5.val != "string" || e5.val !== "" && e5.val !== r4.cdataPositionChar)) {
                                        var a = i2.isTagNameInArrayMode(e5.tagname, r4.arrayMode, o);
                                        s[r4.textNodeName] = a ? [
                                            e5.val
                                        ] : e5.val;
                                    }
                                    i2.merge(s, e5.attrsMap, r4.arrayMode);
                                    for(var u = Object.keys(e5.child), c = 0; c < u.length; c++){
                                        var l = u[c];
                                        if (e5.child[l] && e5.child[l].length > 1) for(var h in s[l] = [], e5.child[l])e5.child[l].hasOwnProperty(h) && s[l].push(t5(e5.child[l][h], r4, l));
                                        else {
                                            var f = t5(e5.child[l][0], r4, l), d = r4.arrayMode === true && n2(f) === "object" || i2.isTagNameInArrayMode(l, r4.arrayMode, o);
                                            s[l] = d ? [
                                                f
                                            ] : f;
                                        }
                                    }
                                    return s;
                                };
                            },
                            5651: (t4, e4, r3)=>{
                                var n2 = r3(6410), i2 = r3(6410).buildOptions, o = r3(4369), s = function t5(e5, r4, i3) {
                                    for(var o2, s2 = "{", a = Object.keys(e5.child), u = 0; u < a.length; u++){
                                        var c = a[u];
                                        if (e5.child[c] && e5.child[c].length > 1) {
                                            for(var l in s2 += '"' + c + '" : [ ', e5.child[c])s2 += t5(e5.child[c][l], r4) + " , ";
                                            s2 = s2.substr(0, s2.length - 1) + " ] ";
                                        } else s2 += '"' + c + '" : ' + t5(e5.child[c][0], r4) + " ,";
                                    }
                                    return n2.merge(s2, e5.attrsMap), n2.isEmptyObject(s2) ? n2.isExist(e5.val) ? e5.val : "" : (n2.isExist(e5.val) && (typeof e5.val != "string" || e5.val !== "" && e5.val !== r4.cdataPositionChar) && (s2 += '"' + r4.textNodeName + '" : ' + ((o2 = e5.val) !== true && o2 !== false && isNaN(o2) ? '"' + o2 + '"' : o2)), s2[s2.length - 1] === "," && (s2 = s2.substr(0, s2.length - 2)), s2 + "}");
                                };
                                e4.convertToJsonString = function(t5, e5) {
                                    return (e5 = i2(e5, o.defaultOptions, o.props)).indentBy = e5.indentBy || "", s(t5, e5);
                                };
                            },
                            8819: (t4, e4, r3)=>{
                                var n2 = r3(504), i2 = r3(4369), o = r3(4369), s = r3(6410).buildOptions, a = r3(1135);
                                e4.parse = function(t5, e5, r4) {
                                    if (r4) {
                                        r4 === true && (r4 = {});
                                        var u = a.validate(t5, r4);
                                        if (u !== true) throw Error(u.err.msg);
                                    }
                                    e5 = s(e5, o.defaultOptions, o.props);
                                    var c = i2.getTraversalObj(t5, e5);
                                    return n2.convertToJson(c, e5);
                                }, e4.convertTonimn = r3(3927).convert2nimn, e4.getTraversalObj = i2.getTraversalObj, e4.convertToJson = n2.convertToJson, e4.convertToJsonString = r3(5651).convertToJsonString, e4.validate = a.validate, e4.j2xParser = r3(7412), e4.parseToNimn = function(t5, r4, n3) {
                                    return e4.convertTonimn(e4.getTraversalObj(t5, n3), r4, n3);
                                };
                            },
                            6410: (t4, e4)=>{
                                var r3 = "[:A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*", n2 = new RegExp("^" + r3 + "$");
                                e4.isExist = function(t5) {
                                    return t5 !== void 0;
                                }, e4.isEmptyObject = function(t5) {
                                    return Object.keys(t5).length === 0;
                                }, e4.merge = function(t5, e5, r4) {
                                    if (e5) for(var n3 = Object.keys(e5), i2 = n3.length, o = 0; o < i2; o++)t5[n3[o]] = r4 === "strict" ? [
                                        e5[n3[o]]
                                    ] : e5[n3[o]];
                                }, e4.getValue = function(t5) {
                                    return e4.isExist(t5) ? t5 : "";
                                }, e4.buildOptions = function(t5, e5, r4) {
                                    var n3 = {};
                                    if (!t5) return e5;
                                    for(var i2 = 0; i2 < r4.length; i2++)t5[r4[i2]] !== void 0 ? n3[r4[i2]] = t5[r4[i2]] : n3[r4[i2]] = e5[r4[i2]];
                                    return n3;
                                }, e4.isTagNameInArrayMode = function(t5, e5, r4) {
                                    return e5 !== false && (e5 instanceof RegExp ? e5.test(t5) : typeof e5 == "function" ? !!e5(t5, r4) : e5 === "strict");
                                }, e4.isName = function(t5) {
                                    return !(n2.exec(t5) == null);
                                }, e4.getAllMatches = function(t5, e5) {
                                    for(var r4 = [], n3 = e5.exec(t5); n3;){
                                        for(var i2 = [], o = n3.length, s = 0; s < o; s++)i2.push(n3[s]);
                                        r4.push(i2), n3 = e5.exec(t5);
                                    }
                                    return r4;
                                }, e4.nameRegexp = r3;
                            },
                            1135: (t4, e4, r3)=>{
                                var n2 = r3(6410), i2 = {
                                    allowBooleanAttributes: false
                                }, o = [
                                    "allowBooleanAttributes"
                                ];
                                function s(t5, e5) {
                                    for(var r4 = e5; e5 < t5.length; e5++)if (t5[e5] != "?" && t5[e5] != " ") ;
                                    else {
                                        var n3 = t5.substr(r4, e5 - r4);
                                        if (e5 > 5 && n3 === "xml") return f("InvalidXml", "XML declaration allowed only at the start of the document.", p(t5, e5));
                                        if (t5[e5] == "?" && t5[e5 + 1] == ">") {
                                            e5++;
                                            break;
                                        }
                                    }
                                    return e5;
                                }
                                function a(t5, e5) {
                                    if (t5.length > e5 + 5 && t5[e5 + 1] === "-" && t5[e5 + 2] === "-") {
                                        for(e5 += 3; e5 < t5.length; e5++)if (t5[e5] === "-" && t5[e5 + 1] === "-" && t5[e5 + 2] === ">") {
                                            e5 += 2;
                                            break;
                                        }
                                    } else if (t5.length > e5 + 8 && t5[e5 + 1] === "D" && t5[e5 + 2] === "O" && t5[e5 + 3] === "C" && t5[e5 + 4] === "T" && t5[e5 + 5] === "Y" && t5[e5 + 6] === "P" && t5[e5 + 7] === "E") {
                                        var r4 = 1;
                                        for(e5 += 8; e5 < t5.length; e5++)if (t5[e5] === "<") r4++;
                                        else if (t5[e5] === ">" && --r4 == 0) break;
                                    } else if (t5.length > e5 + 9 && t5[e5 + 1] === "[" && t5[e5 + 2] === "C" && t5[e5 + 3] === "D" && t5[e5 + 4] === "A" && t5[e5 + 5] === "T" && t5[e5 + 6] === "A" && t5[e5 + 7] === "[") {
                                        for(e5 += 8; e5 < t5.length; e5++)if (t5[e5] === "]" && t5[e5 + 1] === "]" && t5[e5 + 2] === ">") {
                                            e5 += 2;
                                            break;
                                        }
                                    }
                                    return e5;
                                }
                                function u(t5, e5) {
                                    for(var r4 = "", n3 = "", i3 = false; e5 < t5.length; e5++){
                                        if (t5[e5] === '"' || t5[e5] === "'") if (n3 === "") n3 = t5[e5];
                                        else {
                                            if (n3 !== t5[e5]) continue;
                                            n3 = "";
                                        }
                                        else if (t5[e5] === ">" && n3 === "") {
                                            i3 = true;
                                            break;
                                        }
                                        r4 += t5[e5];
                                    }
                                    return n3 === "" && {
                                        value: r4,
                                        index: e5,
                                        tagClosed: i3
                                    };
                                }
                                e4.validate = function(t5, e5) {
                                    e5 = n2.buildOptions(e5, i2, o);
                                    var r4, c2 = [], d2 = false, g2 = false;
                                    t5[0] === "\uFEFF" && (t5 = t5.substr(1));
                                    for(var y = 0; y < t5.length; y++)if (t5[y] === "<" && t5[y + 1] === "?") {
                                        if ((y = s(t5, y += 2)).err) return y;
                                    } else {
                                        if (t5[y] !== "<") {
                                            if (t5[y] === " " || t5[y] === "	" || t5[y] === "\n" || t5[y] === "\r") continue;
                                            return f("InvalidChar", "char '" + t5[y] + "' is not expected.", p(t5, y));
                                        }
                                        if (t5[++y] === "!") {
                                            y = a(t5, y);
                                            continue;
                                        }
                                        var m = false;
                                        t5[y] === "/" && (m = true, y++);
                                        for(var v = ""; y < t5.length && t5[y] !== ">" && t5[y] !== " " && t5[y] !== "	" && t5[y] !== "\n" && t5[y] !== "\r"; y++)v += t5[y];
                                        if ((v = v.trim())[v.length - 1] === "/" && (v = v.substring(0, v.length - 1), y--), r4 = v, !n2.isName(r4)) return f("InvalidTag", v.trim().length === 0 ? "There is an unnecessary space between tag name and backward slash '</ ..'." : "Tag '" + v + "' is an invalid name.", p(t5, y));
                                        var b = u(t5, y);
                                        if (b === false) return f("InvalidAttr", "Attributes for '" + v + "' have open quote.", p(t5, y));
                                        var _ = b.value;
                                        if (y = b.index, _[_.length - 1] === "/") {
                                            var w = l(_ = _.substring(0, _.length - 1), e5);
                                            if (w !== true) return f(w.err.code, w.err.msg, p(t5, y - _.length + w.err.line));
                                            d2 = true;
                                        } else if (m) {
                                            if (!b.tagClosed) return f("InvalidTag", "Closing tag '" + v + "' doesn't have proper closing.", p(t5, y));
                                            if (_.trim().length > 0) return f("InvalidTag", "Closing tag '" + v + "' can't have attributes or invalid starting.", p(t5, y));
                                            var E = c2.pop();
                                            if (v !== E) return f("InvalidTag", "Closing tag '" + E + "' is expected inplace of '" + v + "'.", p(t5, y));
                                            c2.length == 0 && (g2 = true);
                                        } else {
                                            var A = l(_, e5);
                                            if (A !== true) return f(A.err.code, A.err.msg, p(t5, y - _.length + A.err.line));
                                            if (g2 === true) return f("InvalidXml", "Multiple possible root nodes found.", p(t5, y));
                                            c2.push(v), d2 = true;
                                        }
                                        for(y++; y < t5.length; y++)if (t5[y] === "<") {
                                            if (t5[y + 1] === "!") {
                                                y = a(t5, ++y);
                                                continue;
                                            }
                                            if (t5[y + 1] !== "?") break;
                                            if ((y = s(t5, ++y)).err) return y;
                                        } else if (t5[y] === "&") {
                                            var S = h(t5, y);
                                            if (S == -1) return f("InvalidChar", "char '&' is not expected.", p(t5, y));
                                            y = S;
                                        }
                                        t5[y] === "<" && y--;
                                    }
                                    return d2 ? !(c2.length > 0) || f("InvalidXml", "Invalid '" + JSON.stringify(c2, null, 4).replace(/\r?\n/g, "") + "' found.", 1) : f("InvalidXml", "Start tag expected.", 1);
                                };
                                var c = new RegExp(`(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['"])(([\\s\\S])*?)\\5)?`, "g");
                                function l(t5, e5) {
                                    for(var r4 = n2.getAllMatches(t5, c), i3 = {}, o2 = 0; o2 < r4.length; o2++){
                                        if (r4[o2][1].length === 0) return f("InvalidAttr", "Attribute '" + r4[o2][2] + "' has no space in starting.", g(t5, r4[o2][0]));
                                        if (r4[o2][3] === void 0 && !e5.allowBooleanAttributes) return f("InvalidAttr", "boolean attribute '" + r4[o2][2] + "' is not allowed.", g(t5, r4[o2][0]));
                                        var s2 = r4[o2][2];
                                        if (!d(s2)) return f("InvalidAttr", "Attribute '" + s2 + "' is an invalid name.", g(t5, r4[o2][0]));
                                        if (i3.hasOwnProperty(s2)) return f("InvalidAttr", "Attribute '" + s2 + "' is repeated.", g(t5, r4[o2][0]));
                                        i3[s2] = 1;
                                    }
                                    return true;
                                }
                                function h(t5, e5) {
                                    if (t5[++e5] === ";") return -1;
                                    if (t5[e5] === "#") return function(t6, e6) {
                                        var r5 = /\d/;
                                        for(t6[e6] === "x" && (e6++, r5 = /[\da-fA-F]/); e6 < t6.length; e6++){
                                            if (t6[e6] === ";") return e6;
                                            if (!t6[e6].match(r5)) break;
                                        }
                                        return -1;
                                    }(t5, ++e5);
                                    for(var r4 = 0; e5 < t5.length; e5++, r4++)if (!(t5[e5].match(/\w/) && r4 < 20)) {
                                        if (t5[e5] === ";") break;
                                        return -1;
                                    }
                                    return e5;
                                }
                                function f(t5, e5, r4) {
                                    return {
                                        err: {
                                            code: t5,
                                            msg: e5,
                                            line: r4
                                        }
                                    };
                                }
                                function d(t5) {
                                    return n2.isName(t5);
                                }
                                function p(t5, e5) {
                                    return t5.substring(0, e5).split(/\r?\n/).length;
                                }
                                function g(t5, e5) {
                                    return t5.indexOf(e5) + e5.length;
                                }
                            },
                            6613: (t4)=>{
                                t4.exports = function(t5, e4, r3) {
                                    this.tagname = t5, this.parent = e4, this.child = {}, this.attrsMap = {}, this.val = r3, this.addChild = function(t6) {
                                        Array.isArray(this.child[t6.tagname]) ? this.child[t6.tagname].push(t6) : this.child[t6.tagname] = [
                                            t6
                                        ];
                                    };
                                };
                            },
                            4369: (t4, e4, r3)=>{
                                var n2 = r3(6410), i2 = r3(6410).buildOptions, o = r3(6613);
                                "<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)".replace(/NAME/g, n2.nameRegexp), !Number.parseInt && window.parseInt && (Number.parseInt = window.parseInt), !Number.parseFloat && window.parseFloat && (Number.parseFloat = window.parseFloat);
                                var s = {
                                    attributeNamePrefix: "@_",
                                    attrNodeName: false,
                                    textNodeName: "#text",
                                    ignoreAttributes: true,
                                    ignoreNameSpace: false,
                                    allowBooleanAttributes: false,
                                    parseNodeValue: true,
                                    parseAttributeValue: false,
                                    arrayMode: false,
                                    trimValues: true,
                                    cdataTagName: false,
                                    cdataPositionChar: "\\c",
                                    tagValueProcessor: function(t5, e5) {
                                        return t5;
                                    },
                                    attrValueProcessor: function(t5, e5) {
                                        return t5;
                                    },
                                    stopNodes: []
                                };
                                e4.defaultOptions = s;
                                var a = [
                                    "attributeNamePrefix",
                                    "attrNodeName",
                                    "textNodeName",
                                    "ignoreAttributes",
                                    "ignoreNameSpace",
                                    "allowBooleanAttributes",
                                    "parseNodeValue",
                                    "parseAttributeValue",
                                    "arrayMode",
                                    "trimValues",
                                    "cdataTagName",
                                    "cdataPositionChar",
                                    "tagValueProcessor",
                                    "attrValueProcessor",
                                    "parseTrueNumberOnly",
                                    "stopNodes"
                                ];
                                function u(t5, e5, r4) {
                                    return e5 && (r4.trimValues && (e5 = e5.trim()), e5 = l(e5 = r4.tagValueProcessor(e5, t5), r4.parseNodeValue, r4.parseTrueNumberOnly)), e5;
                                }
                                function c(t5, e5) {
                                    if (e5.ignoreNameSpace) {
                                        var r4 = t5.split(":"), n3 = t5.charAt(0) === "/" ? "/" : "";
                                        if (r4[0] === "xmlns") return "";
                                        r4.length === 2 && (t5 = n3 + r4[1]);
                                    }
                                    return t5;
                                }
                                function l(t5, e5, r4) {
                                    var i3;
                                    return e5 && typeof t5 == "string" ? (t5.trim() === "" || isNaN(t5) ? i3 = t5 === "true" || t5 !== "false" && t5 : (t5.indexOf("0x") !== -1 ? i3 = Number.parseInt(t5, 16) : t5.indexOf(".") !== -1 ? (i3 = Number.parseFloat(t5), t5 = t5.replace(/\.?0+$/, "")) : i3 = Number.parseInt(t5, 10), r4 && (i3 = String(i3) === t5 ? i3 : t5)), i3) : n2.isExist(t5) ? t5 : "";
                                }
                                e4.props = a;
                                var h = new RegExp(`([^\\s=]+)\\s*(=\\s*(['"])(.*?)\\3)?`, "g");
                                function f(t5, e5) {
                                    if (!e5.ignoreAttributes && typeof t5 == "string") {
                                        t5 = t5.replace(/\r?\n/g, " ");
                                        for(var r4 = n2.getAllMatches(t5, h), i3 = r4.length, o2 = {}, s2 = 0; s2 < i3; s2++){
                                            var a2 = c(r4[s2][1], e5);
                                            a2.length && (r4[s2][4] !== void 0 ? (e5.trimValues && (r4[s2][4] = r4[s2][4].trim()), r4[s2][4] = e5.attrValueProcessor(r4[s2][4], a2), o2[e5.attributeNamePrefix + a2] = l(r4[s2][4], e5.parseAttributeValue, e5.parseTrueNumberOnly)) : e5.allowBooleanAttributes && (o2[e5.attributeNamePrefix + a2] = true));
                                        }
                                        if (!Object.keys(o2).length) return;
                                        if (e5.attrNodeName) {
                                            var u2 = {};
                                            return u2[e5.attrNodeName] = o2, u2;
                                        }
                                        return o2;
                                    }
                                }
                                function d(t5, e5) {
                                    for(var r4, n3 = "", i3 = e5; i3 < t5.length; i3++){
                                        var o2 = t5[i3];
                                        if (r4) o2 === r4 && (r4 = "");
                                        else if (o2 === '"' || o2 === "'") r4 = o2;
                                        else {
                                            if (o2 === ">") return {
                                                data: n3,
                                                index: i3
                                            };
                                            o2 === "	" && (o2 = " ");
                                        }
                                        n3 += o2;
                                    }
                                }
                                function p(t5, e5, r4, n3) {
                                    var i3 = t5.indexOf(e5, r4);
                                    if (i3 === -1) throw new Error(n3);
                                    return i3 + e5.length - 1;
                                }
                                e4.getTraversalObj = function(t5, e5) {
                                    t5 = t5.replace(/\r\n?/g, "\n"), e5 = i2(e5, s, a);
                                    for(var r4 = new o("!xml"), c2 = r4, l2 = "", h2 = 0; h2 < t5.length; h2++)if (t5[h2] === "<") if (t5[h2 + 1] === "/") {
                                        var g = p(t5, ">", h2, "Closing Tag is not closed."), y = t5.substring(h2 + 2, g).trim();
                                        if (e5.ignoreNameSpace) {
                                            var m = y.indexOf(":");
                                            m !== -1 && (y = y.substr(m + 1));
                                        }
                                        c2 && (c2.val ? c2.val = n2.getValue(c2.val) + "" + u(y, l2, e5) : c2.val = u(y, l2, e5)), e5.stopNodes.length && e5.stopNodes.includes(c2.tagname) && (c2.child = [], c2.attrsMap == null && (c2.attrsMap = {}), c2.val = t5.substr(c2.startIndex + 1, h2 - c2.startIndex - 1)), c2 = c2.parent, l2 = "", h2 = g;
                                    } else if (t5[h2 + 1] === "?") h2 = p(t5, "?>", h2, "Pi Tag is not closed.");
                                    else if (t5.substr(h2 + 1, 3) === "!--") h2 = p(t5, "-->", h2, "Comment is not closed.");
                                    else if (t5.substr(h2 + 1, 2) === "!D") {
                                        var v = p(t5, ">", h2, "DOCTYPE is not closed.");
                                        h2 = t5.substring(h2, v).indexOf("[") >= 0 ? t5.indexOf("]>", h2) + 1 : v;
                                    } else if (t5.substr(h2 + 1, 2) === "![") {
                                        var b = p(t5, "]]>", h2, "CDATA is not closed.") - 2, _ = t5.substring(h2 + 9, b);
                                        if (l2 && (c2.val = n2.getValue(c2.val) + "" + u(c2.tagname, l2, e5), l2 = ""), e5.cdataTagName) {
                                            var w = new o(e5.cdataTagName, c2, _);
                                            c2.addChild(w), c2.val = n2.getValue(c2.val) + e5.cdataPositionChar, _ && (w.val = _);
                                        } else c2.val = (c2.val || "") + (_ || "");
                                        h2 = b + 2;
                                    } else {
                                        var E = d(t5, h2 + 1), A = E.data, S = E.index, P = A.indexOf(" "), x = A, T = true;
                                        if (P !== -1 && (x = A.substr(0, P).replace(/\s\s*$/, ""), A = A.substr(P + 1)), e5.ignoreNameSpace) {
                                            var O = x.indexOf(":");
                                            O !== -1 && (T = (x = x.substr(O + 1)) !== E.data.substr(O + 1));
                                        }
                                        if (c2 && l2 && c2.tagname !== "!xml" && (c2.val = n2.getValue(c2.val) + "" + u(c2.tagname, l2, e5)), A.length > 0 && A.lastIndexOf("/") === A.length - 1) {
                                            A = x[x.length - 1] === "/" ? x = x.substr(0, x.length - 1) : A.substr(0, A.length - 1);
                                            var C = new o(x, c2, "");
                                            x !== A && (C.attrsMap = f(A, e5)), c2.addChild(C);
                                        } else {
                                            var j = new o(x, c2);
                                            e5.stopNodes.length && e5.stopNodes.includes(j.tagname) && (j.startIndex = S), x !== A && T && (j.attrsMap = f(A, e5)), c2.addChild(j), c2 = j;
                                        }
                                        l2 = "", h2 = S;
                                    }
                                    else l2 += t5[h2];
                                    return r4;
                                };
                            },
                            2519: (t4)=>{
                                t4.exports = {
                                    sequence: function() {
                                        for(var t5 = arguments.length, e4 = new Array(t5), r3 = 0; r3 < t5; r3++)e4[r3] = arguments[r3];
                                        if (e4.length === 0) throw new Error("Failed creating sequence: No functions provided");
                                        return function() {
                                            for(var t6 = arguments.length, r4 = new Array(t6), n2 = 0; n2 < t6; n2++)r4[n2] = arguments[n2];
                                            for(var i2 = r4, o = this; e4.length > 0;)i2 = [
                                                e4.shift().apply(o, i2)
                                            ];
                                            return i2[0];
                                        };
                                    }
                                };
                            },
                            9254: (t4, e4, r3)=>{
                                function n2(t5, e5) {
                                    (e5 == null || e5 > t5.length) && (e5 = t5.length);
                                    for(var r4 = 0, n3 = new Array(e5); r4 < e5; r4++)n3[r4] = t5[r4];
                                    return n3;
                                }
                                var i2 = r3(2519).sequence, o = "@@HOTPATCHER", s = function() {};
                                function a(t5) {
                                    return {
                                        original: t5,
                                        methods: [
                                            t5
                                        ],
                                        final: false
                                    };
                                }
                                var u = function() {
                                    function t5() {
                                        !function(t6, e6) {
                                            if (!(t6 instanceof e6)) throw new TypeError("Cannot call a class as a function");
                                        }(this, t5), this._configuration = {
                                            registry: {},
                                            getEmptyAction: "null"
                                        }, this.__type__ = o;
                                    }
                                    var e5;
                                    return (e5 = [
                                        {
                                            key: "configuration",
                                            get: function() {
                                                return this._configuration;
                                            }
                                        },
                                        {
                                            key: "getEmptyAction",
                                            get: function() {
                                                return this.configuration.getEmptyAction;
                                            },
                                            set: function(t6) {
                                                this.configuration.getEmptyAction = t6;
                                            }
                                        },
                                        {
                                            key: "control",
                                            value: function(t6) {
                                                var e6 = this, r4 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
                                                if (!t6 || t6.__type__ !== o) throw new Error("Failed taking control of target HotPatcher instance: Invalid type or object");
                                                return Object.keys(t6.configuration.registry).forEach(function(n3) {
                                                    e6.configuration.registry.hasOwnProperty(n3) ? r4 && (e6.configuration.registry[n3] = Object.assign({}, t6.configuration.registry[n3])) : e6.configuration.registry[n3] = Object.assign({}, t6.configuration.registry[n3]);
                                                }), t6._configuration = this.configuration, this;
                                            }
                                        },
                                        {
                                            key: "execute",
                                            value: function(t6) {
                                                for(var e6 = this.get(t6) || s, r4 = arguments.length, n3 = new Array(r4 > 1 ? r4 - 1 : 0), i3 = 1; i3 < r4; i3++)n3[i3 - 1] = arguments[i3];
                                                return e6.apply(void 0, n3);
                                            }
                                        },
                                        {
                                            key: "get",
                                            value: function(t6) {
                                                var e6, r4 = this.configuration.registry[t6];
                                                if (!r4) switch(this.getEmptyAction){
                                                    case "null":
                                                        return null;
                                                    case "throw":
                                                        throw new Error("Failed handling method request: No method provided for override: ".concat(t6));
                                                    default:
                                                        throw new Error("Failed handling request which resulted in an empty method: Invalid empty-action specified: ".concat(this.getEmptyAction));
                                                }
                                                return i2.apply(void 0, function(t7) {
                                                    if (Array.isArray(t7)) return n2(t7);
                                                }(e6 = r4.methods) || function(t7) {
                                                    if (typeof Symbol != "undefined" && t7[Symbol.iterator] != null || t7["@@iterator"] != null) return Array.from(t7);
                                                }(e6) || function(t7, e7) {
                                                    if (t7) {
                                                        if (typeof t7 == "string") return n2(t7, e7);
                                                        var r5 = Object.prototype.toString.call(t7).slice(8, -1);
                                                        return r5 === "Object" && t7.constructor && (r5 = t7.constructor.name), r5 === "Map" || r5 === "Set" ? Array.from(t7) : r5 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? n2(t7, e7) : void 0;
                                                    }
                                                }(e6) || function() {
                                                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                                }());
                                            }
                                        },
                                        {
                                            key: "isPatched",
                                            value: function(t6) {
                                                return !!this.configuration.registry[t6];
                                            }
                                        },
                                        {
                                            key: "patch",
                                            value: function(t6, e6) {
                                                var r4 = (arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}).chain, n3 = r4 !== void 0 && r4;
                                                if (this.configuration.registry[t6] && this.configuration.registry[t6].final) throw new Error("Failed patching '".concat(t6, "': Method marked as being final"));
                                                if (typeof e6 != "function") throw new Error("Failed patching '".concat(t6, "': Provided method is not a function"));
                                                if (n3) this.configuration.registry[t6] ? this.configuration.registry[t6].methods.push(e6) : this.configuration.registry[t6] = a(e6);
                                                else if (this.isPatched(t6)) {
                                                    var i3 = this.configuration.registry[t6].original;
                                                    this.configuration.registry[t6] = Object.assign(a(e6), {
                                                        original: i3
                                                    });
                                                } else this.configuration.registry[t6] = a(e6);
                                                return this;
                                            }
                                        },
                                        {
                                            key: "patchInline",
                                            value: function(t6, e6) {
                                                this.isPatched(t6) || this.patch(t6, e6);
                                                for(var r4 = arguments.length, n3 = new Array(r4 > 2 ? r4 - 2 : 0), i3 = 2; i3 < r4; i3++)n3[i3 - 2] = arguments[i3];
                                                return this.execute.apply(this, [
                                                    t6
                                                ].concat(n3));
                                            }
                                        },
                                        {
                                            key: "plugin",
                                            value: function(t6) {
                                                for(var e6 = this, r4 = arguments.length, n3 = new Array(r4 > 1 ? r4 - 1 : 0), i3 = 1; i3 < r4; i3++)n3[i3 - 1] = arguments[i3];
                                                return n3.forEach(function(r5) {
                                                    e6.patch(t6, r5, {
                                                        chain: true
                                                    });
                                                }), this;
                                            }
                                        },
                                        {
                                            key: "restore",
                                            value: function(t6) {
                                                if (!this.isPatched(t6)) throw new Error("Failed restoring method: No method present for key: ".concat(t6));
                                                if (typeof this.configuration.registry[t6].original != "function") throw new Error("Failed restoring method: Original method not found or of invalid type for key: ".concat(t6));
                                                this.configuration.registry[t6].methods = [
                                                    this.configuration.registry[t6].original
                                                ];
                                            }
                                        },
                                        {
                                            key: "setFinal",
                                            value: function(t6) {
                                                if (!this.configuration.registry.hasOwnProperty(t6)) throw new Error("Failed marking '".concat(t6, "' as final: No method found for key"));
                                                return this.configuration.registry[t6].final = true, this;
                                            }
                                        }
                                    ]) && function(t6, e6) {
                                        for(var r4 = 0; r4 < e6.length; r4++){
                                            var n3 = e6[r4];
                                            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(t6, n3.key, n3);
                                        }
                                    }(t5.prototype, e5), t5;
                                }();
                                t4.exports = u;
                            },
                            163: (t4)=>{
                                function e4(t5) {
                                    return !!t5.constructor && typeof t5.constructor.isBuffer == "function" && t5.constructor.isBuffer(t5);
                                }
                                t4.exports = function(t5) {
                                    return t5 != null && (e4(t5) || function(t6) {
                                        return typeof t6.readFloatLE == "function" && typeof t6.slice == "function" && e4(t6.slice(0, 0));
                                    }(t5) || !!t5._isBuffer);
                                };
                            },
                            6893: (t4, e4)=>{
                                function r3(t5) {
                                    return (e5 = t5, Object.prototype.toString.call(e5)) === "[object Error]" || t5 instanceof Error;
                                    var e5;
                                }
                                Object.defineProperty(e4, "__esModule", {
                                    value: true
                                }), e4.isError = e4.inherit = e4.assertError = void 0, e4.assertError = function(t5) {
                                    if (!r3(t5)) throw new Error("Parameter was not an error");
                                }, e4.inherit = function(t5, e5) {
                                    t5.super_ = e5, t5.prototype = Object.create(e5.prototype, {
                                        constructor: {
                                            value: t5,
                                            enumerable: false,
                                            writable: true,
                                            configurable: true
                                        }
                                    });
                                }, e4.isError = r3;
                            },
                            9104: function(t4, e4, r3) {
                                var n2 = this && this.__createBinding || (Object.create ? function(t5, e5, r4, n3) {
                                    n3 === void 0 && (n3 = r4), Object.defineProperty(t5, n3, {
                                        enumerable: true,
                                        get: function() {
                                            return e5[r4];
                                        }
                                    });
                                } : function(t5, e5, r4, n3) {
                                    n3 === void 0 && (n3 = r4), t5[n3] = e5[r4];
                                }), i2 = this && this.__exportStar || function(t5, e5) {
                                    for(var r4 in t5)r4 === "default" || Object.prototype.hasOwnProperty.call(e5, r4) || n2(e5, t5, r4);
                                };
                                Object.defineProperty(e4, "__esModule", {
                                    value: true
                                }), e4.Layerr = void 0;
                                var o = r3(2248);
                                Object.defineProperty(e4, "Layerr", {
                                    enumerable: true,
                                    get: function() {
                                        return o.Layerr;
                                    }
                                }), i2(r3(8646), e4);
                            },
                            2248: (t4, e4, r3)=>{
                                function n2(t5) {
                                    return (n2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                Object.defineProperty(e4, "__esModule", {
                                    value: true
                                }), e4.Layerr = void 0;
                                var i2 = r3(6893), o = r3(7235);
                                function s(t5, e5) {
                                    var r4 = Array.prototype.slice.call(arguments);
                                    if (this instanceof s == 0) throw new Error("Cannot invoke 'Layerr' like a function: It must be called with 'new'");
                                    var i3 = o.parseArguments(r4), a = i3.options, u = i3.shortMessage;
                                    this.name = "Layerr", a.name && typeof a.name == "string" && (this.name = a.name);
                                    var c = u;
                                    if (a.cause && (Object.defineProperty(this, "_cause", {
                                        value: a.cause
                                    }), c = "".concat(c, ": ").concat(a.cause.message)), this.message = c, Object.defineProperty(this, "_info", {
                                        value: {}
                                    }), a.info && n2(a.info) === "object" && Object.assign(this._info, a.info), Error.call(this, c), Error.captureStackTrace) {
                                        var l = a.constructorOpt || this.constructor;
                                        Error.captureStackTrace(this, l);
                                    }
                                    return this;
                                }
                                e4.Layerr = s, i2.inherit(s, Error), s.prototype.cause = function() {
                                    return s.cause(this) || void 0;
                                }, s.prototype.toString = function() {
                                    var t5 = this.name || this.constructor.name || this.constructor.prototype.name;
                                    return this.message && (t5 = "".concat(t5, ": ").concat(this.message)), t5;
                                }, s.cause = function(t5) {
                                    return i2.assertError(t5), i2.isError(t5._cause) ? t5._cause : null;
                                }, s.fullStack = function(t5) {
                                    i2.assertError(t5);
                                    var e5 = s.cause(t5);
                                    return e5 ? "".concat(t5.stack, "\ncaused by: ").concat(s.fullStack(e5)) : t5.stack;
                                }, s.info = function(t5) {
                                    i2.assertError(t5);
                                    var e5 = {}, r4 = s.cause(t5);
                                    return r4 && Object.assign(e5, s.info(r4)), t5._info && Object.assign(e5, t5._info), e5;
                                };
                            },
                            7235: (t4, e4, r3)=>{
                                function n2(t5) {
                                    return (n2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                Object.defineProperty(e4, "__esModule", {
                                    value: true
                                }), e4.parseArguments = void 0;
                                var i2 = r3(6893);
                                e4.parseArguments = function(t5) {
                                    var e5, r4 = "";
                                    if (t5.length === 0) e5 = {};
                                    else if (i2.isError(t5[0])) e5 = {
                                        cause: t5[0]
                                    }, r4 = t5.slice(1).join(" ") || "";
                                    else if (t5[0] && n2(t5[0]) === "object") e5 = Object.assign({}, t5[0]), r4 = t5.slice(1).join(" ") || "";
                                    else {
                                        if (typeof t5[0] != "string") throw new Error("Invalid arguments passed to Layerr");
                                        e5 = {}, r4 = r4 = t5.join(" ") || "";
                                    }
                                    return {
                                        options: e5,
                                        shortMessage: r4
                                    };
                                };
                            },
                            8646: (t4, e4)=>{
                                Object.defineProperty(e4, "__esModule", {
                                    value: true
                                });
                            },
                            9243: (t4, e4, r3)=>{
                                var n2, i2, o, s, a;
                                n2 = r3(3718), i2 = r3(5106).utf8, o = r3(163), s = r3(5106).bin, (a = function t5(e5, r4) {
                                    e5.constructor == String ? e5 = r4 && r4.encoding === "binary" ? s.stringToBytes(e5) : i2.stringToBytes(e5) : o(e5) ? e5 = Array.prototype.slice.call(e5, 0) : Array.isArray(e5) || e5.constructor === Uint8Array || (e5 = e5.toString());
                                    for(var a2 = n2.bytesToWords(e5), u = 8 * e5.length, c = 1732584193, l = -271733879, h = -1732584194, f = 271733878, d = 0; d < a2.length; d++)a2[d] = 16711935 & (a2[d] << 8 | a2[d] >>> 24) | 4278255360 & (a2[d] << 24 | a2[d] >>> 8);
                                    a2[u >>> 5] |= 128 << u % 32, a2[14 + (u + 64 >>> 9 << 4)] = u;
                                    var p = t5._ff, g = t5._gg, y = t5._hh, m = t5._ii;
                                    for(d = 0; d < a2.length; d += 16){
                                        var v = c, b = l, _ = h, w = f;
                                        c = p(c, l, h, f, a2[d + 0], 7, -680876936), f = p(f, c, l, h, a2[d + 1], 12, -389564586), h = p(h, f, c, l, a2[d + 2], 17, 606105819), l = p(l, h, f, c, a2[d + 3], 22, -1044525330), c = p(c, l, h, f, a2[d + 4], 7, -176418897), f = p(f, c, l, h, a2[d + 5], 12, 1200080426), h = p(h, f, c, l, a2[d + 6], 17, -1473231341), l = p(l, h, f, c, a2[d + 7], 22, -45705983), c = p(c, l, h, f, a2[d + 8], 7, 1770035416), f = p(f, c, l, h, a2[d + 9], 12, -1958414417), h = p(h, f, c, l, a2[d + 10], 17, -42063), l = p(l, h, f, c, a2[d + 11], 22, -1990404162), c = p(c, l, h, f, a2[d + 12], 7, 1804603682), f = p(f, c, l, h, a2[d + 13], 12, -40341101), h = p(h, f, c, l, a2[d + 14], 17, -1502002290), c = g(c, l = p(l, h, f, c, a2[d + 15], 22, 1236535329), h, f, a2[d + 1], 5, -165796510), f = g(f, c, l, h, a2[d + 6], 9, -1069501632), h = g(h, f, c, l, a2[d + 11], 14, 643717713), l = g(l, h, f, c, a2[d + 0], 20, -373897302), c = g(c, l, h, f, a2[d + 5], 5, -701558691), f = g(f, c, l, h, a2[d + 10], 9, 38016083), h = g(h, f, c, l, a2[d + 15], 14, -660478335), l = g(l, h, f, c, a2[d + 4], 20, -405537848), c = g(c, l, h, f, a2[d + 9], 5, 568446438), f = g(f, c, l, h, a2[d + 14], 9, -1019803690), h = g(h, f, c, l, a2[d + 3], 14, -187363961), l = g(l, h, f, c, a2[d + 8], 20, 1163531501), c = g(c, l, h, f, a2[d + 13], 5, -1444681467), f = g(f, c, l, h, a2[d + 2], 9, -51403784), h = g(h, f, c, l, a2[d + 7], 14, 1735328473), c = y(c, l = g(l, h, f, c, a2[d + 12], 20, -1926607734), h, f, a2[d + 5], 4, -378558), f = y(f, c, l, h, a2[d + 8], 11, -2022574463), h = y(h, f, c, l, a2[d + 11], 16, 1839030562), l = y(l, h, f, c, a2[d + 14], 23, -35309556), c = y(c, l, h, f, a2[d + 1], 4, -1530992060), f = y(f, c, l, h, a2[d + 4], 11, 1272893353), h = y(h, f, c, l, a2[d + 7], 16, -155497632), l = y(l, h, f, c, a2[d + 10], 23, -1094730640), c = y(c, l, h, f, a2[d + 13], 4, 681279174), f = y(f, c, l, h, a2[d + 0], 11, -358537222), h = y(h, f, c, l, a2[d + 3], 16, -722521979), l = y(l, h, f, c, a2[d + 6], 23, 76029189), c = y(c, l, h, f, a2[d + 9], 4, -640364487), f = y(f, c, l, h, a2[d + 12], 11, -421815835), h = y(h, f, c, l, a2[d + 15], 16, 530742520), c = m(c, l = y(l, h, f, c, a2[d + 2], 23, -995338651), h, f, a2[d + 0], 6, -198630844), f = m(f, c, l, h, a2[d + 7], 10, 1126891415), h = m(h, f, c, l, a2[d + 14], 15, -1416354905), l = m(l, h, f, c, a2[d + 5], 21, -57434055), c = m(c, l, h, f, a2[d + 12], 6, 1700485571), f = m(f, c, l, h, a2[d + 3], 10, -1894986606), h = m(h, f, c, l, a2[d + 10], 15, -1051523), l = m(l, h, f, c, a2[d + 1], 21, -2054922799), c = m(c, l, h, f, a2[d + 8], 6, 1873313359), f = m(f, c, l, h, a2[d + 15], 10, -30611744), h = m(h, f, c, l, a2[d + 6], 15, -1560198380), l = m(l, h, f, c, a2[d + 13], 21, 1309151649), c = m(c, l, h, f, a2[d + 4], 6, -145523070), f = m(f, c, l, h, a2[d + 11], 10, -1120210379), h = m(h, f, c, l, a2[d + 2], 15, 718787259), l = m(l, h, f, c, a2[d + 9], 21, -343485551), c = c + v >>> 0, l = l + b >>> 0, h = h + _ >>> 0, f = f + w >>> 0;
                                    }
                                    return n2.endian([
                                        c,
                                        l,
                                        h,
                                        f
                                    ]);
                                })._ff = function(t5, e5, r4, n3, i3, o2, s2) {
                                    var a2 = t5 + (e5 & r4 | ~e5 & n3) + (i3 >>> 0) + s2;
                                    return (a2 << o2 | a2 >>> 32 - o2) + e5;
                                }, a._gg = function(t5, e5, r4, n3, i3, o2, s2) {
                                    var a2 = t5 + (e5 & n3 | r4 & ~n3) + (i3 >>> 0) + s2;
                                    return (a2 << o2 | a2 >>> 32 - o2) + e5;
                                }, a._hh = function(t5, e5, r4, n3, i3, o2, s2) {
                                    var a2 = t5 + (e5 ^ r4 ^ n3) + (i3 >>> 0) + s2;
                                    return (a2 << o2 | a2 >>> 32 - o2) + e5;
                                }, a._ii = function(t5, e5, r4, n3, i3, o2, s2) {
                                    var a2 = t5 + (r4 ^ (e5 | ~n3)) + (i3 >>> 0) + s2;
                                    return (a2 << o2 | a2 >>> 32 - o2) + e5;
                                }, a._blocksize = 16, a._digestsize = 16, t4.exports = function(t5, e5) {
                                    if (t5 == null) throw new Error("Illegal argument " + t5);
                                    var r4 = n2.wordsToBytes(a(t5, e5));
                                    return e5 && e5.asBytes ? r4 : e5 && e5.asString ? s.bytesToString(r4) : n2.bytesToHex(r4);
                                };
                            },
                            3e3: (t4, e4, r3)=>{
                                t4.exports = f, f.Minimatch = d;
                                var n2 = {
                                    sep: "/"
                                };
                                try {
                                    n2 = r3(67);
                                } catch (t54) {}
                                var i2 = f.GLOBSTAR = d.GLOBSTAR = {}, o = r3(7562), s = {
                                    "!": {
                                        open: "(?:(?!(?:",
                                        close: "))[^/]*?)"
                                    },
                                    "?": {
                                        open: "(?:",
                                        close: ")?"
                                    },
                                    "+": {
                                        open: "(?:",
                                        close: ")+"
                                    },
                                    "*": {
                                        open: "(?:",
                                        close: ")*"
                                    },
                                    "@": {
                                        open: "(?:",
                                        close: ")"
                                    }
                                }, a = "[^/]", u = "[^/]*?", c = "().*{}+?[]^$\\!".split("").reduce(function(t5, e5) {
                                    return t5[e5] = true, t5;
                                }, {}), l = /\/+/;
                                function h(t5, e5) {
                                    t5 = t5 || {}, e5 = e5 || {};
                                    var r4 = {};
                                    return Object.keys(e5).forEach(function(t6) {
                                        r4[t6] = e5[t6];
                                    }), Object.keys(t5).forEach(function(e6) {
                                        r4[e6] = t5[e6];
                                    }), r4;
                                }
                                function f(t5, e5, r4) {
                                    if (typeof e5 != "string") throw new TypeError("glob pattern string required");
                                    return r4 || (r4 = {}), !(!r4.nocomment && e5.charAt(0) === "#") && (e5.trim() === "" ? t5 === "" : new d(e5, r4).match(t5));
                                }
                                function d(t5, e5) {
                                    if (!(this instanceof d)) return new d(t5, e5);
                                    if (typeof t5 != "string") throw new TypeError("glob pattern string required");
                                    e5 || (e5 = {}), t5 = t5.trim(), n2.sep !== "/" && (t5 = t5.split(n2.sep).join("/")), this.options = e5, this.set = [], this.pattern = t5, this.regexp = null, this.negate = false, this.comment = false, this.empty = false, this.make();
                                }
                                function p(t5, e5) {
                                    if (e5 || (e5 = this instanceof d ? this.options : {}), (t5 = t5 === void 0 ? this.pattern : t5) === void 0) throw new TypeError("undefined pattern");
                                    return e5.nobrace || !t5.match(/\{.*\}/) ? [
                                        t5
                                    ] : o(t5);
                                }
                                f.filter = function(t5, e5) {
                                    return e5 = e5 || {}, function(r4, n3, i3) {
                                        return f(r4, t5, e5);
                                    };
                                }, f.defaults = function(t5) {
                                    if (!t5 || !Object.keys(t5).length) return f;
                                    var e5 = f, r4 = function(r5, n3, i3) {
                                        return e5.minimatch(r5, n3, h(t5, i3));
                                    };
                                    return r4.Minimatch = function(r5, n3) {
                                        return new e5.Minimatch(r5, h(t5, n3));
                                    }, r4;
                                }, d.defaults = function(t5) {
                                    return t5 && Object.keys(t5).length ? f.defaults(t5).Minimatch : d;
                                }, d.prototype.debug = function() {}, d.prototype.make = function() {
                                    if (!this._made) {
                                        var t5 = this.pattern, e5 = this.options;
                                        if (e5.nocomment || t5.charAt(0) !== "#") if (t5) {
                                            this.parseNegate();
                                            var r4 = this.globSet = this.braceExpand();
                                            e5.debug && (this.debug = console.error), this.debug(this.pattern, r4), r4 = this.globParts = r4.map(function(t6) {
                                                return t6.split(l);
                                            }), this.debug(this.pattern, r4), r4 = r4.map(function(t6, e6, r5) {
                                                return t6.map(this.parse, this);
                                            }, this), this.debug(this.pattern, r4), r4 = r4.filter(function(t6) {
                                                return t6.indexOf(false) === -1;
                                            }), this.debug(this.pattern, r4), this.set = r4;
                                        } else this.empty = true;
                                        else this.comment = true;
                                    }
                                }, d.prototype.parseNegate = function() {
                                    var t5 = this.pattern, e5 = false, r4 = 0;
                                    if (!this.options.nonegate) {
                                        for(var n3 = 0, i3 = t5.length; n3 < i3 && t5.charAt(n3) === "!"; n3++)e5 = !e5, r4++;
                                        r4 && (this.pattern = t5.substr(r4)), this.negate = e5;
                                    }
                                }, f.braceExpand = function(t5, e5) {
                                    return p(t5, e5);
                                }, d.prototype.braceExpand = p, d.prototype.parse = function(t5, e5) {
                                    if (t5.length > 65536) throw new TypeError("pattern is too long");
                                    var r4 = this.options;
                                    if (!r4.noglobstar && t5 === "**") return i2;
                                    if (t5 === "") return "";
                                    var n3, o2 = "", l2 = !!r4.nocase, h2 = false, f2 = [], d2 = [], p2 = false, y = -1, m = -1, v = t5.charAt(0) === "." ? "" : r4.dot ? "(?!(?:^|\\/)\\.{1,2}(?:$|\\/))" : "(?!\\.)", b = this;
                                    function _() {
                                        if (n3) {
                                            switch(n3){
                                                case "*":
                                                    o2 += u, l2 = true;
                                                    break;
                                                case "?":
                                                    o2 += a, l2 = true;
                                                    break;
                                                default:
                                                    o2 += "\\" + n3;
                                            }
                                            b.debug("clearStateChar %j %j", n3, o2), n3 = false;
                                        }
                                    }
                                    for(var w, E = 0, A = t5.length; E < A && (w = t5.charAt(E)); E++)if (this.debug("%s	%s %s %j", t5, E, o2, w), h2 && c[w]) o2 += "\\" + w, h2 = false;
                                    else switch(w){
                                        case "/":
                                            return false;
                                        case "\\":
                                            _(), h2 = true;
                                            continue;
                                        case "?":
                                        case "*":
                                        case "+":
                                        case "@":
                                        case "!":
                                            if (this.debug("%s	%s %s %j <-- stateChar", t5, E, o2, w), p2) {
                                                this.debug("  in class"), w === "!" && E === m + 1 && (w = "^"), o2 += w;
                                                continue;
                                            }
                                            b.debug("call clearStateChar %j", n3), _(), n3 = w, r4.noext && _();
                                            continue;
                                        case "(":
                                            if (p2) {
                                                o2 += "(";
                                                continue;
                                            }
                                            if (!n3) {
                                                o2 += "\\(";
                                                continue;
                                            }
                                            f2.push({
                                                type: n3,
                                                start: E - 1,
                                                reStart: o2.length,
                                                open: s[n3].open,
                                                close: s[n3].close
                                            }), o2 += n3 === "!" ? "(?:(?!(?:" : "(?:", this.debug("plType %j %j", n3, o2), n3 = false;
                                            continue;
                                        case ")":
                                            if (p2 || !f2.length) {
                                                o2 += "\\)";
                                                continue;
                                            }
                                            _(), l2 = true;
                                            var S = f2.pop();
                                            o2 += S.close, S.type === "!" && d2.push(S), S.reEnd = o2.length;
                                            continue;
                                        case "|":
                                            if (p2 || !f2.length || h2) {
                                                o2 += "\\|", h2 = false;
                                                continue;
                                            }
                                            _(), o2 += "|";
                                            continue;
                                        case "[":
                                            if (_(), p2) {
                                                o2 += "\\" + w;
                                                continue;
                                            }
                                            p2 = true, m = E, y = o2.length, o2 += w;
                                            continue;
                                        case "]":
                                            if (E === m + 1 || !p2) {
                                                o2 += "\\" + w, h2 = false;
                                                continue;
                                            }
                                            if (p2) {
                                                var P = t5.substring(m + 1, E);
                                                try {
                                                    RegExp("[" + P + "]");
                                                } catch (t6) {
                                                    var x = this.parse(P, g);
                                                    o2 = o2.substr(0, y) + "\\[" + x[0] + "\\]", l2 = l2 || x[1], p2 = false;
                                                    continue;
                                                }
                                            }
                                            l2 = true, p2 = false, o2 += w;
                                            continue;
                                        default:
                                            _(), h2 ? h2 = false : !c[w] || w === "^" && p2 || (o2 += "\\"), o2 += w;
                                    }
                                    for(p2 && (P = t5.substr(m + 1), x = this.parse(P, g), o2 = o2.substr(0, y) + "\\[" + x[0], l2 = l2 || x[1]), S = f2.pop(); S; S = f2.pop()){
                                        var T = o2.slice(S.reStart + S.open.length);
                                        this.debug("setting tail", o2, S), T = T.replace(/((?:\\{2}){0,64})(\\?)\|/g, function(t6, e6, r5) {
                                            return r5 || (r5 = "\\"), e6 + e6 + r5 + "|";
                                        }), this.debug("tail=%j\n   %s", T, T, S, o2);
                                        var O = S.type === "*" ? u : S.type === "?" ? a : "\\" + S.type;
                                        l2 = true, o2 = o2.slice(0, S.reStart) + O + "\\(" + T;
                                    }
                                    _(), h2 && (o2 += "\\\\");
                                    var C = false;
                                    switch(o2.charAt(0)){
                                        case ".":
                                        case "[":
                                        case "(":
                                            C = true;
                                    }
                                    for(var j = d2.length - 1; j > -1; j--){
                                        var D = d2[j], I = o2.slice(0, D.reStart), k = o2.slice(D.reStart, D.reEnd - 8), F = o2.slice(D.reEnd - 8, D.reEnd), R = o2.slice(D.reEnd);
                                        F += R;
                                        var M = I.split("(").length - 1, N = R;
                                        for(E = 0; E < M; E++)N = N.replace(/\)[+*?]?/, "");
                                        var L = "";
                                        (R = N) === "" && e5 !== g && (L = "$"), o2 = I + k + R + L + F;
                                    }
                                    if (o2 !== "" && l2 && (o2 = "(?=.)" + o2), C && (o2 = v + o2), e5 === g) return [
                                        o2,
                                        l2
                                    ];
                                    if (!l2) return t5.replace(/\\(.)/g, "$1");
                                    var U = r4.nocase ? "i" : "";
                                    try {
                                        var B = new RegExp("^" + o2 + "$", U);
                                    } catch (t6) {
                                        return new RegExp("$.");
                                    }
                                    return B._glob = t5, B._src = o2, B;
                                };
                                var g = {};
                                f.makeRe = function(t5, e5) {
                                    return new d(t5, e5 || {}).makeRe();
                                }, d.prototype.makeRe = function() {
                                    if (this.regexp || this.regexp === false) return this.regexp;
                                    var t5 = this.set;
                                    if (!t5.length) return this.regexp = false, this.regexp;
                                    var e5 = this.options, r4 = e5.noglobstar ? u : e5.dot ? "(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?" : "(?:(?!(?:\\/|^)\\.).)*?", n3 = e5.nocase ? "i" : "", o2 = t5.map(function(t6) {
                                        return t6.map(function(t7) {
                                            return t7 === i2 ? r4 : typeof t7 == "string" ? t7.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&") : t7._src;
                                        }).join("\\/");
                                    }).join("|");
                                    o2 = "^(?:" + o2 + ")$", this.negate && (o2 = "^(?!" + o2 + ").*$");
                                    try {
                                        this.regexp = new RegExp(o2, n3);
                                    } catch (t6) {
                                        this.regexp = false;
                                    }
                                    return this.regexp;
                                }, f.match = function(t5, e5, r4) {
                                    var n3 = new d(e5, r4 = r4 || {});
                                    return t5 = t5.filter(function(t6) {
                                        return n3.match(t6);
                                    }), n3.options.nonull && !t5.length && t5.push(e5), t5;
                                }, d.prototype.match = function(t5, e5) {
                                    if (this.debug("match", t5, this.pattern), this.comment) return false;
                                    if (this.empty) return t5 === "";
                                    if (t5 === "/" && e5) return true;
                                    var r4 = this.options;
                                    n2.sep !== "/" && (t5 = t5.split(n2.sep).join("/")), t5 = t5.split(l), this.debug(this.pattern, "split", t5);
                                    var i3, o2, s2 = this.set;
                                    for(this.debug(this.pattern, "set", s2), o2 = t5.length - 1; o2 >= 0 && !(i3 = t5[o2]); o2--);
                                    for(o2 = 0; o2 < s2.length; o2++){
                                        var a2 = s2[o2], u2 = t5;
                                        if (r4.matchBase && a2.length === 1 && (u2 = [
                                            i3
                                        ]), this.matchOne(u2, a2, e5)) return !!r4.flipNegate || !this.negate;
                                    }
                                    return !r4.flipNegate && this.negate;
                                }, d.prototype.matchOne = function(t5, e5, r4) {
                                    var n3 = this.options;
                                    this.debug("matchOne", {
                                        this: this,
                                        file: t5,
                                        pattern: e5
                                    }), this.debug("matchOne", t5.length, e5.length);
                                    for(var o2 = 0, s2 = 0, a2 = t5.length, u2 = e5.length; o2 < a2 && s2 < u2; o2++, s2++){
                                        this.debug("matchOne loop");
                                        var c2, l2 = e5[s2], h2 = t5[o2];
                                        if (this.debug(e5, l2, h2), l2 === false) return false;
                                        if (l2 === i2) {
                                            this.debug("GLOBSTAR", [
                                                e5,
                                                l2,
                                                h2
                                            ]);
                                            var f2 = o2, d2 = s2 + 1;
                                            if (d2 === u2) {
                                                for(this.debug("** at the end"); o2 < a2; o2++)if (t5[o2] === "." || t5[o2] === ".." || !n3.dot && t5[o2].charAt(0) === ".") return false;
                                                return true;
                                            }
                                            for(; f2 < a2;){
                                                var p2 = t5[f2];
                                                if (this.debug("\nglobstar while", t5, f2, e5, d2, p2), this.matchOne(t5.slice(f2), e5.slice(d2), r4)) return this.debug("globstar found match!", f2, a2, p2), true;
                                                if (p2 === "." || p2 === ".." || !n3.dot && p2.charAt(0) === ".") {
                                                    this.debug("dot detected!", t5, f2, e5, d2);
                                                    break;
                                                }
                                                this.debug("globstar swallow a segment, and continue"), f2++;
                                            }
                                            return !(!r4 || (this.debug("\n>>> no match, partial?", t5, f2, e5, d2), f2 !== a2));
                                        }
                                        if (typeof l2 == "string" ? (c2 = n3.nocase ? h2.toLowerCase() === l2.toLowerCase() : h2 === l2, this.debug("string match", l2, h2, c2)) : (c2 = h2.match(l2), this.debug("pattern match", l2, h2, c2)), !c2) return false;
                                    }
                                    if (o2 === a2 && s2 === u2) return true;
                                    if (o2 === a2) return r4;
                                    if (s2 === u2) return o2 === a2 - 1 && t5[o2] === "";
                                    throw new Error("wtf?");
                                };
                            },
                            2421: (t4)=>{
                                function e4(t5) {
                                    return (e4 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                function r3(t5) {
                                    var e5 = typeof Map == "function" ? new Map() : void 0;
                                    return (r3 = function(t6) {
                                        if (t6 === null || (r4 = t6, Function.toString.call(r4).indexOf("[native code]") === -1)) return t6;
                                        var r4;
                                        if (typeof t6 != "function") throw new TypeError("Super expression must either be null or a function");
                                        if (e5 !== void 0) {
                                            if (e5.has(t6)) return e5.get(t6);
                                            e5.set(t6, i3);
                                        }
                                        function i3() {
                                            return n2(t6, arguments, s(this).constructor);
                                        }
                                        return i3.prototype = Object.create(t6.prototype, {
                                            constructor: {
                                                value: i3,
                                                enumerable: false,
                                                writable: true,
                                                configurable: true
                                            }
                                        }), o(i3, t6);
                                    })(t5);
                                }
                                function n2(t5, e5, r4) {
                                    return (n2 = i2() ? Reflect.construct : function(t6, e6, r5) {
                                        var n3 = [
                                            null
                                        ];
                                        n3.push.apply(n3, e6);
                                        var i3 = new (Function.bind.apply(t6, n3))();
                                        return r5 && o(i3, r5.prototype), i3;
                                    }).apply(null, arguments);
                                }
                                function i2() {
                                    if (typeof Reflect == "undefined" || !Reflect.construct) return false;
                                    if (Reflect.construct.sham) return false;
                                    if (typeof Proxy == "function") return true;
                                    try {
                                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), true;
                                    } catch (t5) {
                                        return false;
                                    }
                                }
                                function o(t5, e5) {
                                    return (o = Object.setPrototypeOf || function(t6, e6) {
                                        return t6.__proto__ = e6, t6;
                                    })(t5, e5);
                                }
                                function s(t5) {
                                    return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function(t6) {
                                        return t6.__proto__ || Object.getPrototypeOf(t6);
                                    })(t5);
                                }
                                var a = ".", u = function(t5) {
                                    function r4(t6) {
                                        var n3;
                                        return function(t7, e5) {
                                            if (!(t7 instanceof e5)) throw new TypeError("Cannot call a class as a function");
                                        }(this, r4), (n3 = function(t7, r5) {
                                            return !r5 || e4(r5) !== "object" && typeof r5 != "function" ? function(t8) {
                                                if (t8 === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                                return t8;
                                            }(t7) : r5;
                                        }(this, s(r4).call(this, t6))).name = "ObjectPrototypeMutationError", n3;
                                    }
                                    return function(t6, e5) {
                                        if (typeof e5 != "function" && e5 !== null) throw new TypeError("Super expression must either be null or a function");
                                        t6.prototype = Object.create(e5 && e5.prototype, {
                                            constructor: {
                                                value: t6,
                                                writable: true,
                                                configurable: true
                                            }
                                        }), e5 && o(t6, e5);
                                    }(r4, t5), r4;
                                }(r3(Error));
                                function c(t5, r4) {
                                    for(var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : function() {}, i3 = r4.split(a), o2 = i3.length, s2 = function(e5) {
                                        var r5 = i3[e5];
                                        if (!t5) return {
                                            v: void 0
                                        };
                                        if (r5 === "+") {
                                            if (Array.isArray(t5)) return {
                                                v: t5.map(function(r6, o4) {
                                                    var s3 = i3.slice(e5 + 1);
                                                    return s3.length > 0 ? c(r6, s3.join(a), n3) : n3(t5, o4, i3, e5);
                                                })
                                            };
                                            var o3 = i3.slice(0, e5).join(a);
                                            throw new Error("Object at wildcard (".concat(o3, ") is not an array"));
                                        }
                                        t5 = n3(t5, r5, i3, e5);
                                    }, u2 = 0; u2 < o2; u2++){
                                        var l2 = s2(u2);
                                        if (e4(l2) === "object") return l2.v;
                                    }
                                    return t5;
                                }
                                function l(t5, e5) {
                                    return t5.length === e5 + 1;
                                }
                                t4.exports = {
                                    set: function(t5, r4, n3) {
                                        if (e4(t5) != "object" || t5 === null) return t5;
                                        if (r4 === void 0) return t5;
                                        if (typeof r4 == "number") return t5[r4] = n3, t5[r4];
                                        try {
                                            return c(t5, r4, function(t6, e5, r5, i3) {
                                                if (t6 === Reflect.getPrototypeOf({})) throw new u("Attempting to mutate Object.prototype");
                                                if (!t6[e5]) {
                                                    var o2 = Number.isInteger(Number(r5[i3 + 1])), s2 = r5[i3 + 1] === "+";
                                                    t6[e5] = o2 || s2 ? [] : {};
                                                }
                                                return l(r5, i3) && (t6[e5] = n3), t6[e5];
                                            });
                                        } catch (e5) {
                                            if (e5 instanceof u) throw e5;
                                            return t5;
                                        }
                                    },
                                    get: function(t5, r4) {
                                        if (e4(t5) != "object" || t5 === null) return t5;
                                        if (r4 === void 0) return t5;
                                        if (typeof r4 == "number") return t5[r4];
                                        try {
                                            return c(t5, r4, function(t6, e5) {
                                                return t6[e5];
                                            });
                                        } catch (e5) {
                                            return t5;
                                        }
                                    },
                                    has: function(t5, r4) {
                                        var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                                        if (e4(t5) != "object" || t5 === null) return false;
                                        if (r4 === void 0) return false;
                                        if (typeof r4 == "number") return r4 in t5;
                                        try {
                                            var i3 = false;
                                            return c(t5, r4, function(t6, e5, r5, o2) {
                                                if (!l(r5, o2)) return t6 && t6[e5];
                                                i3 = n3.own ? t6.hasOwnProperty(e5) : e5 in t6;
                                            }), i3;
                                        } catch (t6) {
                                            return false;
                                        }
                                    },
                                    hasOwn: function(t5, e5, r4) {
                                        return this.has(t5, e5, r4 || {
                                            own: true
                                        });
                                    },
                                    isIn: function(t5, r4, n3) {
                                        var i3 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
                                        if (e4(t5) != "object" || t5 === null) return false;
                                        if (r4 === void 0) return false;
                                        try {
                                            var o2 = false, s2 = false;
                                            return c(t5, r4, function(t6, r5, i4, a2) {
                                                return o2 = o2 || t6 === n3 || !!t6 && t6[r5] === n3, s2 = l(i4, a2) && e4(t6) === "object" && r5 in t6, t6 && t6[r5];
                                            }), i3.validPath ? o2 && s2 : o2;
                                        } catch (t6) {
                                            return false;
                                        }
                                    },
                                    ObjectPrototypeMutationError: u
                                };
                            },
                            1441: (t4, e4, r3)=>{
                                function n2(t5) {
                                    return (n2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                var i2 = r3(6930), o = function(t5) {
                                    return typeof t5 == "string";
                                };
                                function s(t5, e5) {
                                    for(var r4 = [], n3 = 0; n3 < t5.length; n3++){
                                        var i3 = t5[n3];
                                        i3 && i3 !== "." && (i3 === ".." ? r4.length && r4[r4.length - 1] !== ".." ? r4.pop() : e5 && r4.push("..") : r4.push(i3));
                                    }
                                    return r4;
                                }
                                var a = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/, u = {};
                                function c(t5) {
                                    return a.exec(t5).slice(1);
                                }
                                u.resolve = function() {
                                    for(var t5 = "", e5 = false, r4 = arguments.length - 1; r4 >= -1 && !e5; r4--){
                                        var n3 = r4 >= 0 ? arguments[r4] : process.cwd();
                                        if (!o(n3)) throw new TypeError("Arguments to path.resolve must be strings");
                                        n3 && (t5 = n3 + "/" + t5, e5 = n3.charAt(0) === "/");
                                    }
                                    return (e5 ? "/" : "") + (t5 = s(t5.split("/"), !e5).join("/")) || ".";
                                }, u.normalize = function(t5) {
                                    var e5 = u.isAbsolute(t5), r4 = t5.substr(-1) === "/";
                                    return (t5 = s(t5.split("/"), !e5).join("/")) || e5 || (t5 = "."), t5 && r4 && (t5 += "/"), (e5 ? "/" : "") + t5;
                                }, u.isAbsolute = function(t5) {
                                    return t5.charAt(0) === "/";
                                }, u.join = function() {
                                    for(var t5 = "", e5 = 0; e5 < arguments.length; e5++){
                                        var r4 = arguments[e5];
                                        if (!o(r4)) throw new TypeError("Arguments to path.join must be strings");
                                        r4 && (t5 += t5 ? "/" + r4 : r4);
                                    }
                                    return u.normalize(t5);
                                }, u.relative = function(t5, e5) {
                                    function r4(t6) {
                                        for(var e6 = 0; e6 < t6.length && t6[e6] === ""; e6++);
                                        for(var r5 = t6.length - 1; r5 >= 0 && t6[r5] === ""; r5--);
                                        return e6 > r5 ? [] : t6.slice(e6, r5 + 1);
                                    }
                                    t5 = u.resolve(t5).substr(1), e5 = u.resolve(e5).substr(1);
                                    for(var n3 = r4(t5.split("/")), i3 = r4(e5.split("/")), o2 = Math.min(n3.length, i3.length), s2 = o2, a2 = 0; a2 < o2; a2++)if (n3[a2] !== i3[a2]) {
                                        s2 = a2;
                                        break;
                                    }
                                    var c2 = [];
                                    for(a2 = s2; a2 < n3.length; a2++)c2.push("..");
                                    return (c2 = c2.concat(i3.slice(s2))).join("/");
                                }, u._makeLong = function(t5) {
                                    return t5;
                                }, u.dirname = function(t5) {
                                    var e5 = c(t5), r4 = e5[0], n3 = e5[1];
                                    return r4 || n3 ? (n3 && (n3 = n3.substr(0, n3.length - 1)), r4 + n3) : ".";
                                }, u.basename = function(t5, e5) {
                                    var r4 = c(t5)[2];
                                    return e5 && r4.substr(-1 * e5.length) === e5 && (r4 = r4.substr(0, r4.length - e5.length)), r4;
                                }, u.extname = function(t5) {
                                    return c(t5)[3];
                                }, u.format = function(t5) {
                                    if (!i2.isObject(t5)) throw new TypeError("Parameter 'pathObject' must be an object, not " + n2(t5));
                                    var e5 = t5.root || "";
                                    if (!o(e5)) throw new TypeError("'pathObject.root' must be a string or undefined, not " + n2(t5.root));
                                    return (t5.dir ? t5.dir + u.sep : "") + (t5.base || "");
                                }, u.parse = function(t5) {
                                    if (!o(t5)) throw new TypeError("Parameter 'pathString' must be a string, not " + n2(t5));
                                    var e5 = c(t5);
                                    if (!e5 || e5.length !== 4) throw new TypeError("Invalid path '" + t5 + "'");
                                    return e5[1] = e5[1] || "", e5[2] = e5[2] || "", e5[3] = e5[3] || "", {
                                        root: e5[0],
                                        dir: e5[0] + e5[1].slice(0, e5[1].length - 1),
                                        base: e5[2],
                                        ext: e5[3],
                                        name: e5[2].slice(0, e5[2].length - e5[3].length)
                                    };
                                }, u.sep = "/", u.delimiter = ":", t4.exports = u;
                            },
                            1361: (t4, e4)=>{
                                var r3 = Object.prototype.hasOwnProperty;
                                function n2(t5) {
                                    try {
                                        return decodeURIComponent(t5.replace(/\+/g, " "));
                                    } catch (t6) {
                                        return null;
                                    }
                                }
                                function i2(t5) {
                                    try {
                                        return encodeURIComponent(t5);
                                    } catch (t6) {
                                        return null;
                                    }
                                }
                                e4.stringify = function(t5, e5) {
                                    e5 = e5 || "";
                                    var n3, o, s = [];
                                    for(o in typeof e5 != "string" && (e5 = "?"), t5)if (r3.call(t5, o)) {
                                        if ((n3 = t5[o]) || n3 != null && !isNaN(n3) || (n3 = ""), o = i2(o), n3 = i2(n3), o === null || n3 === null) continue;
                                        s.push(o + "=" + n3);
                                    }
                                    return s.length ? e5 + s.join("&") : "";
                                }, e4.parse = function(t5) {
                                    for(var e5, r4 = /([^=?#&]+)=?([^&]*)/g, i3 = {}; e5 = r4.exec(t5);){
                                        var o = n2(e5[1]), s = n2(e5[2]);
                                        o === null || s === null || o in i3 || (i3[o] = s);
                                    }
                                    return i3;
                                };
                            },
                            4095: (t4)=>{
                                t4.exports = function(t5, e4) {
                                    if (e4 = e4.split(":")[0], !(t5 = +t5)) return false;
                                    switch(e4){
                                        case "http":
                                        case "ws":
                                            return t5 !== 80;
                                        case "https":
                                        case "wss":
                                            return t5 !== 443;
                                        case "ftp":
                                            return t5 !== 21;
                                        case "gopher":
                                            return t5 !== 70;
                                        case "file":
                                            return false;
                                    }
                                    return t5 !== 0;
                                };
                            },
                            5842: function(t4, e4, r3) {
                                var n2, i2, o;
                                function s(t5) {
                                    return (s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                o = function() {
                                    function t5(t6) {
                                        var e5 = [];
                                        if (t6.length === 0) return "";
                                        if (typeof t6[0] != "string") throw new TypeError("Url must be a string. Received " + t6[0]);
                                        if (t6[0].match(/^[^/:]+:\/*$/) && t6.length > 1) {
                                            var r4 = t6.shift();
                                            t6[0] = r4 + t6[0];
                                        }
                                        t6[0].match(/^file:\/\/\//) ? t6[0] = t6[0].replace(/^([^/:]+):\/*/, "$1:///") : t6[0] = t6[0].replace(/^([^/:]+):\/*/, "$1://");
                                        for(var n3 = 0; n3 < t6.length; n3++){
                                            var i3 = t6[n3];
                                            if (typeof i3 != "string") throw new TypeError("Url must be a string. Received " + i3);
                                            i3 !== "" && (n3 > 0 && (i3 = i3.replace(/^[\/]+/, "")), i3 = n3 < t6.length - 1 ? i3.replace(/[\/]+$/, "") : i3.replace(/[\/]+$/, "/"), e5.push(i3));
                                        }
                                        var o2 = e5.join("/"), s2 = (o2 = o2.replace(/\/(\?|&|#[^!])/g, "$1")).split("?");
                                        return s2.shift() + (s2.length > 0 ? "?" : "") + s2.join("&");
                                    }
                                    return function() {
                                        return t5(s(arguments[0]) === "object" ? arguments[0] : [].slice.call(arguments));
                                    };
                                }, t4.exports ? t4.exports = o() : (i2 = typeof (n2 = o) == "function" ? n2.call(e4, r3, e4, t4) : n2) === void 0 || (t4.exports = i2);
                            },
                            1095: (t4, e4, n2)=>{
                                function i2(t5) {
                                    return (i2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                        return typeof t6;
                                    } : function(t6) {
                                        return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                    })(t5);
                                }
                                var o = n2(4095), s = n2(1361), a = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//, u = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i, c = /^[a-zA-Z]:/, l = new RegExp("^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+");
                                function h(t5) {
                                    return (t5 || "").toString().replace(l, "");
                                }
                                var f = [
                                    [
                                        "#",
                                        "hash"
                                    ],
                                    [
                                        "?",
                                        "query"
                                    ],
                                    function(t5, e5) {
                                        return g(e5.protocol) ? t5.replace(/\\/g, "/") : t5;
                                    },
                                    [
                                        "/",
                                        "pathname"
                                    ],
                                    [
                                        "@",
                                        "auth",
                                        1
                                    ],
                                    [
                                        NaN,
                                        "host",
                                        void 0,
                                        1,
                                        1
                                    ],
                                    [
                                        /:(\d+)$/,
                                        "port",
                                        void 0,
                                        1
                                    ],
                                    [
                                        NaN,
                                        "hostname",
                                        void 0,
                                        1,
                                        1
                                    ]
                                ], d = {
                                    hash: 1,
                                    query: 1
                                };
                                function p(t5) {
                                    var e5, n3 = (typeof window != "undefined" ? window : r2.g !== void 0 ? r2.g : typeof self != "undefined" ? self : {}).location || {}, o2 = {}, s2 = i2(t5 = t5 || n3);
                                    if (t5.protocol === "blob:") o2 = new m(unescape(t5.pathname), {});
                                    else if (s2 === "string") for(e5 in o2 = new m(t5, {}), d)delete o2[e5];
                                    else if (s2 === "object") {
                                        for(e5 in t5)e5 in d || (o2[e5] = t5[e5]);
                                        o2.slashes === void 0 && (o2.slashes = a.test(t5.href));
                                    }
                                    return o2;
                                }
                                function g(t5) {
                                    return t5 === "file:" || t5 === "ftp:" || t5 === "http:" || t5 === "https:" || t5 === "ws:" || t5 === "wss:";
                                }
                                function y(t5, e5) {
                                    t5 = h(t5), e5 = e5 || {};
                                    var r3, n3 = u.exec(t5), i3 = n3[1] ? n3[1].toLowerCase() : "", o2 = !!n3[2], s2 = !!n3[3], a2 = 0;
                                    return o2 ? s2 ? (r3 = n3[2] + n3[3] + n3[4], a2 = n3[2].length + n3[3].length) : (r3 = n3[2] + n3[4], a2 = n3[2].length) : s2 ? (r3 = n3[3] + n3[4], a2 = n3[3].length) : r3 = n3[4], i3 === "file:" ? a2 >= 2 && (r3 = r3.slice(2)) : g(i3) ? r3 = n3[4] : i3 ? o2 && (r3 = r3.slice(2)) : a2 >= 2 && g(e5.protocol) && (r3 = n3[4]), {
                                        protocol: i3,
                                        slashes: o2 || g(i3),
                                        slashesCount: a2,
                                        rest: r3
                                    };
                                }
                                function m(t5, e5, r3) {
                                    if (t5 = h(t5), !(this instanceof m)) return new m(t5, e5, r3);
                                    var n3, a2, u2, l2, d2, v, b = f.slice(), _ = i2(e5), w = this, E = 0;
                                    for(_ !== "object" && _ !== "string" && (r3 = e5, e5 = null), r3 && typeof r3 != "function" && (r3 = s.parse), n3 = !(a2 = y(t5 || "", e5 = p(e5))).protocol && !a2.slashes, w.slashes = a2.slashes || n3 && e5.slashes, w.protocol = a2.protocol || e5.protocol || "", t5 = a2.rest, (a2.protocol === "file:" && (a2.slashesCount !== 2 || c.test(t5)) || !a2.slashes && (a2.protocol || a2.slashesCount < 2 || !g(w.protocol))) && (b[3] = [
                                        /(.*)/,
                                        "pathname"
                                    ]); E < b.length; E++)typeof (l2 = b[E]) != "function" ? (u2 = l2[0], v = l2[1], u2 != u2 ? w[v] = t5 : typeof u2 == "string" ? ~(d2 = t5.indexOf(u2)) && (typeof l2[2] == "number" ? (w[v] = t5.slice(0, d2), t5 = t5.slice(d2 + l2[2])) : (w[v] = t5.slice(d2), t5 = t5.slice(0, d2))) : (d2 = u2.exec(t5)) && (w[v] = d2[1], t5 = t5.slice(0, d2.index)), w[v] = w[v] || n3 && l2[3] && e5[v] || "", l2[4] && (w[v] = w[v].toLowerCase())) : t5 = l2(t5, w);
                                    r3 && (w.query = r3(w.query)), n3 && e5.slashes && w.pathname.charAt(0) !== "/" && (w.pathname !== "" || e5.pathname !== "") && (w.pathname = function(t6, e6) {
                                        if (t6 === "") return e6;
                                        for(var r4 = (e6 || "/").split("/").slice(0, -1).concat(t6.split("/")), n4 = r4.length, i3 = r4[n4 - 1], o2 = false, s2 = 0; n4--;)r4[n4] === "." ? r4.splice(n4, 1) : r4[n4] === ".." ? (r4.splice(n4, 1), s2++) : s2 && (n4 === 0 && (o2 = true), r4.splice(n4, 1), s2--);
                                        return o2 && r4.unshift(""), i3 !== "." && i3 !== ".." || r4.push(""), r4.join("/");
                                    }(w.pathname, e5.pathname)), w.pathname.charAt(0) !== "/" && g(w.protocol) && (w.pathname = "/" + w.pathname), o(w.port, w.protocol) || (w.host = w.hostname, w.port = ""), w.username = w.password = "", w.auth && (l2 = w.auth.split(":"), w.username = l2[0] || "", w.password = l2[1] || ""), w.origin = w.protocol !== "file:" && g(w.protocol) && w.host ? w.protocol + "//" + w.host : "null", w.href = w.toString();
                                }
                                m.prototype = {
                                    set: function(t5, e5, r3) {
                                        var n3 = this;
                                        switch(t5){
                                            case "query":
                                                typeof e5 == "string" && e5.length && (e5 = (r3 || s.parse)(e5)), n3[t5] = e5;
                                                break;
                                            case "port":
                                                n3[t5] = e5, o(e5, n3.protocol) ? e5 && (n3.host = n3.hostname + ":" + e5) : (n3.host = n3.hostname, n3[t5] = "");
                                                break;
                                            case "hostname":
                                                n3[t5] = e5, n3.port && (e5 += ":" + n3.port), n3.host = e5;
                                                break;
                                            case "host":
                                                n3[t5] = e5, /:\d+$/.test(e5) ? (e5 = e5.split(":"), n3.port = e5.pop(), n3.hostname = e5.join(":")) : (n3.hostname = e5, n3.port = "");
                                                break;
                                            case "protocol":
                                                n3.protocol = e5.toLowerCase(), n3.slashes = !r3;
                                                break;
                                            case "pathname":
                                            case "hash":
                                                if (e5) {
                                                    var i3 = t5 === "pathname" ? "/" : "#";
                                                    n3[t5] = e5.charAt(0) !== i3 ? i3 + e5 : e5;
                                                } else n3[t5] = e5;
                                                break;
                                            default:
                                                n3[t5] = e5;
                                        }
                                        for(var a2 = 0; a2 < f.length; a2++){
                                            var u2 = f[a2];
                                            u2[4] && (n3[u2[1]] = n3[u2[1]].toLowerCase());
                                        }
                                        return n3.origin = n3.protocol !== "file:" && g(n3.protocol) && n3.host ? n3.protocol + "//" + n3.host : "null", n3.href = n3.toString(), n3;
                                    },
                                    toString: function(t5) {
                                        t5 && typeof t5 == "function" || (t5 = s.stringify);
                                        var e5, r3 = this, n3 = r3.protocol;
                                        n3 && n3.charAt(n3.length - 1) !== ":" && (n3 += ":");
                                        var o2 = n3 + (r3.slashes || g(r3.protocol) ? "//" : "");
                                        return r3.username && (o2 += r3.username, r3.password && (o2 += ":" + r3.password), o2 += "@"), o2 += r3.host + r3.pathname, (e5 = i2(r3.query) === "object" ? t5(r3.query) : r3.query) && (o2 += e5.charAt(0) !== "?" ? "?" + e5 : e5), r3.hash && (o2 += r3.hash), o2;
                                    }
                                }, m.extractProtocol = y, m.location = p, m.trimLeft = h, m.qs = s, t4.exports = m;
                            },
                            67: ()=>{},
                            6930: ()=>{},
                            9227: ()=>{}
                        }, e3 = {};
                        function n(r3) {
                            var i2 = e3[r3];
                            if (i2 !== void 0) return i2.exports;
                            var o = e3[r3] = {
                                id: r3,
                                loaded: false,
                                exports: {}
                            };
                            return t3[r3].call(o.exports, o, o.exports, n), o.loaded = true, o.exports;
                        }
                        n.amdO = {}, n.n = (t4)=>{
                            var e4 = t4 && t4.__esModule ? ()=>t4.default
                             : ()=>t4
                            ;
                            return n.d(e4, {
                                a: e4
                            }), e4;
                        }, n.d = (t4, e4)=>{
                            for(var r3 in e4)n.o(e4, r3) && !n.o(t4, r3) && Object.defineProperty(t4, r3, {
                                enumerable: true,
                                get: e4[r3]
                            });
                        }, n.o = (t4, e4)=>Object.prototype.hasOwnProperty.call(t4, e4)
                        , n.r = (t4)=>{
                            typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(t4, Symbol.toStringTag, {
                                value: "Module"
                            }), Object.defineProperty(t4, "__esModule", {
                                value: true
                            });
                        }, n.nmd = (t4)=>(t4.paths = [], t4.children || (t4.children = []), t4)
                        ;
                        var i = {};
                        return (()=>{
                            n.r(i), n.d(i, {
                                AuthType: ()=>w
                                ,
                                ErrorCode: ()=>E
                                ,
                                createClient: ()=>Ee
                                ,
                                getPatcher: ()=>I
                                ,
                                parseStat: ()=>at
                                ,
                                parseXML: ()=>ot
                            });
                            var t4 = n(1095), e4 = n.n(t4), r3 = n(5842), o = n.n(r3), s = n(1441), a = n.n(s), u = "__PATH_SEPARATOR_POSIX__", c = "__PATH_SEPARATOR_WINDOWS__";
                            function l(t5) {
                                var e5 = t5.replace(/\//g, u).replace(/\\\\/g, c);
                                return encodeURIComponent(e5).split(c).join("\\\\").split(u).join("/");
                            }
                            function h(t5) {
                                if (!t5 || t5 === "/") return [];
                                var e5 = t5, r4 = [];
                                do {
                                    r4.push(e5), e5 = (0, s.dirname)(e5);
                                }while (e5 && e5 !== "/")
                                return r4;
                            }
                            function f(t5) {
                                var e5 = t5;
                                return e5[0] !== "/" && (e5 = "/" + e5), /^.+\/$/.test(e5) && (e5 = e5.substr(0, e5.length - 1)), e5;
                            }
                            function d(t5) {
                                var r4 = new (e4())(t5).pathname;
                                return r4.length <= 0 && (r4 = "/"), f(r4);
                            }
                            function p() {
                                for(var t5 = arguments.length, e5 = new Array(t5), r4 = 0; r4 < t5; r4++)e5[r4] = arguments[r4];
                                return o()(e5.reduce(function(t6, e6, r5) {
                                    return (r5 === 0 || e6 !== "/" || e6 === "/" && t6[t6.length - 1] !== "/") && t6.push(e6), t6;
                                }, []));
                            }
                            function g(t5) {
                                return t5.replace(/^https?:\/\/[^\/]+/, "");
                            }
                            var y = n(9104), m = n(9243), v = n.n(m), b = "abcdef0123456789";
                            function _(t5, e5) {
                                var r4 = t5.url.replace("//", ""), n2 = r4.indexOf("/") == -1 ? "/" : r4.slice(r4.indexOf("/")), i2 = t5.method ? t5.method.toUpperCase() : "GET", o2 = !!/(^|,)\s*auth\s*($|,)/.test(e5.qop) && "auth", s2 = "00000000".concat(e5.nc).slice(-8), a2 = function(t6, e6, r5, n3, i3, o3) {
                                    var s3 = v()("".concat(e6, ":").concat(r5, ":").concat(n3));
                                    return t6 && t6.toLowerCase() === "md5-sess" ? v()("".concat(s3, ":").concat(i3, ":").concat(o3)) : s3;
                                }(e5.algorithm, e5.username, e5.realm, e5.password, e5.nonce, e5.cnonce), u2 = v()("".concat(i2, ":").concat(n2)), c2 = o2 ? v()("".concat(a2, ":").concat(e5.nonce, ":").concat(s2, ":").concat(e5.cnonce, ":").concat(o2, ":").concat(u2)) : v()("".concat(a2, ":").concat(e5.nonce, ":").concat(u2)), l2 = {
                                    username: e5.username,
                                    realm: e5.realm,
                                    nonce: e5.nonce,
                                    uri: n2,
                                    qop: o2,
                                    response: c2,
                                    nc: s2,
                                    cnonce: e5.cnonce,
                                    algorithm: e5.algorithm,
                                    opaque: e5.opaque
                                }, h2 = [];
                                for(var f2 in l2)l2[f2] && (f2 === "qop" || f2 === "nc" || f2 === "algorithm" ? h2.push("".concat(f2, "=").concat(l2[f2])) : h2.push("".concat(f2, '="').concat(l2[f2], '"')));
                                return "Digest ".concat(h2.join(", "));
                            }
                            var w, E, A = n(9146);
                            function S(t5) {
                                var e5 = document.createElement("textarea");
                                return e5.innerHTML = t5, e5.value;
                            }
                            function P(t5) {
                                return (0, A.decode)(t5);
                            }
                            function x(t5, e5, r4, n2) {
                                switch(t5.authType){
                                    case w.Digest:
                                        t5.digest = function(t6, e6) {
                                            return {
                                                username: t6,
                                                password: e6,
                                                nc: 0,
                                                algorithm: "md5",
                                                hasDigestAuth: false
                                            };
                                        }(e5, r4);
                                        break;
                                    case w.None:
                                        break;
                                    case w.Password:
                                        t5.headers.Authorization = function(t6, e6) {
                                            var r5, n3 = (r5 = "".concat(t6, ":").concat(e6), (0, A.encode)(r5));
                                            return "Basic ".concat(n3);
                                        }(e5, r4);
                                        break;
                                    case w.Token:
                                        t5.headers.Authorization = "".concat((i2 = n2).token_type, " ").concat(i2.access_token);
                                        break;
                                    default:
                                        throw new y.Layerr({
                                            info: {
                                                code: E.InvalidAuthType
                                            }
                                        }, "Invalid auth type: ".concat(t5.authType));
                                }
                                var i2;
                            }
                            !function(t5) {
                                t5.Digest = "digest", t5.None = "none", t5.Password = "password", t5.Token = "token";
                            }(w || (w = {})), function(t5) {
                                t5.DataTypeNoLength = "data-type-no-length", t5.InvalidAuthType = "invalid-auth-type", t5.InvalidOutputFormat = "invalid-output-format", t5.LinkUnsupportedAuthType = "link-unsupported-auth";
                            }(E || (E = {}));
                            var T = n(5056), O = n.n(T), C = n(9254), j = n.n(C), D = null;
                            function I() {
                                return D || (D = new (j())()), D;
                            }
                            function k(t5) {
                                return function(t6) {
                                    if (Array.isArray(t6)) return F(t6);
                                }(t5) || function(t6) {
                                    if (typeof Symbol != "undefined" && t6[Symbol.iterator] != null || t6["@@iterator"] != null) return Array.from(t6);
                                }(t5) || function(t6, e5) {
                                    if (t6) {
                                        if (typeof t6 == "string") return F(t6, e5);
                                        var r4 = Object.prototype.toString.call(t6).slice(8, -1);
                                        return r4 === "Object" && t6.constructor && (r4 = t6.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t6) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? F(t6, e5) : void 0;
                                    }
                                }(t5) || function() {
                                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                }();
                            }
                            function F(t5, e5) {
                                (e5 == null || e5 > t5.length) && (e5 = t5.length);
                                for(var r4 = 0, n2 = new Array(e5); r4 < e5; r4++)n2[r4] = t5[r4];
                                return n2;
                            }
                            function R(t5) {
                                return (R = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                    return typeof t6;
                                } : function(t6) {
                                    return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                })(t5);
                            }
                            function M(t5) {
                                return function(t6) {
                                    if (R(t6) !== "object" || t6 === null || Object.prototype.toString.call(t6) != "[object Object]") return false;
                                    if (Object.getPrototypeOf(t6) === null) return true;
                                    for(var e5 = t6; Object.getPrototypeOf(e5) !== null;)e5 = Object.getPrototypeOf(e5);
                                    return Object.getPrototypeOf(t6) === e5;
                                }(t5) ? Object.assign({}, t5) : Object.setPrototypeOf(Object.assign({}, t5), Object.getPrototypeOf(t5));
                            }
                            function N() {
                                for(var t5 = arguments.length, e5 = new Array(t5), r4 = 0; r4 < t5; r4++)e5[r4] = arguments[r4];
                                for(var n2 = null, i2 = [].concat(e5); i2.length > 0;){
                                    var o2 = i2.shift();
                                    n2 = n2 ? L(n2, o2) : M(o2);
                                }
                                return n2;
                            }
                            function L(t5, e5) {
                                var r4 = M(t5);
                                return Object.keys(e5).forEach(function(t6) {
                                    r4.hasOwnProperty(t6) ? Array.isArray(e5[t6]) ? r4[t6] = Array.isArray(r4[t6]) ? [].concat(k(r4[t6]), k(e5[t6])) : k(e5[t6]) : R(e5[t6]) === "object" && e5[t6] ? r4[t6] = R(r4[t6]) === "object" && r4[t6] ? L(r4[t6], e5[t6]) : M(e5[t6]) : r4[t6] = e5[t6] : r4[t6] = e5[t6];
                                }), r4;
                            }
                            function U(t5) {
                                return I().patchInline("request", function(t6) {
                                    return O()(t6);
                                }, t5);
                            }
                            function B(t5, e5, r4) {
                                var n2 = M(t5);
                                return n2.headers = function() {
                                    for(var t6 = arguments.length, e6 = new Array(t6), r5 = 0; r5 < t6; r5++)e6[r5] = arguments[r5];
                                    if (e6.length === 0) return {};
                                    var n3 = {};
                                    return e6.reduce(function(t7, e7) {
                                        return Object.keys(e7).forEach(function(r6) {
                                            var i2 = r6.toLowerCase();
                                            n3.hasOwnProperty(i2) ? t7[n3[i2]] = e7[r6] : (n3[i2] = r6, t7[r6] = e7[r6]);
                                        }), t7;
                                    }, {});
                                }(e5.headers, n2.headers || {}, r4.headers || {}), r4.data !== void 0 && (n2.data = r4.data), e5.httpAgent && (n2.httpAgent = e5.httpAgent), e5.httpsAgent && (n2.httpsAgent = e5.httpsAgent), e5.digest && (n2._digest = e5.digest), typeof e5.withCredentials == "boolean" && (n2.withCredentials = e5.withCredentials), e5.maxContentLength && (n2.maxContentLength = e5.maxContentLength), e5.maxBodyLength && (n2.maxBodyLength = e5.maxBodyLength), r4.hasOwnProperty("onUploadProgress") && (n2.onUploadProgress = r4.onUploadProgress), n2.validateStatus = function() {
                                    return true;
                                }, n2;
                            }
                            function V(t5) {
                                if (!t5._digest) return U(t5);
                                var e5 = t5._digest;
                                return delete t5._digest, e5.hasDigestAuth && (t5 = N(t5, {
                                    headers: {
                                        Authorization: _(t5, e5)
                                    }
                                })), U(t5).then(function(r4) {
                                    if (r4.status == 401) {
                                        if (e5.hasDigestAuth = function(t6, e6) {
                                            var r5 = t6.headers["www-authenticate"] || "";
                                            if (r5.split(/\s/)[0].toLowerCase() !== "digest") return false;
                                            for(var n2 = /([a-z0-9_-]+)=(?:"([^"]+)"|([a-z0-9_-]+))/gi;;){
                                                var i2 = n2.exec(r5);
                                                if (!i2) break;
                                                e6[i2[1]] = i2[2] || i2[3];
                                            }
                                            return e6.nc += 1, e6.cnonce = function() {
                                                for(var t7 = "", e7 = 0; e7 < 32; ++e7)t7 = "".concat(t7).concat(b[Math.floor(Math.random() * b.length)]);
                                                return t7;
                                            }(), true;
                                        }(r4, e5), e5.hasDigestAuth) return U(t5 = N(t5, {
                                            headers: {
                                                Authorization: _(t5, e5)
                                            }
                                        })).then(function(t6) {
                                            return t6.status == 401 ? e5.hasDigestAuth = false : e5.nc++, t6;
                                        });
                                    } else e5.nc++;
                                    return r4;
                                });
                            }
                            var $ = n(3e3), G = n.n($);
                            function z(t5) {
                                var e5 = new Error("".concat(arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", "Invalid response: ").concat(t5.status, " ").concat(t5.statusText));
                                return e5.status = t5.status, e5.response = t5, e5;
                            }
                            function H(t5, e5) {
                                var r4 = e5.status;
                                if (r4 === 401 && t5.digest) return e5;
                                if (r4 >= 400) throw z(e5);
                                return e5;
                            }
                            function q(t5, e5) {
                                return t5.filter(function(t6) {
                                    return G()(t6.filename, e5, {
                                        matchBase: true
                                    });
                                });
                            }
                            function Y(t5, e5) {
                                return arguments.length > 2 && arguments[2] !== void 0 && arguments[2] ? {
                                    data: e5,
                                    headers: t5.headers || {},
                                    status: t5.status,
                                    statusText: t5.statusText
                                } : e5;
                            }
                            function K(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            var Z, J, X = (Z = function(t5, e5, r4) {
                                var n2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
                                return K(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "COPY",
                                    headers: {
                                        Destination: p(t5.remoteURL, l(r4))
                                    }
                                }, t5, n2)), function(e6) {
                                    H(t5, e6);
                                });
                            }, function() {
                                for(var t5 = [], e5 = 0; e5 < arguments.length; e5++)t5[e5] = arguments[e5];
                                try {
                                    return Promise.resolve(Z.apply(this, t5));
                                } catch (t6) {
                                    return Promise.reject(t6);
                                }
                            }), W = n(8819), Q = n(2421), tt = n.n(Q);
                            function et(t5, e5) {
                                return function(t6) {
                                    if (Array.isArray(t6)) return t6;
                                }(t5) || function(t6, e6) {
                                    var r4 = t6 == null ? null : typeof Symbol != "undefined" && t6[Symbol.iterator] || t6["@@iterator"];
                                    if (r4 != null) {
                                        var n2, i2, o2 = [], s2 = true, a2 = false;
                                        try {
                                            for(r4 = r4.call(t6); !(s2 = (n2 = r4.next()).done) && (o2.push(n2.value), !e6 || o2.length !== e6); s2 = true);
                                        } catch (t7) {
                                            a2 = true, i2 = t7;
                                        } finally{
                                            try {
                                                s2 || r4.return == null || r4.return();
                                            } finally{
                                                if (a2) throw i2;
                                            }
                                        }
                                        return o2;
                                    }
                                }(t5, e5) || function(t6, e6) {
                                    if (t6) {
                                        if (typeof t6 == "string") return rt(t6, e6);
                                        var r4 = Object.prototype.toString.call(t6).slice(8, -1);
                                        return r4 === "Object" && t6.constructor && (r4 = t6.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t6) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? rt(t6, e6) : void 0;
                                    }
                                }(t5, e5) || function() {
                                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                }();
                            }
                            function rt(t5, e5) {
                                (e5 == null || e5 > t5.length) && (e5 = t5.length);
                                for(var r4 = 0, n2 = new Array(e5); r4 < e5; r4++)n2[r4] = t5[r4];
                                return n2;
                            }
                            function nt(t5) {
                                return (nt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                    return typeof t6;
                                } : function(t6) {
                                    return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                })(t5);
                            }
                            function it(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : J.Original, n2 = tt().get(t5, e5);
                                return r4 === "array" && Array.isArray(n2) === false ? [
                                    n2
                                ] : r4 === "object" && Array.isArray(n2) ? n2[0] : n2;
                            }
                            function ot(t5) {
                                return new Promise(function(e5) {
                                    e5(function(t6) {
                                        var e6 = t6.multistatus;
                                        if (e6 === "") return {
                                            multistatus: {
                                                response: []
                                            }
                                        };
                                        if (!e6) throw new Error("Invalid response: No root multistatus found");
                                        var r4 = {
                                            multistatus: Array.isArray(e6) ? e6[0] : e6
                                        };
                                        return tt().set(r4, "multistatus.response", it(r4, "multistatus.response", J.Array)), tt().set(r4, "multistatus.response", tt().get(r4, "multistatus.response").map(function(t7) {
                                            return function(t8) {
                                                var e7 = Object.assign({}, t8);
                                                return tt().set(e7, "propstat", it(e7, "propstat", J.Object)), tt().set(e7, "propstat.prop", it(e7, "propstat.prop", J.Object)), e7;
                                            }(t7);
                                        })), r4;
                                    }(W.parse(t5, {
                                        arrayMode: false,
                                        ignoreNameSpace: true
                                    })));
                                });
                            }
                            function st(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], n2 = t5.getlastmodified, i2 = n2 === void 0 ? null : n2, o2 = t5.getcontentlength, s2 = o2 === void 0 ? "0" : o2, u2 = t5.resourcetype, c2 = u2 === void 0 ? null : u2, l2 = t5.getcontenttype, h2 = l2 === void 0 ? null : l2, f2 = t5.getetag, d2 = f2 === void 0 ? null : f2, p2 = c2 && nt(c2) === "object" && c2.collection !== void 0 ? "directory" : "file", g2 = S(e5), y2 = {
                                    filename: g2,
                                    basename: a().basename(g2),
                                    lastmod: i2,
                                    size: parseInt(s2, 10),
                                    type: p2,
                                    etag: typeof d2 == "string" ? d2.replace(/"/g, "") : null
                                };
                                return p2 === "file" && (y2.mime = h2 && typeof h2 == "string" ? h2.split(";")[0] : ""), r4 && (y2.props = t5), y2;
                            }
                            function at(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], n2 = null;
                                try {
                                    n2 = t5.multistatus.response[0];
                                } catch (t6) {}
                                if (!n2) throw new Error("Failed getting item stat: bad response");
                                var i2 = n2.propstat, o2 = i2.prop, s2 = et(i2.status.split(" ", 3), 3), a2 = (s2[0], s2[1]), u2 = s2[2], c2 = parseInt(a2, 10);
                                if (c2 >= 400) {
                                    var l2 = new Error("Invalid response: ".concat(c2, " ").concat(u2));
                                    throw l2.status = c2, l2;
                                }
                                return st(o2, f(e5), r4);
                            }
                            function ut(t5) {
                                switch(t5.toString()){
                                    case "-3":
                                        return "unlimited";
                                    case "-2":
                                    case "-1":
                                        return "unknown";
                                    default:
                                        return parseInt(t5, 10);
                                }
                            }
                            function ct(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            !function(t5) {
                                t5.Array = "array", t5.Object = "object", t5.Original = "original";
                            }(J || (J = {}));
                            var lt = function(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, n2 = r4.details, i2 = n2 !== void 0 && n2;
                                return ct(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "PROPFIND",
                                    headers: {
                                        Accept: "text/plain,application/xml",
                                        Depth: "0"
                                    },
                                    responseType: "text"
                                }, t5, r4)), function(r5) {
                                    return H(t5, r5), ct(ot(r5.data), function(t6) {
                                        var n3 = at(t6, e5, i2);
                                        return Y(r5, n3, i2);
                                    });
                                });
                            });
                            function ht(t5, e5) {
                                var r4 = Object.keys(t5);
                                if (Object.getOwnPropertySymbols) {
                                    var n2 = Object.getOwnPropertySymbols(t5);
                                    e5 && (n2 = n2.filter(function(e6) {
                                        return Object.getOwnPropertyDescriptor(t5, e6).enumerable;
                                    })), r4.push.apply(r4, n2);
                                }
                                return r4;
                            }
                            function ft(t5) {
                                for(var e5 = 1; e5 < arguments.length; e5++){
                                    var r4 = arguments[e5] != null ? arguments[e5] : {};
                                    e5 % 2 ? ht(Object(r4), true).forEach(function(e6) {
                                        dt(t5, e6, r4[e6]);
                                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t5, Object.getOwnPropertyDescriptors(r4)) : ht(Object(r4)).forEach(function(e6) {
                                        Object.defineProperty(t5, e6, Object.getOwnPropertyDescriptor(r4, e6));
                                    });
                                }
                                return t5;
                            }
                            function dt(t5, e5, r4) {
                                return e5 in t5 ? Object.defineProperty(t5, e5, {
                                    value: r4,
                                    enumerable: true,
                                    configurable: true,
                                    writable: true
                                }) : t5[e5] = r4, t5;
                            }
                            function pt(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            function gt(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }
                            function yt() {}
                            var mt = gt(function(t5, e5) {
                                var r4 = false, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i2 = h(f(e5));
                                i2.sort(function(t6, e6) {
                                    return t6.length > e6.length ? 1 : e6.length > t6.length ? -1 : 0;
                                });
                                var o2 = false;
                                return Pt(i2, function(r5) {
                                    return _t(function() {
                                        if (o2) return vt(xt(t5, r5, ft(ft({}, n2), {}, {
                                            recursive: false
                                        })));
                                    }, function() {
                                        return bt(function() {
                                            return pt(lt(t5, r5), function(t6) {
                                                if (t6.type !== "directory") throw new Error("Path includes a file: ".concat(e5));
                                            });
                                        }, function(e6) {
                                            var i3 = e6;
                                            return function() {
                                                if (i3.status === 404) return o2 = true, vt(xt(t5, r5, ft(ft({}, n2), {}, {
                                                    recursive: false
                                                })));
                                                throw e6;
                                            }();
                                        });
                                    });
                                }, function() {
                                    return r4;
                                });
                            });
                            function vt(t5, e5) {
                                if (!e5) return t5 && t5.then ? t5.then(yt) : Promise.resolve();
                            }
                            function bt(t5, e5) {
                                try {
                                    var r4 = t5();
                                } catch (t6) {
                                    return e5(t6);
                                }
                                return r4 && r4.then ? r4.then(void 0, e5) : r4;
                            }
                            function _t(t5, e5) {
                                var r4 = t5();
                                return r4 && r4.then ? r4.then(e5) : e5(r4);
                            }
                            var wt = typeof Symbol != "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
                            function Et(t5, e5, r4) {
                                if (!t5.s) {
                                    if (r4 instanceof At) {
                                        if (!r4.s) return void (r4.o = Et.bind(null, t5, e5));
                                        1 & e5 && (e5 = r4.s), r4 = r4.v;
                                    }
                                    if (r4 && r4.then) return void r4.then(Et.bind(null, t5, e5), Et.bind(null, t5, 2));
                                    t5.s = e5, t5.v = r4;
                                    var n2 = t5.o;
                                    n2 && n2(t5);
                                }
                            }
                            var At = function() {
                                function t5() {}
                                return t5.prototype.then = function(e5, r4) {
                                    var n2 = new t5(), i2 = this.s;
                                    if (i2) {
                                        var o2 = 1 & i2 ? e5 : r4;
                                        if (o2) {
                                            try {
                                                Et(n2, 1, o2(this.v));
                                            } catch (t6) {
                                                Et(n2, 2, t6);
                                            }
                                            return n2;
                                        }
                                        return this;
                                    }
                                    return this.o = function(t6) {
                                        try {
                                            var i3 = t6.v;
                                            1 & t6.s ? Et(n2, 1, e5 ? e5(i3) : i3) : r4 ? Et(n2, 1, r4(i3)) : Et(n2, 2, i3);
                                        } catch (t7) {
                                            Et(n2, 2, t7);
                                        }
                                    }, n2;
                                }, t5;
                            }();
                            function St(t5) {
                                return t5 instanceof At && 1 & t5.s;
                            }
                            function Pt(t5, e5, r4) {
                                if (typeof t5[wt] == "function") {
                                    var n2, i2, o2, s2 = t5[wt]();
                                    function u2(t6) {
                                        try {
                                            for(; !((n2 = s2.next()).done || r4 && r4());)if ((t6 = e5(n2.value)) && t6.then) {
                                                if (!St(t6)) return void t6.then(u2, o2 || (o2 = Et.bind(null, i2 = new At(), 2)));
                                                t6 = t6.v;
                                            }
                                            i2 ? Et(i2, 1, t6) : i2 = t6;
                                        } catch (t7) {
                                            Et(i2 || (i2 = new At()), 2, t7);
                                        }
                                    }
                                    if (u2(), s2.return) {
                                        var a2 = function(t6) {
                                            try {
                                                n2.done || s2.return();
                                            } catch (t7) {}
                                            return t6;
                                        };
                                        if (i2 && i2.then) return i2.then(a2, function(t6) {
                                            throw a2(t6);
                                        });
                                        a2();
                                    }
                                    return i2;
                                }
                                if (!("length" in t5)) throw new TypeError("Object is not iterable");
                                for(var u2 = [], c2 = 0; c2 < t5.length; c2++)u2.push(t5[c2]);
                                return function(t6, e6, r5) {
                                    var n3, i3, o3 = -1;
                                    return function s3(a3) {
                                        try {
                                            for(; ++o3 < t6.length && (!r5 || !r5());)if ((a3 = e6(o3)) && a3.then) {
                                                if (!St(a3)) return void a3.then(s3, i3 || (i3 = Et.bind(null, n3 = new At(), 2)));
                                                a3 = a3.v;
                                            }
                                            n3 ? Et(n3, 1, a3) : n3 = a3;
                                        } catch (t7) {
                                            Et(n3 || (n3 = new At()), 2, t7);
                                        }
                                    }(), n3;
                                }(u2, function(t6) {
                                    return e5(u2[t6]);
                                }, r4);
                            }
                            var xt = gt(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                                return r4.recursive === true ? mt(t5, e5, r4) : pt(V(B({
                                    url: p(t5.remoteURL, Tt(l(e5))),
                                    method: "MKCOL"
                                }, t5, r4)), function(e6) {
                                    H(t5, e6);
                                });
                            });
                            function Tt(t5) {
                                return t5.endsWith("/") ? t5 : t5 + "/";
                            }
                            var Ot = n(9227), Ct = n.n(Ot);
                            function jt(t5) {
                                return (jt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                    return typeof t6;
                                } : function(t6) {
                                    return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                })(t5);
                            }
                            function Dt(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            var It = function(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, n2 = {};
                                if (jt(r4.range) === "object" && typeof r4.range.start == "number") {
                                    var i2 = "bytes=".concat(r4.range.start, "-");
                                    typeof r4.range.end == "number" && (i2 = "".concat(i2).concat(r4.range.end)), n2.Range = i2;
                                }
                                return Dt(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "GET",
                                    headers: n2,
                                    responseType: "stream"
                                }, t5, r4)), function(e6) {
                                    if (H(t5, e6), n2.Range && e6.status !== 206) {
                                        var i3 = new Error("Invalid response code for partial request: ".concat(e6.status));
                                        throw i3.status = e6.status, i3;
                                    }
                                    return r4.callback && setTimeout(function() {
                                        r4.callback(e6);
                                    }, 0), e6.data;
                                });
                            }), kt = function() {};
                            function Ft(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, n2 = new (Ct()).PassThrough();
                                return It(t5, e5, r4).then(function(t6) {
                                    t6.pipe(n2);
                                }).catch(function(t6) {
                                    n2.emit("error", t6);
                                }), n2;
                            }
                            function Rt(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, n2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : kt, i2 = new (Ct()).PassThrough(), o2 = {};
                                return r4.overwrite === false && (o2["If-None-Match"] = "*"), V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "PUT",
                                    headers: o2,
                                    data: i2,
                                    maxRedirects: 0
                                }, t5, r4)).then(function(e6) {
                                    return H(t5, e6);
                                }).then(function(t6) {
                                    setTimeout(function() {
                                        n2(t6);
                                    }, 0);
                                }).catch(function(t6) {
                                    i2.emit("error", t6);
                                }), i2;
                            }
                            var Mt = function(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }(function(t5, e5, r4) {
                                var n2, i2;
                                return r4.url || (r4.url = p(t5.remoteURL, l(e5))), i2 = function(e6) {
                                    return H(t5, e6), e6;
                                }, (n2 = V(B(r4, t5, {}))) && n2.then || (n2 = Promise.resolve(n2)), i2 ? n2.then(i2) : n2;
                            });
                            function Nt(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            var Lt = function(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                                return Nt(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "DELETE"
                                }, t5, r4)), function(e6) {
                                    H(t5, e6);
                                });
                            });
                            function Ut(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            function Bt(t5, e5) {
                                try {
                                    var r4 = t5();
                                } catch (t6) {
                                    return e5(t6);
                                }
                                return r4 && r4.then ? r4.then(void 0, e5) : r4;
                            }
                            var Vt = function(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                                return Bt(function() {
                                    return Ut(lt(t5, e5, r4), function() {
                                        return true;
                                    });
                                }, function(t6) {
                                    if (t6.status === 404) return false;
                                    throw t6;
                                });
                            });
                            function $t(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            var Gt = function(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                                return $t(V(B({
                                    url: p(t5.remoteURL, l(e5), "/"),
                                    method: "PROPFIND",
                                    headers: {
                                        Accept: "text/plain",
                                        Depth: r4.deep ? "infinity" : "1"
                                    },
                                    responseType: "text"
                                }, t5, r4)), function(n2) {
                                    return H(t5, n2), $t(ot(n2.data), function(i2) {
                                        var o2 = zt(i2, t5.remotePath, e5, r4.details);
                                        return r4.glob && (o2 = q(o2, r4.glob)), Y(n2, o2, r4.details);
                                    });
                                });
                            });
                            function zt(t5, e5, r4) {
                                var n2 = arguments.length > 3 && arguments[3] !== void 0 && arguments[3], i2 = a().join(e5, "/");
                                return t5.multistatus.response.map(function(t6) {
                                    var e6 = g(t6.href);
                                    return st(t6.propstat.prop, i2 === "/" ? decodeURIComponent(f(e6)) : decodeURIComponent(f(a().relative(i2, e6))), n2);
                                }).filter(function(t6) {
                                    return t6.basename && (t6.type === "file" || t6.filename !== r4.replace(/\/$/, ""));
                                });
                            }
                            function Ht(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }
                            function qt(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            var Yt = Ht(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                                return qt(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "GET",
                                    responseType: "text",
                                    transformResponse: [
                                        Jt
                                    ]
                                }, t5, r4)), function(e6) {
                                    return H(t5, e6), Y(e6, e6.data, r4.details);
                                });
                            }), Kt = Ht(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                                return qt(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "GET",
                                    responseType: "arraybuffer"
                                }, t5, r4)), function(e6) {
                                    return H(t5, e6), Y(e6, e6.data, r4.details);
                                });
                            }), Zt = Ht(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, n2 = r4.format, i2 = n2 === void 0 ? "binary" : n2;
                                if (i2 !== "binary" && i2 !== "text") throw new y.Layerr({
                                    info: {
                                        code: E.InvalidOutputFormat
                                    }
                                }, "Invalid output format: ".concat(i2));
                                return i2 === "text" ? Yt(t5, e5, r4) : Kt(t5, e5, r4);
                            }), Jt = function(t5) {
                                return t5;
                            };
                            function Xt(t5, e5) {
                                var r4 = p(t5.remoteURL, l(e5)), n2 = /^https:/i.test(r4) ? "https" : "http";
                                switch(t5.authType){
                                    case w.None:
                                        break;
                                    case w.Password:
                                        var i2 = P(t5.headers.Authorization.replace(/^Basic /i, "").trim());
                                        r4 = r4.replace(/^https?:\/\//, "".concat(n2, "://").concat(i2, "@"));
                                        break;
                                    default:
                                        throw new y.Layerr({
                                            info: {
                                                code: E.LinkUnsupportedAuthType
                                            }
                                        }, "Unsupported auth type for file link: ".concat(t5.authType));
                                }
                                return r4;
                            }
                            function Wt(t5) {
                                return (Wt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t6) {
                                    return typeof t6;
                                } : function(t6) {
                                    return t6 && typeof Symbol == "function" && t6.constructor === Symbol && t6 !== Symbol.prototype ? "symbol" : typeof t6;
                                })(t5);
                            }
                            function Qt(t5, e5) {
                                var r4 = Object.keys(t5);
                                if (Object.getOwnPropertySymbols) {
                                    var n2 = Object.getOwnPropertySymbols(t5);
                                    e5 && (n2 = n2.filter(function(e6) {
                                        return Object.getOwnPropertyDescriptor(t5, e6).enumerable;
                                    })), r4.push.apply(r4, n2);
                                }
                                return r4;
                            }
                            function te(t5, e5, r4) {
                                return e5 in t5 ? Object.defineProperty(t5, e5, {
                                    value: r4,
                                    enumerable: true,
                                    configurable: true,
                                    writable: true
                                }) : t5[e5] = r4, t5;
                            }
                            function ee(t5) {
                                return new W.j2xParser({
                                    attributeNamePrefix: "@_",
                                    format: true,
                                    ignoreAttributes: false,
                                    supressEmptyNode: true
                                }).parse(re({
                                    lockinfo: {
                                        "@_xmlns:d": "DAV:",
                                        lockscope: {
                                            exclusive: {}
                                        },
                                        locktype: {
                                            write: {}
                                        },
                                        owner: {
                                            href: t5
                                        }
                                    }
                                }, "d"));
                            }
                            function re(t5, e5) {
                                var r4 = function(t6) {
                                    for(var e6 = 1; e6 < arguments.length; e6++){
                                        var r5 = arguments[e6] != null ? arguments[e6] : {};
                                        e6 % 2 ? Qt(Object(r5), true).forEach(function(e7) {
                                            te(t6, e7, r5[e7]);
                                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t6, Object.getOwnPropertyDescriptors(r5)) : Qt(Object(r5)).forEach(function(e7) {
                                            Object.defineProperty(t6, e7, Object.getOwnPropertyDescriptor(r5, e7));
                                        });
                                    }
                                    return t6;
                                }({}, t5);
                                for(var n2 in r4)r4[n2] && Wt(r4[n2]) === "object" && n2.indexOf(":") === -1 ? (r4["".concat(e5, ":").concat(n2)] = re(r4[n2], e5), delete r4[n2]) : /^@_/.test(n2) === false && (r4["".concat(e5, ":").concat(n2)] = r4[n2], delete r4[n2]);
                                return r4;
                            }
                            function ne(t5) {
                                return W.parse(t5, {
                                    arrayMode: false,
                                    ignoreNameSpace: true,
                                    parseAttributeValue: true,
                                    parseNodeValue: true
                                });
                            }
                            function ie(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            function oe(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }
                            var se = oe(function(t5, e5, r4) {
                                var n2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
                                return ie(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "UNLOCK",
                                    headers: {
                                        "Lock-Token": r4
                                    }
                                }, t5, n2)), function(e6) {
                                    if (H(t5, e6), e6.status !== 204 && e6.status !== 200) throw z(e6);
                                });
                            }), ae = oe(function(t5, e5) {
                                var r4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, n2 = r4.refreshToken, i2 = r4.timeout, o2 = {
                                    Accept: "text/plain,application/xml",
                                    Timeout: i2 === void 0 ? ue : i2
                                };
                                return n2 && (o2.If = n2), ie(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "LOCK",
                                    headers: o2,
                                    data: ee(t5.contactHref),
                                    responseType: "text"
                                }, t5, r4)), function(e6) {
                                    H(t5, e6);
                                    var r5 = ne(e6.data), n3 = tt().get(r5, "prop.lockdiscovery.activelock.locktoken.href"), i3 = tt().get(r5, "prop.lockdiscovery.activelock.timeout");
                                    if (!n3) throw z(e6, "No lock token received: ");
                                    return {
                                        token: n3,
                                        serverTimeout: i3
                                    };
                                });
                            }), ue = "Infinite, Second-4100000000";
                            function ce(t5, e5) {
                                (e5 == null || e5 > t5.length) && (e5 = t5.length);
                                for(var r4 = 0, n2 = new Array(e5); r4 < e5; r4++)n2[r4] = t5[r4];
                                return n2;
                            }
                            function le(t5) {
                                try {
                                    var e5 = (i2 = t5.multistatus.response, function(t6) {
                                        if (Array.isArray(t6)) return t6;
                                    }(i2) || function(t6, e6) {
                                        var r5 = t6 == null ? null : typeof Symbol != "undefined" && t6[Symbol.iterator] || t6["@@iterator"];
                                        if (r5 != null) {
                                            var n3, i3, o2 = [], s2 = true, a2 = false;
                                            try {
                                                for(r5 = r5.call(t6); !(s2 = (n3 = r5.next()).done) && (o2.push(n3.value), o2.length !== 1); s2 = true);
                                            } catch (t7) {
                                                a2 = true, i3 = t7;
                                            } finally{
                                                try {
                                                    s2 || r5.return == null || r5.return();
                                                } finally{
                                                    if (a2) throw i3;
                                                }
                                            }
                                            return o2;
                                        }
                                    }(i2) || function(t6, e6) {
                                        if (t6) {
                                            if (typeof t6 == "string") return ce(t6, 1);
                                            var r5 = Object.prototype.toString.call(t6).slice(8, -1);
                                            return r5 === "Object" && t6.constructor && (r5 = t6.constructor.name), r5 === "Map" || r5 === "Set" ? Array.from(t6) : r5 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? ce(t6, 1) : void 0;
                                        }
                                    }(i2) || function() {
                                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                    }())[0].propstat.prop, r4 = e5["quota-used-bytes"], n2 = e5["quota-available-bytes"];
                                    return r4 !== void 0 && n2 !== void 0 ? {
                                        used: parseInt(r4, 10),
                                        available: ut(n2)
                                    } : null;
                                } catch (t6) {}
                                var i2;
                                return null;
                            }
                            function he(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            var fe = function(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }(function(t5) {
                                var e5 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                                return he(V(B({
                                    url: p(t5.remoteURL, "/"),
                                    method: "PROPFIND",
                                    headers: {
                                        Accept: "text/plain",
                                        Depth: "0"
                                    },
                                    responseType: "text"
                                }, t5, e5)), function(r4) {
                                    return H(t5, r4), he(ot(r4.data), function(t6) {
                                        var n2 = le(t6);
                                        return Y(r4, n2, e5.details);
                                    });
                                });
                            });
                            function de(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            var pe = function(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }(function(t5, e5, r4) {
                                var n2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
                                return de(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "MOVE",
                                    headers: {
                                        Destination: p(t5.remoteURL, l(r4))
                                    }
                                }, t5, n2)), function(e6) {
                                    H(t5, e6);
                                });
                            }), ge = typeof ArrayBuffer == "function", ye = Object.prototype.toString;
                            function me(t5) {
                                if (e5 = t5, ge && (e5 instanceof ArrayBuffer || ye.call(e5) === "[object ArrayBuffer]")) return t5.byteLength;
                                if (function(t6) {
                                    return t6 != null && t6.constructor != null && typeof t6.constructor.isBuffer == "function" && t6.constructor.isBuffer(t6);
                                }(t5)) return t5.length;
                                if (typeof t5 == "string") return t5.length;
                                var e5;
                                throw new y.Layerr({
                                    info: {
                                        code: E.DataTypeNoLength
                                    }
                                }, "Cannot calculate data length: Invalid type");
                            }
                            function ve(t5, e5, r4) {
                                return r4 ? e5 ? e5(t5) : t5 : (t5 && t5.then || (t5 = Promise.resolve(t5)), e5 ? t5.then(e5) : t5);
                            }
                            var be = function(t5) {
                                return function() {
                                    for(var e5 = [], r4 = 0; r4 < arguments.length; r4++)e5[r4] = arguments[r4];
                                    try {
                                        return Promise.resolve(t5.apply(this, e5));
                                    } catch (t6) {
                                        return Promise.reject(t6);
                                    }
                                };
                            }(function(t5, e5, r4) {
                                var n2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, i2 = n2.contentLength, o2 = i2 === void 0 || i2, s2 = n2.overwrite, a2 = s2 === void 0 || s2, u2 = {
                                    "Content-Type": "application/octet-stream"
                                };
                                return o2 === false || (u2["Content-Length"] = "".concat(typeof o2 == "number" ? o2 : me(r4))), a2 || (u2["If-None-Match"] = "*"), ve(V(B({
                                    url: p(t5.remoteURL, l(e5)),
                                    method: "PUT",
                                    headers: u2,
                                    data: r4
                                }, t5, n2)), function(e6) {
                                    try {
                                        H(t5, e6);
                                    } catch (t6) {
                                        var r5 = t6;
                                        if (r5.status !== 412 || a2) throw r5;
                                        return false;
                                    }
                                    return true;
                                });
                            });
                            function _e(t5, e5) {
                                var r4 = "".concat(p(t5.remoteURL, l(e5)), "?Content-Type=application/octet-stream"), n2 = /^https:/i.test(r4) ? "https" : "http";
                                switch(t5.authType){
                                    case w.None:
                                        break;
                                    case w.Password:
                                        var i2 = P(t5.headers.Authorization.replace(/^Basic /i, "").trim());
                                        r4 = r4.replace(/^https?:\/\//, "".concat(n2, "://").concat(i2, "@"));
                                        break;
                                    default:
                                        throw new y.Layerr({
                                            info: {
                                                code: E.LinkUnsupportedAuthType
                                            }
                                        }, "Unsupported auth type for file link: ".concat(t5.authType));
                                }
                                return r4;
                            }
                            var we = "https://github.com/perry-mitchell/webdav-client/blob/master/LOCK_CONTACT.md";
                            function Ee(t5) {
                                var e5 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r4 = e5.authType, n2 = r4 === void 0 ? null : r4, i2 = e5.contactHref, o2 = i2 === void 0 ? we : i2, s2 = e5.headers, a2 = s2 === void 0 ? {} : s2, u2 = e5.httpAgent, c2 = e5.httpsAgent, l2 = e5.maxBodyLength, h2 = e5.maxContentLength, f2 = e5.password, p2 = e5.token, g2 = e5.username, y2 = e5.withCredentials, m2 = n2;
                                m2 || (m2 = g2 || f2 ? w.Password : w.None);
                                var v2 = {
                                    authType: m2,
                                    contactHref: o2,
                                    headers: Object.assign({}, a2),
                                    httpAgent: u2,
                                    httpsAgent: c2,
                                    maxBodyLength: l2,
                                    maxContentLength: h2,
                                    remotePath: d(t5),
                                    remoteURL: t5,
                                    password: f2,
                                    token: p2,
                                    username: g2,
                                    withCredentials: y2
                                };
                                return x(v2, g2, f2, p2), {
                                    copyFile: function(t6, e6, r5) {
                                        return X(v2, t6, e6, r5);
                                    },
                                    createDirectory: function(t6, e6) {
                                        return xt(v2, t6, e6);
                                    },
                                    createReadStream: function(t6, e6) {
                                        return Ft(v2, t6, e6);
                                    },
                                    createWriteStream: function(t6, e6, r5) {
                                        return Rt(v2, t6, e6, r5);
                                    },
                                    customRequest: function(t6, e6) {
                                        return Mt(v2, t6, e6);
                                    },
                                    deleteFile: function(t6, e6) {
                                        return Lt(v2, t6, e6);
                                    },
                                    exists: function(t6, e6) {
                                        return Vt(v2, t6, e6);
                                    },
                                    getDirectoryContents: function(t6, e6) {
                                        return Gt(v2, t6, e6);
                                    },
                                    getFileContents: function(t6, e6) {
                                        return Zt(v2, t6, e6);
                                    },
                                    getFileDownloadLink: function(t6) {
                                        return Xt(v2, t6);
                                    },
                                    getFileUploadLink: function(t6) {
                                        return _e(v2, t6);
                                    },
                                    getHeaders: function() {
                                        return Object.assign({}, v2.headers);
                                    },
                                    getQuota: function(t6) {
                                        return fe(v2, t6);
                                    },
                                    lock: function(t6, e6) {
                                        return ae(v2, t6, e6);
                                    },
                                    moveFile: function(t6, e6, r5) {
                                        return pe(v2, t6, e6, r5);
                                    },
                                    putFileContents: function(t6, e6, r5) {
                                        return be(v2, t6, e6, r5);
                                    },
                                    setHeaders: function(t6) {
                                        v2.headers = Object.assign({}, t6);
                                    },
                                    stat: function(t6, e6) {
                                        return lt(v2, t6, e6);
                                    },
                                    unlock: function(t6, e6, r5) {
                                        return se(v2, t6, e6, r5);
                                    }
                                };
                            }
                        })(), i;
                    })();
                },
                2323: (t2)=>{
                    t2.exports = XMLHttpRequest;
                },
                6930: ()=>{},
                4126: ()=>{},
                6354: ()=>{}
            }, e = {};
            function r(n) {
                var i = e[n];
                if (i !== void 0) return i.exports;
                var o = e[n] = {
                    id: n,
                    loaded: false,
                    exports: {}
                };
                return t[n].call(o.exports, o, o.exports, r), o.loaded = true, o.exports;
            }
            return r.amdD = function() {
                throw new Error("define cannot be used indirect");
            }, r.amdO = {}, r.d = (t2, e2)=>{
                for(var n in e2)r.o(e2, n) && !r.o(t2, n) && Object.defineProperty(t2, n, {
                    enumerable: true,
                    get: e2[n]
                });
            }, r.g = function() {
                if (typeof globalThis == "object") return globalThis;
                try {
                    return this || new Function("return this")();
                } catch (t2) {
                    if (typeof window == "object") return window;
                }
            }(), r.o = (t2, e2)=>Object.prototype.hasOwnProperty.call(t2, e2)
            , r.r = (t2)=>{
                typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, {
                    value: "Module"
                }), Object.defineProperty(t2, "__esModule", {
                    value: true
                });
            }, r.nmd = (t2)=>(t2.paths = [], t2.children || (t2.children = []), t2)
            , r(8468);
        })();
    });
});
var __VIRTUAL_FILE$1 = getDefaultExportFromCjs(__VIRTUAL_FILE);
__VIRTUAL_FILE$1.init();
function distance(a, b) {
    if (a.length == 0) {
        return b.length;
    }
    if (b.length == 0) {
        return a.length;
    }
    const matrix = [];
    for(let i = 0; i <= b.length; i++){
        matrix[i] = [
            i
        ];
    }
    for(let j = 0; j <= a.length; j++){
        matrix[0][j] = j;
    }
    for(let i1 = 1; i1 <= b.length; i1++){
        for(let j = 1; j <= a.length; j++){
            if (b.charAt(i1 - 1) == a.charAt(j - 1)) {
                matrix[i1][j] = matrix[i1 - 1][j - 1];
            } else {
                matrix[i1][j] = Math.min(matrix[i1 - 1][j - 1] + 1, Math.min(matrix[i1][j - 1] + 1, matrix[i1 - 1][j] + 1));
            }
        }
    }
    return matrix[b.length][a.length];
}
function paramCaseToCamelCase(str) {
    return str.replace(/-([a-z])/g, (g)=>g[1].toUpperCase()
    );
}
function underscoreToCamelCase(str) {
    return str.replace(/([a-z])([A-Z])/g, "$1_$2").toLowerCase().replace(/_([a-z])/g, (g)=>g[1].toUpperCase()
    );
}
function getOption(flags, name) {
    while(name[0] === "-"){
        name = name.slice(1);
    }
    for (const flag of flags){
        if (isOption(flag, name)) {
            return flag;
        }
    }
    return;
}
function didYouMeanOption(option1, options) {
    const optionNames = options.map((option)=>[
            option.name,
            ...option.aliases ?? []
        ]
    ).flat().map((option)=>getFlag(option)
    );
    return didYouMean(" Did you mean option", getFlag(option1), optionNames);
}
function didYouMeanType(type, types) {
    return didYouMean(" Did you mean type", type, types);
}
function didYouMean(message, type, types) {
    const match = closest(type, types);
    return match ? `${message} "${match}"?` : "";
}
function getFlag(name) {
    if (name.startsWith("-")) {
        return name;
    }
    if (name.length > 1) {
        return `--${name}`;
    }
    return `-${name}`;
}
function isOption(option, name) {
    return option.name === name || option.aliases && option.aliases.indexOf(name) !== -1;
}
function matchWildCardOptions(name, flags) {
    for (const option of flags){
        if (option.name.indexOf("*") === -1) {
            continue;
        }
        let matched = matchWildCardOption(name, option);
        if (matched) {
            matched = {
                ...matched,
                name
            };
            flags.push(matched);
            return matched;
        }
    }
}
function matchWildCardOption(name, option) {
    const parts = option.name.split(".");
    const parts2 = name.split(".");
    if (parts.length !== parts2.length) {
        return false;
    }
    const count = Math.max(parts.length, parts2.length);
    for(let i = 0; i < count; i++){
        if (parts[i] !== parts2[i] && parts[i] !== "*") {
            return false;
        }
    }
    return option;
}
function closest(str, arr) {
    let minDistance = Infinity;
    let minIndex = 0;
    for(let i = 0; i < arr.length; i++){
        const dist = distance(str, arr[i]);
        if (dist < minDistance) {
            minDistance = dist;
            minIndex = i;
        }
    }
    return arr[minIndex];
}
function getDefaultValue(option) {
    return typeof option.default === "function" ? option.default() : option.default;
}
class FlagsError extends Error {
    constructor(message){
        super(message);
        Object.setPrototypeOf(this, FlagsError.prototype);
    }
}
class UnknownRequiredOption extends FlagsError {
    constructor(option, options){
        super(`Unknown required option "${getFlag(option)}".${didYouMeanOption(option, options)}`);
        Object.setPrototypeOf(this, UnknownRequiredOption.prototype);
    }
}
class UnknownConflictingOption extends FlagsError {
    constructor(option, options){
        super(`Unknown conflicting option "${getFlag(option)}".${didYouMeanOption(option, options)}`);
        Object.setPrototypeOf(this, UnknownConflictingOption.prototype);
    }
}
class UnknownType extends FlagsError {
    constructor(type, types){
        super(`Unknown type "${type}".${didYouMeanType(type, types)}`);
        Object.setPrototypeOf(this, UnknownType.prototype);
    }
}
class ValidationError extends FlagsError {
    constructor(message){
        super(message);
        Object.setPrototypeOf(this, ValidationError.prototype);
    }
}
class DuplicateOption extends ValidationError {
    constructor(name){
        super(`Option "${getFlag(name).replace(/^--no-/, "--")}" can only occur once, but was found several times.`);
        Object.setPrototypeOf(this, DuplicateOption.prototype);
    }
}
class InvalidOption extends ValidationError {
    constructor(option, options){
        super(`Invalid option "${getFlag(option)}".${didYouMeanOption(option, options)}`);
        Object.setPrototypeOf(this, InvalidOption.prototype);
    }
}
class UnknownOption extends ValidationError {
    constructor(option, options){
        super(`Unknown option "${getFlag(option)}".${didYouMeanOption(option, options)}`);
        Object.setPrototypeOf(this, UnknownOption.prototype);
    }
}
class MissingOptionValue extends ValidationError {
    constructor(option){
        super(`Missing value for option "${getFlag(option)}".`);
        Object.setPrototypeOf(this, MissingOptionValue.prototype);
    }
}
class InvalidOptionValue extends ValidationError {
    constructor(option, expected, value){
        super(`Option "${getFlag(option)}" must be of type "${expected}", but got "${value}".`);
        Object.setPrototypeOf(this, InvalidOptionValue.prototype);
    }
}
class OptionNotCombinable extends ValidationError {
    constructor(option){
        super(`Option "${getFlag(option)}" cannot be combined with other options.`);
        Object.setPrototypeOf(this, OptionNotCombinable.prototype);
    }
}
class ConflictingOption extends ValidationError {
    constructor(option, conflictingOption){
        super(`Option "${getFlag(option)}" conflicts with option "${getFlag(conflictingOption)}".`);
        Object.setPrototypeOf(this, ConflictingOption.prototype);
    }
}
class DependingOption extends ValidationError {
    constructor(option, dependingOption){
        super(`Option "${getFlag(option)}" depends on option "${getFlag(dependingOption)}".`);
        Object.setPrototypeOf(this, DependingOption.prototype);
    }
}
class MissingRequiredOption extends ValidationError {
    constructor(option){
        super(`Missing required option "${getFlag(option)}".`);
        Object.setPrototypeOf(this, MissingRequiredOption.prototype);
    }
}
class RequiredArgumentFollowsOptionalArgument extends ValidationError {
    constructor(arg){
        super(`An required argument cannot follow an optional argument, but "${arg}"  is defined as required.`);
        Object.setPrototypeOf(this, RequiredArgumentFollowsOptionalArgument.prototype);
    }
}
class ArgumentFollowsVariadicArgument extends ValidationError {
    constructor(arg){
        super(`An argument cannot follow an variadic argument, but got "${arg}".`);
        Object.setPrototypeOf(this, ArgumentFollowsVariadicArgument.prototype);
    }
}
class NoArguments extends ValidationError {
    constructor(){
        super(`No arguments.`);
        Object.setPrototypeOf(this, NoArguments.prototype);
    }
}
class InvalidTypeError extends ValidationError {
    constructor({ label , name , value: value1 , type  }, expected){
        super(`${label} "${name}" must be of type "${type}", but got "${value1}".` + (expected ? ` Expected values: ${expected.map((value)=>`"${value}"`
        ).join(", ")}` : ""));
        Object.setPrototypeOf(this, MissingOptionValue.prototype);
    }
}
var OptionType;
(function(OptionType1) {
    OptionType1["STRING"] = "string";
    OptionType1["NUMBER"] = "number";
    OptionType1["INTEGER"] = "integer";
    OptionType1["BOOLEAN"] = "boolean";
})(OptionType || (OptionType = {}));
function didYouMeanCommand(command1, commands, excludes = []) {
    const commandNames = commands.map((command2)=>command2.getName()
    ).filter((command3)=>!excludes.includes(command3)
    );
    return didYouMean(" Did you mean command", command1, commandNames);
}
const ARGUMENT_REGEX = /^[<\[].+[\]>]$/;
const ARGUMENT_DETAILS_REGEX = /[<\[:>\]]/;
function splitArguments(args) {
    const parts = args.trim().split(/[, =] */g);
    const typeParts = [];
    while(parts[parts.length - 1] && ARGUMENT_REGEX.test(parts[parts.length - 1])){
        typeParts.unshift(parts.pop());
    }
    const typeDefinition = typeParts.join(" ");
    return {
        flags: parts,
        typeDefinition,
        equalsSign: args.includes("=")
    };
}
function parseArgumentsDefinition(argsDefinition, validate = true, all) {
    const argumentDetails = [];
    let hasOptional = false;
    let hasVariadic = false;
    const parts = argsDefinition.split(/ +/);
    for (const arg of parts){
        if (validate && hasVariadic) {
            throw new ArgumentFollowsVariadicArgument(arg);
        }
        const parts = arg.split(ARGUMENT_DETAILS_REGEX);
        if (!parts[1]) {
            if (all) {
                argumentDetails.push(parts[0]);
            }
            continue;
        }
        const type = parts[2] || OptionType.STRING;
        const details = {
            optionalValue: arg[0] === "[",
            requiredValue: arg[0] === "<",
            name: parts[1],
            action: parts[3] || type,
            variadic: false,
            list: type ? arg.indexOf(type + "[]") !== -1 : false,
            type
        };
        if (validate && !details.optionalValue && hasOptional) {
            throw new RequiredArgumentFollowsOptionalArgument(details.name);
        }
        if (arg[0] === "[") {
            hasOptional = true;
        }
        if (details.name.length > 3) {
            const istVariadicLeft = details.name.slice(0, 3) === "...";
            const istVariadicRight = details.name.slice(-3) === "...";
            hasVariadic = details.variadic = istVariadicLeft || istVariadicRight;
            if (istVariadicLeft) {
                details.name = details.name.slice(3);
            } else if (istVariadicRight) {
                details.name = details.name.slice(0, -3);
            }
        }
        argumentDetails.push(details);
    }
    return argumentDetails;
}
function dedent(str) {
    const lines = str.split(/\r?\n|\r/g);
    let text = "";
    let indent = 0;
    for (const line of lines){
        if (text || line.trim()) {
            if (!text) {
                text = line.trimStart();
                indent = line.length - text.length;
            } else {
                text += line.slice(indent);
            }
            text += "\n";
        }
    }
    return text.trimEnd();
}
function getDescription(description, __short) {
    return __short ? description.trim().split("\n", 1)[0] : dedent(description);
}
class CommandError extends Error {
    constructor(message){
        super(message);
        Object.setPrototypeOf(this, CommandError.prototype);
    }
}
class ValidationError1 extends CommandError {
    exitCode;
    constructor(message, { exitCode  } = {}){
        super(message);
        Object.setPrototypeOf(this, ValidationError1.prototype);
        this.exitCode = exitCode ?? 1;
    }
}
class DuplicateOptionName extends CommandError {
    constructor(name){
        super(`Option with name "${getFlag(name)}" already exists.`);
        Object.setPrototypeOf(this, DuplicateOptionName.prototype);
    }
}
class MissingCommandName extends CommandError {
    constructor(){
        super("Missing command name.");
        Object.setPrototypeOf(this, MissingCommandName.prototype);
    }
}
class DuplicateCommandName extends CommandError {
    constructor(name){
        super(`Duplicate command name "${name}".`);
        Object.setPrototypeOf(this, DuplicateCommandName.prototype);
    }
}
class DuplicateCommandAlias extends CommandError {
    constructor(alias){
        super(`Duplicate command alias "${alias}".`);
        Object.setPrototypeOf(this, DuplicateCommandAlias.prototype);
    }
}
class CommandNotFound extends CommandError {
    constructor(name, commands, excluded){
        super(`Unknown command "${name}".${didYouMeanCommand(name, commands, excluded)}`);
        Object.setPrototypeOf(this, UnknownCommand.prototype);
    }
}
class DuplicateType extends CommandError {
    constructor(name){
        super(`Type with name "${name}" already exists.`);
        Object.setPrototypeOf(this, DuplicateType.prototype);
    }
}
class DuplicateCompletion extends CommandError {
    constructor(name){
        super(`Completion with name "${name}" already exists.`);
        Object.setPrototypeOf(this, DuplicateCompletion.prototype);
    }
}
class DuplicateExample extends CommandError {
    constructor(name){
        super(`Example with name "${name}" already exists.`);
        Object.setPrototypeOf(this, DuplicateExample.prototype);
    }
}
class DuplicateEnvironmentVariable extends CommandError {
    constructor(name){
        super(`Environment variable with name "${name}" already exists.`);
        Object.setPrototypeOf(this, DuplicateEnvironmentVariable.prototype);
    }
}
class MissingRequiredEnvVar extends ValidationError1 {
    constructor(envVar){
        super(`Missing required environment variable "${envVar.names[0]}".`);
        Object.setPrototypeOf(this, MissingRequiredEnvVar.prototype);
    }
}
class EnvironmentVariableSingleValue extends CommandError {
    constructor(name){
        super(`An environment variable can only have one value, but "${name}" has more than one.`);
        Object.setPrototypeOf(this, EnvironmentVariableSingleValue.prototype);
    }
}
class EnvironmentVariableOptionalValue extends CommandError {
    constructor(name){
        super(`An environment variable cannot have an optional value, but "${name}" is defined as optional.`);
        Object.setPrototypeOf(this, EnvironmentVariableOptionalValue.prototype);
    }
}
class EnvironmentVariableVariadicValue extends CommandError {
    constructor(name){
        super(`An environment variable cannot have an variadic value, but "${name}" is defined as variadic.`);
        Object.setPrototypeOf(this, EnvironmentVariableVariadicValue.prototype);
    }
}
class DefaultCommandNotFound extends CommandError {
    constructor(name, commands){
        super(`Default command "${name}" not found.${didYouMeanCommand(name, commands)}`);
        Object.setPrototypeOf(this, DefaultCommandNotFound.prototype);
    }
}
class CommandExecutableNotFound extends CommandError {
    constructor(name){
        super(`Command executable not found: ${name}`);
        Object.setPrototypeOf(this, CommandExecutableNotFound.prototype);
    }
}
class UnknownCompletionCommand extends CommandError {
    constructor(name, commands){
        super(`Auto-completion failed. Unknown command "${name}".${didYouMeanCommand(name, commands)}`);
        Object.setPrototypeOf(this, UnknownCompletionCommand.prototype);
    }
}
class UnknownCommand extends ValidationError1 {
    constructor(name, commands, excluded){
        super(`Unknown command "${name}".${didYouMeanCommand(name, commands, excluded)}`);
        Object.setPrototypeOf(this, UnknownCommand.prototype);
    }
}
class NoArgumentsAllowed extends ValidationError1 {
    constructor(name){
        super(`No arguments allowed for command "${name}".`);
        Object.setPrototypeOf(this, NoArgumentsAllowed.prototype);
    }
}
class MissingArguments extends ValidationError1 {
    constructor(args){
        super("Missing argument(s): " + args.join(", "));
        Object.setPrototypeOf(this, MissingArguments.prototype);
    }
}
class MissingArgument extends ValidationError1 {
    constructor(arg){
        super(`Missing argument "${arg}".`);
        Object.setPrototypeOf(this, MissingArgument.prototype);
    }
}
class TooManyArguments extends ValidationError1 {
    constructor(args){
        super(`Too many arguments: ${args.join(" ")}`);
        Object.setPrototypeOf(this, TooManyArguments.prototype);
    }
}
const __boolean = (type)=>{
    if (~[
        "1",
        "true"
    ].indexOf(type.value)) {
        return true;
    }
    if (~[
        "0",
        "false"
    ].indexOf(type.value)) {
        return false;
    }
    throw new InvalidTypeError(type);
};
const number = (type)=>{
    const value = Number(type.value);
    if (Number.isFinite(value)) {
        return value;
    }
    throw new InvalidTypeError(type);
};
const string = ({ value  })=>{
    return value;
};
function validateFlags(opts, values, optionNameMap = {}) {
    if (!opts.flags?.length) {
        return;
    }
    const defaultValues = setDefaultValues(opts, values, optionNameMap);
    const optionNames = Object.keys(values);
    if (!optionNames.length && opts.allowEmpty) {
        return;
    }
    const options = optionNames.map((name)=>({
            name,
            option: getOption(opts.flags, optionNameMap[name])
        })
    );
    for (const { name: name1 , option  } of options){
        if (!option) {
            throw new UnknownOption(name1, opts.flags);
        }
        if (validateStandaloneOption(option, options, optionNames, defaultValues)) {
            return;
        }
        validateConflictingOptions(option, values);
        validateDependingOptions(option, values, defaultValues);
        validateRequiredValues(option, values, name1);
    }
    validateRequiredOptions(options, values, opts);
}
function setDefaultValues(opts, values, optionNameMap = {}) {
    const defaultValues = {};
    if (!opts.flags?.length) {
        return defaultValues;
    }
    for (const option of opts.flags){
        let name;
        let defaultValue = undefined;
        if (option.name.startsWith("no-")) {
            const propName = option.name.replace(/^no-/, "");
            if (propName in values) {
                continue;
            }
            const positiveOption = getOption(opts.flags, propName);
            if (positiveOption) {
                continue;
            }
            name = paramCaseToCamelCase(propName);
            defaultValue = true;
        }
        if (!name) {
            name = paramCaseToCamelCase(option.name);
        }
        if (!(name in optionNameMap)) {
            optionNameMap[name] = option.name;
        }
        const hasDefaultValue = (!opts.ignoreDefaults || typeof opts.ignoreDefaults[name] === "undefined") && typeof values[name] === "undefined" && (typeof option.default !== "undefined" || typeof defaultValue !== "undefined");
        if (hasDefaultValue) {
            values[name] = getDefaultValue(option) ?? defaultValue;
            defaultValues[option.name] = true;
            if (typeof option.value === "function") {
                values[name] = option.value(values[name]);
            }
        }
    }
    return defaultValues;
}
function validateStandaloneOption(option, options, optionNames, defaultValues) {
    if (!option.standalone) {
        return false;
    }
    if (optionNames.length === 1) {
        return true;
    }
    if (options.every((opt)=>opt.option && (option === opt.option || defaultValues[opt.option.name])
    )) {
        return true;
    }
    throw new OptionNotCombinable(option.name);
}
function validateConflictingOptions(option, values) {
    option.conflicts?.forEach((flag)=>{
        if (isset(flag, values)) {
            throw new ConflictingOption(option.name, flag);
        }
    });
}
function validateDependingOptions(option, values, defaultValues) {
    option.depends?.forEach((flag)=>{
        if (!isset(flag, values) && !defaultValues[option.name]) {
            throw new DependingOption(option.name, flag);
        }
    });
}
function validateRequiredValues(option, values, name) {
    const isArray = (option.args?.length || 0) > 1;
    option.args?.forEach((arg, i)=>{
        if (arg.requiredValue && (typeof values[name] === "undefined" || isArray && typeof values[name][i] === "undefined")) {
            throw new MissingOptionValue(option.name);
        }
    });
}
function validateRequiredOptions(options, values, opts) {
    if (!opts.flags?.length) {
        return;
    }
    for (const option of opts.flags){
        if (option.required && !(paramCaseToCamelCase(option.name) in values)) {
            if ((!option.conflicts || !option.conflicts.find((flag)=>!!values[flag]
            )) && !options.find((opt)=>opt.option?.conflicts?.find((flag)=>flag === option.name
                )
            )) {
                throw new MissingRequiredOption(option.name);
            }
        }
    }
}
function isset(flag, values) {
    const name = paramCaseToCamelCase(flag);
    return typeof values[name] !== "undefined";
}
const integer = (type)=>{
    const value = Number(type.value);
    if (Number.isInteger(value)) {
        return value;
    }
    throw new InvalidTypeError(type);
};
const Types = {
    [OptionType.STRING]: string,
    [OptionType.NUMBER]: number,
    [OptionType.INTEGER]: integer,
    [OptionType.BOOLEAN]: __boolean
};
function parseFlags(args, opts = {}) {
    args = args.slice();
    !opts.flags && (opts.flags = []);
    let inLiteral = false;
    let negate = false;
    const flags = {};
    const optionNameMap = {};
    let literal = [];
    let unknown = [];
    let stopEarly = null;
    opts.flags.forEach((opt)=>{
        opt.depends?.forEach((flag)=>{
            if (!opts.flags || !getOption(opts.flags, flag)) {
                throw new UnknownRequiredOption(flag, opts.flags ?? []);
            }
        });
        opt.conflicts?.forEach((flag)=>{
            if (!opts.flags || !getOption(opts.flags, flag)) {
                throw new UnknownConflictingOption(flag, opts.flags ?? []);
            }
        });
    });
    for(let argsIndex = 0; argsIndex < args.length; argsIndex++){
        let option1;
        let optionArgs1;
        let current = args[argsIndex];
        let currentValue;
        if (inLiteral) {
            literal.push(current);
            continue;
        }
        if (current === "--") {
            inLiteral = true;
            continue;
        }
        const isFlag = current.length > 1 && current[0] === "-";
        const next = ()=>currentValue ?? args[argsIndex + 1]
        ;
        if (isFlag) {
            const isShort = current[1] !== "-";
            const isLong = isShort ? false : current.length > 3 && current[2] !== "-";
            if (!isShort && !isLong) {
                throw new InvalidOption(current, opts.flags);
            }
            const equalSignIndex = current.indexOf("=");
            if (equalSignIndex > -1) {
                currentValue = current.slice(equalSignIndex + 1) || undefined;
                current = current.slice(0, equalSignIndex);
            }
            if (isShort && current.length > 2 && current[2] !== ".") {
                args.splice(argsIndex, 1, ...splitFlags(current));
                current = args[argsIndex];
            } else if (isLong && current.startsWith("--no-")) {
                negate = true;
            }
            option1 = getOption(opts.flags, current);
            if (!option1) {
                if (opts.flags.length) {
                    const name = current.replace(/^-+/g, "");
                    option1 = matchWildCardOptions(name, opts.flags);
                    if (!option1) {
                        throw new UnknownOption(current, opts.flags);
                    }
                }
                if (!option1) {
                    option1 = {
                        name: current.replace(/^-+/, ""),
                        optionalValue: true,
                        type: OptionType.STRING
                    };
                }
            }
            const positiveName = negate ? option1.name.replace(/^no-?/, "") : option1.name;
            const propName = paramCaseToCamelCase(positiveName);
            if (typeof flags[propName] !== "undefined") {
                if (!opts.flags.length) {
                    option1.collect = true;
                } else if (!option1.collect) {
                    throw new DuplicateOption(current);
                }
            }
            optionArgs1 = option1.args?.length ? option1.args : [
                {
                    type: option1.type,
                    requiredValue: option1.requiredValue,
                    optionalValue: option1.optionalValue,
                    variadic: option1.variadic,
                    list: option1.list,
                    separator: option1.separator
                }
            ];
            let optionArgsIndex = 0;
            let inOptionalArg = false;
            const previous = flags[propName];
            parseNext(option1, optionArgs1);
            if (typeof flags[propName] === "undefined") {
                if (optionArgs1[optionArgsIndex].requiredValue) {
                    throw new MissingOptionValue(option1.name);
                } else if (typeof option1.default !== "undefined") {
                    flags[propName] = getDefaultValue(option1);
                } else {
                    flags[propName] = true;
                }
            }
            if (option1.value) {
                flags[propName] = option1.value(flags[propName], previous);
            } else if (option1.collect) {
                const value = typeof previous !== "undefined" ? Array.isArray(previous) ? previous : [
                    previous
                ] : [];
                value.push(flags[propName]);
                flags[propName] = value;
            }
            optionNameMap[propName] = option1.name;
            opts.option?.(option1, flags[propName]);
            function parseNext(option3, optionArgs) {
                const arg1 = optionArgs[optionArgsIndex];
                if (!arg1) {
                    const flag = next();
                    throw new UnknownOption(flag, opts.flags ?? []);
                }
                if (!arg1.type) {
                    arg1.type = OptionType.BOOLEAN;
                }
                if (option3.args?.length) {
                    if ((typeof arg1.optionalValue === "undefined" || arg1.optionalValue === false) && typeof arg1.requiredValue === "undefined") {
                        arg1.requiredValue = true;
                    }
                } else {
                    if (arg1.type !== OptionType.BOOLEAN && (typeof arg1.optionalValue === "undefined" || arg1.optionalValue === false) && typeof arg1.requiredValue === "undefined") {
                        arg1.requiredValue = true;
                    }
                }
                if (arg1.requiredValue) {
                    if (inOptionalArg) {
                        throw new RequiredArgumentFollowsOptionalArgument(option3.name);
                    }
                } else {
                    inOptionalArg = true;
                }
                if (negate) {
                    flags[propName] = false;
                    return;
                }
                let result2;
                let increase = false;
                if (arg1.list && hasNext(arg1)) {
                    const parsed = next().split(arg1.separator || ",").map((nextValue)=>{
                        const value = parseValue(option3, arg1, nextValue);
                        if (typeof value === "undefined") {
                            throw new InvalidOptionValue(option3.name, arg1.type ?? "?", nextValue);
                        }
                        return value;
                    });
                    if (parsed?.length) {
                        result2 = parsed;
                    }
                } else {
                    if (hasNext(arg1)) {
                        result2 = parseValue(option3, arg1, next());
                    } else if (arg1.optionalValue && arg1.type === OptionType.BOOLEAN) {
                        result2 = true;
                    }
                }
                if (increase && typeof currentValue === "undefined") {
                    argsIndex++;
                    if (!arg1.variadic) {
                        optionArgsIndex++;
                    } else if (optionArgs[optionArgsIndex + 1]) {
                        throw new ArgumentFollowsVariadicArgument(next());
                    }
                }
                if (typeof result2 !== "undefined" && (optionArgs.length > 1 || arg1.variadic)) {
                    if (!flags[propName]) {
                        flags[propName] = [];
                    }
                    flags[propName].push(result2);
                    if (hasNext(arg1)) {
                        parseNext(option3, optionArgs);
                    }
                } else {
                    flags[propName] = result2;
                }
                function hasNext(arg) {
                    const nextValue = currentValue ?? args[argsIndex + 1];
                    if (!nextValue) {
                        return false;
                    }
                    if (optionArgs.length > 1 && optionArgsIndex >= optionArgs.length) {
                        return false;
                    }
                    if (arg.requiredValue) {
                        return true;
                    }
                    if (option3.equalsSign && arg.optionalValue && !arg.variadic && typeof currentValue === "undefined") {
                        return false;
                    }
                    if (arg.optionalValue || arg.variadic) {
                        return nextValue[0] !== "-" || arg.type === OptionType.NUMBER && !isNaN(Number(nextValue));
                    }
                    return false;
                }
                function parseValue(option, arg, value) {
                    const type = arg.type || OptionType.STRING;
                    const result = opts.parse ? opts.parse({
                        label: "Option",
                        type,
                        name: `--${option.name}`,
                        value
                    }) : parseFlagValue(option, arg, value);
                    if (typeof result !== "undefined") {
                        increase = true;
                    }
                    return result;
                }
            }
        } else {
            if (opts.stopEarly) {
                stopEarly = current;
                break;
            }
            unknown.push(current);
        }
    }
    if (stopEarly) {
        const stopEarlyArgIndex = args.indexOf(stopEarly);
        if (stopEarlyArgIndex !== -1) {
            const doubleDashIndex = args.indexOf("--");
            unknown = args.slice(stopEarlyArgIndex, doubleDashIndex === -1 ? undefined : doubleDashIndex);
            if (doubleDashIndex !== -1) {
                literal = args.slice(doubleDashIndex + 1);
            }
        }
    }
    validateFlags(opts, flags, optionNameMap);
    const result1 = Object.keys(flags).reduce((result3, key)=>{
        if (~key.indexOf(".")) {
            key.split(".").reduce((result, subKey, index, parts)=>{
                if (index === parts.length - 1) {
                    result[subKey] = flags[key];
                } else {
                    result[subKey] = result[subKey] ?? {};
                }
                return result[subKey];
            }, result3);
        } else {
            result3[key] = flags[key];
        }
        return result3;
    }, {});
    return {
        flags: result1,
        unknown,
        literal
    };
}
function splitFlags(flag) {
    const normalized = [];
    const flags = flag.slice(1).split("");
    if (isNaN(Number(flag[flag.length - 1]))) {
        flags.forEach((val)=>normalized.push(`-${val}`)
        );
    } else {
        normalized.push(`-${flags.shift()}`);
        if (flags.length) {
            normalized.push(flags.join(""));
        }
    }
    return normalized;
}
function parseFlagValue(option, arg, value) {
    const type = arg.type || OptionType.STRING;
    const parseType = Types[type];
    if (!parseType) {
        throw new UnknownType(type, Object.keys(Types));
    }
    return parseType({
        label: "Option",
        type,
        name: `--${option.name}`,
        value
    });
}
const { Deno: Deno1  } = globalThis;
const noColor = typeof Deno1?.noColor === "boolean" ? Deno1.noColor : true;
let enabled = !noColor;
function setColorEnabled(value) {
    if (noColor) {
        return;
    }
    enabled = value;
}
function getColorEnabled() {
    return enabled;
}
function code(open, close) {
    return {
        open: `\x1b[${open.join(";")}m`,
        close: `\x1b[${close}m`,
        regexp: new RegExp(`\\x1b\\[${close}m`, "g")
    };
}
function run(str, code1) {
    return enabled ? `${code1.open}${str.replace(code1.regexp, code1.open)}${code1.close}` : str;
}
function bold(str) {
    return run(str, code([
        1
    ], 22));
}
function dim(str) {
    return run(str, code([
        2
    ], 22));
}
function italic(str) {
    return run(str, code([
        3
    ], 23));
}
function underline(str) {
    return run(str, code([
        4
    ], 24));
}
function red(str) {
    return run(str, code([
        31
    ], 39));
}
function green(str) {
    return run(str, code([
        32
    ], 39));
}
function yellow(str) {
    return run(str, code([
        33
    ], 39));
}
function blue(str) {
    return run(str, code([
        34
    ], 39));
}
function magenta(str) {
    return run(str, code([
        35
    ], 39));
}
const ANSI_PATTERN = new RegExp([
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))", 
].join("|"), "g");
function stripColor(string1) {
    return string1.replace(ANSI_PATTERN, "");
}
class Type {
}
class BooleanType extends Type {
    parse(type) {
        return __boolean(type);
    }
    complete() {
        return [
            "true",
            "false"
        ];
    }
}
class StringType extends Type {
    parse(type) {
        return string(type);
    }
}
class FileType extends StringType {
    constructor(){
        super();
    }
}
class NumberType extends Type {
    parse(type) {
        return number(type);
    }
}
const border = {
    top: "─",
    topMid: "┬",
    topLeft: "┌",
    topRight: "┐",
    bottom: "─",
    bottomMid: "┴",
    bottomLeft: "└",
    bottomRight: "┘",
    left: "│",
    leftMid: "├",
    mid: "─",
    midMid: "┼",
    right: "│",
    rightMid: "┤",
    middle: "│"
};
class Cell {
    options;
    get length() {
        return this.toString().length;
    }
    static from(value) {
        const cell = new this(value);
        if (value instanceof Cell) {
            cell.options = {
                ...value.options
            };
        }
        return cell;
    }
    constructor(value){
        this.value = value;
        this.options = {};
    }
    toString() {
        return this.value.toString();
    }
    setValue(value) {
        this.value = value;
        return this;
    }
    clone(value) {
        const cell = new Cell(value ?? this);
        cell.options = {
            ...this.options
        };
        return cell;
    }
    border(enable, override = true) {
        if (override || typeof this.options.border === "undefined") {
            this.options.border = enable;
        }
        return this;
    }
    colSpan(span, override = true) {
        if (override || typeof this.options.colSpan === "undefined") {
            this.options.colSpan = span;
        }
        return this;
    }
    rowSpan(span, override = true) {
        if (override || typeof this.options.rowSpan === "undefined") {
            this.options.rowSpan = span;
        }
        return this;
    }
    align(direction, override = true) {
        if (override || typeof this.options.align === "undefined") {
            this.options.align = direction;
        }
        return this;
    }
    getBorder() {
        return this.options.border === true;
    }
    getColSpan() {
        return typeof this.options.colSpan === "number" && this.options.colSpan > 0 ? this.options.colSpan : 1;
    }
    getRowSpan() {
        return typeof this.options.rowSpan === "number" && this.options.rowSpan > 0 ? this.options.rowSpan : 1;
    }
    getAlign() {
        return this.options.align ?? "left";
    }
    value;
}
class Row extends Array {
    options = {};
    static from(cells) {
        const row = new this(...cells);
        if (cells instanceof Row) {
            row.options = {
                ...cells.options
            };
        }
        return row;
    }
    clone() {
        const row = new Row(...this.map((cell)=>cell instanceof Cell ? cell.clone() : cell
        ));
        row.options = {
            ...this.options
        };
        return row;
    }
    border(enable, override = true) {
        if (override || typeof this.options.border === "undefined") {
            this.options.border = enable;
        }
        return this;
    }
    align(direction, override = true) {
        if (override || typeof this.options.align === "undefined") {
            this.options.align = direction;
        }
        return this;
    }
    getBorder() {
        return this.options.border === true;
    }
    hasBorder() {
        return this.getBorder() || this.some((cell)=>cell instanceof Cell && cell.getBorder()
        );
    }
    getAlign() {
        return this.options.align ?? "left";
    }
}
function consumeWords(length, content) {
    let consumed = "";
    const words = content.split("\n")[0]?.split(/ /g);
    for(let i = 0; i < words.length; i++){
        const word = words[i];
        if (consumed) {
            const nextLength = strLength(word);
            const consumedLength = strLength(consumed);
            if (consumedLength + nextLength >= length) {
                break;
            }
        }
        consumed += (i > 0 ? " " : "") + word;
    }
    return consumed;
}
function longest(index, rows, maxWidth) {
    const cellLengths = rows.map((row)=>{
        const cell = row[index];
        const cellValue = cell instanceof Cell && cell.getColSpan() > 1 ? "" : cell?.toString() || "";
        return cellValue.split("\n").map((line)=>{
            const str = typeof maxWidth === "undefined" ? line : consumeWords(maxWidth, line);
            return strLength(str) || 0;
        });
    }).flat();
    return Math.max(...cellLengths);
}
const strLength = (str)=>{
    str = stripColor(str);
    let length = 0;
    for(let i = 0; i < str.length; i++){
        const charCode = str.charCodeAt(i);
        if (charCode >= 19968 && charCode <= 40869) {
            length += 2;
        } else {
            length += 1;
        }
    }
    return length;
};
class TableLayout {
    constructor(table, options){
        this.table = table;
        this.options = options;
    }
    toString() {
        const opts = this.createLayout();
        return opts.rows.length ? this.renderRows(opts) : "";
    }
    createLayout() {
        Object.keys(this.options.chars).forEach((key)=>{
            if (typeof this.options.chars[key] !== "string") {
                this.options.chars[key] = "";
            }
        });
        const hasBodyBorder = this.table.getBorder() || this.table.hasBodyBorder();
        const hasHeaderBorder = this.table.hasHeaderBorder();
        const hasBorder = hasHeaderBorder || hasBodyBorder;
        const rows = this.#getRows();
        const columns = Math.max(...rows.map((row)=>row.length
        ));
        for (const row1 of rows){
            const length = row1.length;
            if (length < columns) {
                const diff = columns - length;
                for(let i = 0; i < diff; i++){
                    row1.push(this.createCell(null, row1));
                }
            }
        }
        const padding = [];
        const width = [];
        for(let colIndex = 0; colIndex < columns; colIndex++){
            const minColWidth = Array.isArray(this.options.minColWidth) ? this.options.minColWidth[colIndex] : this.options.minColWidth;
            const maxColWidth = Array.isArray(this.options.maxColWidth) ? this.options.maxColWidth[colIndex] : this.options.maxColWidth;
            const colWidth = longest(colIndex, rows, maxColWidth);
            width[colIndex] = Math.min(maxColWidth, Math.max(minColWidth, colWidth));
            padding[colIndex] = Array.isArray(this.options.padding) ? this.options.padding[colIndex] : this.options.padding;
        }
        return {
            padding,
            width,
            rows,
            columns,
            hasBorder,
            hasBodyBorder,
            hasHeaderBorder
        };
    }
     #getRows() {
        const header = this.table.getHeader();
        const rows = header ? [
            header,
            ...this.table
        ] : this.table.slice();
        const hasSpan = rows.some((row)=>row.some((cell)=>cell instanceof Cell && (cell.getColSpan() > 1 || cell.getRowSpan() > 1)
            )
        );
        if (hasSpan) {
            return this.spanRows(rows);
        }
        return rows.map((row)=>{
            const newRow = this.createRow(row);
            return newRow.map((cell)=>this.createCell(cell, newRow)
            );
        });
    }
    spanRows(_rows, rowIndex = 0, colIndex = 0, rowSpan = [], colSpan = 1) {
        const rows = _rows;
        if (rowIndex >= rows.length && rowSpan.every((span)=>span === 1
        )) {
            return rows;
        } else if (rows[rowIndex] && colIndex >= rows[rowIndex].length && colIndex >= rowSpan.length && colSpan === 1) {
            return this.spanRows(rows, ++rowIndex, 0, rowSpan, 1);
        }
        if (colSpan > 1) {
            colSpan--;
            rowSpan[colIndex] = rowSpan[colIndex - 1];
            rows[rowIndex].splice(colIndex - 1, 0, rows[rowIndex][colIndex - 1]);
            return this.spanRows(rows, rowIndex, ++colIndex, rowSpan, colSpan);
        }
        if (colIndex === 0) {
            rows[rowIndex] = this.createRow(rows[rowIndex] || []);
        }
        if (rowSpan[colIndex] > 1) {
            rowSpan[colIndex]--;
            rows[rowIndex].splice(colIndex, 0, rows[rowIndex - 1][colIndex]);
            return this.spanRows(rows, rowIndex, ++colIndex, rowSpan, colSpan);
        }
        rows[rowIndex][colIndex] = this.createCell(rows[rowIndex][colIndex] || null, rows[rowIndex]);
        colSpan = rows[rowIndex][colIndex].getColSpan();
        rowSpan[colIndex] = rows[rowIndex][colIndex].getRowSpan();
        return this.spanRows(rows, rowIndex, ++colIndex, rowSpan, colSpan);
    }
    createRow(row) {
        return Row.from(row).border(this.table.getBorder(), false).align(this.table.getAlign(), false);
    }
    createCell(cell, row) {
        return Cell.from(cell ?? "").border(row.getBorder(), false).align(row.getAlign(), false);
    }
    renderRows(opts) {
        let result = "";
        const rowSpan = new Array(opts.columns).fill(1);
        for(let rowIndex = 0; rowIndex < opts.rows.length; rowIndex++){
            result += this.renderRow(rowSpan, rowIndex, opts);
        }
        return result.slice(0, -1);
    }
    renderRow(rowSpan, rowIndex, opts, isMultiline) {
        const row = opts.rows[rowIndex];
        const prevRow = opts.rows[rowIndex - 1];
        const nextRow = opts.rows[rowIndex + 1];
        let result = "";
        let colSpan = 1;
        if (!isMultiline && rowIndex === 0 && row.hasBorder()) {
            result += this.renderBorderRow(undefined, row, rowSpan, opts);
        }
        let isMultilineRow = false;
        result += " ".repeat(this.options.indent || 0);
        for(let colIndex = 0; colIndex < opts.columns; colIndex++){
            if (colSpan > 1) {
                colSpan--;
                rowSpan[colIndex] = rowSpan[colIndex - 1];
                continue;
            }
            result += this.renderCell(colIndex, row, opts);
            if (rowSpan[colIndex] > 1) {
                if (!isMultiline) {
                    rowSpan[colIndex]--;
                }
            } else if (!prevRow || prevRow[colIndex] !== row[colIndex]) {
                rowSpan[colIndex] = row[colIndex].getRowSpan();
            }
            colSpan = row[colIndex].getColSpan();
            if (rowSpan[colIndex] === 1 && row[colIndex].length) {
                isMultilineRow = true;
            }
        }
        if (opts.columns > 0) {
            if (row[opts.columns - 1].getBorder()) {
                result += this.options.chars.right;
            } else if (opts.hasBorder) {
                result += " ";
            }
        }
        result += "\n";
        if (isMultilineRow) {
            return result + this.renderRow(rowSpan, rowIndex, opts, isMultilineRow);
        }
        if (rowIndex === 0 && opts.hasHeaderBorder || rowIndex < opts.rows.length - 1 && opts.hasBodyBorder) {
            result += this.renderBorderRow(row, nextRow, rowSpan, opts);
        }
        if (rowIndex === opts.rows.length - 1 && row.hasBorder()) {
            result += this.renderBorderRow(row, undefined, rowSpan, opts);
        }
        return result;
    }
    renderCell(colIndex, row, opts, noBorder) {
        let result = "";
        const prevCell = row[colIndex - 1];
        const cell = row[colIndex];
        if (!noBorder) {
            if (colIndex === 0) {
                if (cell.getBorder()) {
                    result += this.options.chars.left;
                } else if (opts.hasBorder) {
                    result += " ";
                }
            } else {
                if (cell.getBorder() || prevCell?.getBorder()) {
                    result += this.options.chars.middle;
                } else if (opts.hasBorder) {
                    result += " ";
                }
            }
        }
        let maxLength = opts.width[colIndex];
        const colSpan = cell.getColSpan();
        if (colSpan > 1) {
            for(let o = 1; o < colSpan; o++){
                maxLength += opts.width[colIndex + o] + opts.padding[colIndex + o];
                if (opts.hasBorder) {
                    maxLength += opts.padding[colIndex + o] + 1;
                }
            }
        }
        const { current , next  } = this.renderCellValue(cell, maxLength);
        row[colIndex].setValue(next);
        if (opts.hasBorder) {
            result += " ".repeat(opts.padding[colIndex]);
        }
        result += current;
        if (opts.hasBorder || colIndex < opts.columns - 1) {
            result += " ".repeat(opts.padding[colIndex]);
        }
        return result;
    }
    renderCellValue(cell, maxLength) {
        const length = Math.min(maxLength, strLength(cell.toString()));
        let words = consumeWords(length, cell.toString());
        const breakWord = strLength(words) > length;
        if (breakWord) {
            words = words.slice(0, length);
        }
        const next = cell.toString().slice(words.length + (breakWord ? 0 : 1));
        const fillLength = maxLength - strLength(words);
        const align = cell.getAlign();
        let current;
        if (fillLength === 0) {
            current = words;
        } else if (align === "left") {
            current = words + " ".repeat(fillLength);
        } else if (align === "center") {
            current = " ".repeat(Math.floor(fillLength / 2)) + words + " ".repeat(Math.ceil(fillLength / 2));
        } else if (align === "right") {
            current = " ".repeat(fillLength) + words;
        } else {
            throw new Error("Unknown direction: " + align);
        }
        return {
            current,
            next: cell.clone(next)
        };
    }
    renderBorderRow(prevRow, nextRow, rowSpan, opts) {
        let result = "";
        let colSpan = 1;
        for(let colIndex = 0; colIndex < opts.columns; colIndex++){
            if (rowSpan[colIndex] > 1) {
                if (!nextRow) {
                    throw new Error("invalid layout");
                }
                if (colSpan > 1) {
                    colSpan--;
                    continue;
                }
            }
            result += this.renderBorderCell(colIndex, prevRow, nextRow, rowSpan, opts);
            colSpan = nextRow?.[colIndex].getColSpan() ?? 1;
        }
        return result.length ? " ".repeat(this.options.indent) + result + "\n" : "";
    }
    renderBorderCell(colIndex, prevRow, nextRow, rowSpan, opts) {
        const a1 = prevRow?.[colIndex - 1];
        const a2 = nextRow?.[colIndex - 1];
        const b1 = prevRow?.[colIndex];
        const b2 = nextRow?.[colIndex];
        const a1Border = !!a1?.getBorder();
        const a2Border = !!a2?.getBorder();
        const b1Border = !!b1?.getBorder();
        const b2Border = !!b2?.getBorder();
        const hasColSpan = (cell)=>(cell?.getColSpan() ?? 1) > 1
        ;
        const hasRowSpan = (cell)=>(cell?.getRowSpan() ?? 1) > 1
        ;
        let result = "";
        if (colIndex === 0) {
            if (rowSpan[colIndex] > 1) {
                if (b1Border) {
                    result += this.options.chars.left;
                } else {
                    result += " ";
                }
            } else if (b1Border && b2Border) {
                result += this.options.chars.leftMid;
            } else if (b1Border) {
                result += this.options.chars.bottomLeft;
            } else if (b2Border) {
                result += this.options.chars.topLeft;
            } else {
                result += " ";
            }
        } else if (colIndex < opts.columns) {
            if (a1Border && b2Border || b1Border && a2Border) {
                const a1ColSpan = hasColSpan(a1);
                const a2ColSpan = hasColSpan(a2);
                const b1ColSpan = hasColSpan(b1);
                const b2ColSpan = hasColSpan(b2);
                const a1RowSpan = hasRowSpan(a1);
                const a2RowSpan = hasRowSpan(a2);
                const b1RowSpan = hasRowSpan(b1);
                const b2RowSpan = hasRowSpan(b2);
                const hasAllBorder = a1Border && b2Border && b1Border && a2Border;
                const hasAllRowSpan = a1RowSpan && b1RowSpan && a2RowSpan && b2RowSpan;
                const hasAllColSpan = a1ColSpan && b1ColSpan && a2ColSpan && b2ColSpan;
                if (hasAllRowSpan && hasAllBorder) {
                    result += this.options.chars.middle;
                } else if (hasAllColSpan && hasAllBorder && a1 === b1 && a2 === b2) {
                    result += this.options.chars.mid;
                } else if (a1ColSpan && b1ColSpan && a1 === b1) {
                    result += this.options.chars.topMid;
                } else if (a2ColSpan && b2ColSpan && a2 === b2) {
                    result += this.options.chars.bottomMid;
                } else if (a1RowSpan && a2RowSpan && a1 === a2) {
                    result += this.options.chars.leftMid;
                } else if (b1RowSpan && b2RowSpan && b1 === b2) {
                    result += this.options.chars.rightMid;
                } else {
                    result += this.options.chars.midMid;
                }
            } else if (a1Border && b1Border) {
                if (hasColSpan(a1) && hasColSpan(b1) && a1 === b1) {
                    result += this.options.chars.bottom;
                } else {
                    result += this.options.chars.bottomMid;
                }
            } else if (b1Border && b2Border) {
                if (rowSpan[colIndex] > 1) {
                    result += this.options.chars.left;
                } else {
                    result += this.options.chars.leftMid;
                }
            } else if (b2Border && a2Border) {
                if (hasColSpan(a2) && hasColSpan(b2) && a2 === b2) {
                    result += this.options.chars.top;
                } else {
                    result += this.options.chars.topMid;
                }
            } else if (a1Border && a2Border) {
                if (hasRowSpan(a1) && a1 === a2) {
                    result += this.options.chars.right;
                } else {
                    result += this.options.chars.rightMid;
                }
            } else if (a1Border) {
                result += this.options.chars.bottomRight;
            } else if (b1Border) {
                result += this.options.chars.bottomLeft;
            } else if (a2Border) {
                result += this.options.chars.topRight;
            } else if (b2Border) {
                result += this.options.chars.topLeft;
            } else {
                result += " ";
            }
        }
        const length = opts.padding[colIndex] + opts.width[colIndex] + opts.padding[colIndex];
        if (rowSpan[colIndex] > 1 && nextRow) {
            result += this.renderCell(colIndex, nextRow, opts, true);
            if (nextRow[colIndex] === nextRow[nextRow.length - 1]) {
                if (b1Border) {
                    result += this.options.chars.right;
                } else {
                    result += " ";
                }
                return result;
            }
        } else if (b1Border && b2Border) {
            result += this.options.chars.mid.repeat(length);
        } else if (b1Border) {
            result += this.options.chars.bottom.repeat(length);
        } else if (b2Border) {
            result += this.options.chars.top.repeat(length);
        } else {
            result += " ".repeat(length);
        }
        if (colIndex === opts.columns - 1) {
            if (b1Border && b2Border) {
                result += this.options.chars.rightMid;
            } else if (b1Border) {
                result += this.options.chars.bottomRight;
            } else if (b2Border) {
                result += this.options.chars.topRight;
            } else {
                result += " ";
            }
        }
        return result;
    }
    table;
    options;
}
class Table extends Array {
    static _chars = {
        ...border
    };
    options = {
        indent: 0,
        border: false,
        maxColWidth: Infinity,
        minColWidth: 0,
        padding: 1,
        chars: {
            ...Table._chars
        }
    };
    headerRow;
    static from(rows) {
        const table = new this(...rows);
        if (rows instanceof Table) {
            table.options = {
                ...rows.options
            };
            table.headerRow = rows.headerRow ? Row.from(rows.headerRow) : undefined;
        }
        return table;
    }
    static fromJson(rows) {
        return new this().fromJson(rows);
    }
    static chars(chars) {
        Object.assign(this._chars, chars);
        return this;
    }
    static render(rows) {
        Table.from(rows).render();
    }
    fromJson(rows) {
        this.header(Object.keys(rows[0]));
        this.body(rows.map((row)=>Object.values(row)
        ));
        return this;
    }
    header(header) {
        this.headerRow = header instanceof Row ? header : Row.from(header);
        return this;
    }
    body(rows) {
        this.length = 0;
        this.push(...rows);
        return this;
    }
    clone() {
        const table = new Table(...this.map((row)=>row instanceof Row ? row.clone() : Row.from(row).clone()
        ));
        table.options = {
            ...this.options
        };
        table.headerRow = this.headerRow?.clone();
        return table;
    }
    toString() {
        return new TableLayout(this, this.options).toString();
    }
    render() {
        console.log(this.toString());
        return this;
    }
    maxColWidth(width, override = true) {
        if (override || typeof this.options.maxColWidth === "undefined") {
            this.options.maxColWidth = width;
        }
        return this;
    }
    minColWidth(width, override = true) {
        if (override || typeof this.options.minColWidth === "undefined") {
            this.options.minColWidth = width;
        }
        return this;
    }
    indent(width, override = true) {
        if (override || typeof this.options.indent === "undefined") {
            this.options.indent = width;
        }
        return this;
    }
    padding(padding, override = true) {
        if (override || typeof this.options.padding === "undefined") {
            this.options.padding = padding;
        }
        return this;
    }
    border(enable, override = true) {
        if (override || typeof this.options.border === "undefined") {
            this.options.border = enable;
        }
        return this;
    }
    align(direction, override = true) {
        if (override || typeof this.options.align === "undefined") {
            this.options.align = direction;
        }
        return this;
    }
    chars(chars) {
        Object.assign(this.options.chars, chars);
        return this;
    }
    getHeader() {
        return this.headerRow;
    }
    getBody() {
        return [
            ...this
        ];
    }
    getMaxColWidth() {
        return this.options.maxColWidth;
    }
    getMinColWidth() {
        return this.options.minColWidth;
    }
    getIndent() {
        return this.options.indent;
    }
    getPadding() {
        return this.options.padding;
    }
    getBorder() {
        return this.options.border === true;
    }
    hasHeaderBorder() {
        const hasBorder = this.headerRow?.hasBorder();
        return hasBorder === true || this.getBorder() && hasBorder !== false;
    }
    hasBodyBorder() {
        return this.getBorder() || this.some((row)=>row instanceof Row ? row.hasBorder() : row.some((cell)=>cell instanceof Cell ? cell.getBorder : false
            )
        );
    }
    hasBorder() {
        return this.hasHeaderBorder() || this.hasBodyBorder();
    }
    getAlign() {
        return this.options.align ?? "left";
    }
}
class HelpGenerator {
    indent;
    options;
    static generate(cmd, options) {
        return new HelpGenerator(cmd, options).generate();
    }
    constructor(cmd, options = {}){
        this.cmd = cmd;
        this.indent = 2;
        this.options = {
            types: false,
            hints: true,
            colors: true,
            long: false,
            ...options
        };
    }
    generate() {
        const areColorsEnabled = getColorEnabled();
        setColorEnabled(this.options.colors);
        const result = this.generateHeader() + this.generateMeta() + this.generateDescription() + this.generateOptions() + this.generateCommands() + this.generateEnvironmentVariables() + this.generateExamples();
        setColorEnabled(areColorsEnabled);
        return result;
    }
    generateHeader() {
        const usage = this.cmd.getUsage();
        const rows = [
            [
                bold("Usage:"),
                magenta(this.cmd.getPath() + (usage ? " " + highlightArguments(usage, this.options.types) : "")), 
            ], 
        ];
        const version = this.cmd.getVersion();
        if (version) {
            rows.push([
                bold("Version:"),
                yellow(`${this.cmd.getVersion()}`)
            ]);
        }
        return "\n" + Table.from(rows).indent(this.indent).padding(1).toString() + "\n";
    }
    generateMeta() {
        const meta = Object.entries(this.cmd.getMeta());
        if (!meta.length) {
            return "";
        }
        const rows = [];
        for (const [name, value] of meta){
            rows.push([
                bold(`${name}: `) + value
            ]);
        }
        return "\n" + Table.from(rows).indent(this.indent).padding(1).toString() + "\n";
    }
    generateDescription() {
        if (!this.cmd.getDescription()) {
            return "";
        }
        return this.label("Description") + Table.from([
            [
                dedent(this.cmd.getDescription())
            ], 
        ]).indent(this.indent * 2).maxColWidth(140).padding(1).toString() + "\n";
    }
    generateOptions() {
        const options = this.cmd.getOptions(false);
        if (!options.length) {
            return "";
        }
        let groups = [];
        const hasGroups = options.some((option)=>option.groupName
        );
        if (hasGroups) {
            for (const option of options){
                let group1 = groups.find((group)=>group.name === option.groupName
                );
                if (!group1) {
                    group1 = {
                        name: option.groupName,
                        options: []
                    };
                    groups.push(group1);
                }
                group1.options.push(option);
            }
        } else {
            groups = [
                {
                    name: "Options",
                    options
                }
            ];
        }
        let result = "";
        for (const group2 of groups){
            result += this.generateOptionGroup(group2);
        }
        return result;
    }
    generateOptionGroup(group) {
        if (!group.options.length) {
            return "";
        }
        const hasTypeDefinitions = !!group.options.find((option)=>!!option.typeDefinition
        );
        if (hasTypeDefinitions) {
            return this.label(group.name ?? "Options") + Table.from([
                ...group.options.map((option)=>[
                        option.flags.map((flag)=>blue(flag)
                        ).join(", "),
                        highlightArguments(option.typeDefinition || "", this.options.types),
                        red(bold("-")),
                        getDescription(option.description, !this.options.long),
                        this.generateHints(option), 
                    ]
                ), 
            ]).padding([
                2,
                2,
                1,
                2
            ]).indent(this.indent * 2).maxColWidth([
                60,
                60,
                1,
                80,
                60
            ]).toString() + "\n";
        }
        return this.label(group.name ?? "Options") + Table.from([
            ...group.options.map((option)=>[
                    option.flags.map((flag)=>blue(flag)
                    ).join(", "),
                    red(bold("-")),
                    getDescription(option.description, !this.options.long),
                    this.generateHints(option), 
                ]
            ), 
        ]).indent(this.indent * 2).maxColWidth([
            60,
            1,
            80,
            60
        ]).padding([
            2,
            1,
            2
        ]).toString() + "\n";
    }
    generateCommands() {
        const commands = this.cmd.getCommands(false);
        if (!commands.length) {
            return "";
        }
        const hasTypeDefinitions = !!commands.find((command4)=>!!command4.getArgsDefinition()
        );
        if (hasTypeDefinitions) {
            return this.label("Commands") + Table.from([
                ...commands.map((command5)=>[
                        [
                            command5.getName(),
                            ...command5.getAliases()
                        ].map((name)=>blue(name)
                        ).join(", "),
                        highlightArguments(command5.getArgsDefinition() || "", this.options.types),
                        red(bold("-")),
                        command5.getShortDescription(), 
                    ]
                ), 
            ]).indent(this.indent * 2).maxColWidth([
                60,
                60,
                1,
                80
            ]).padding([
                2,
                2,
                1,
                2
            ]).toString() + "\n";
        }
        return this.label("Commands") + Table.from([
            ...commands.map((command6)=>[
                    [
                        command6.getName(),
                        ...command6.getAliases()
                    ].map((name)=>blue(name)
                    ).join(", "),
                    red(bold("-")),
                    command6.getShortDescription(), 
                ]
            ), 
        ]).maxColWidth([
            60,
            1,
            80
        ]).padding([
            2,
            1,
            2
        ]).indent(this.indent * 2).toString() + "\n";
    }
    generateEnvironmentVariables() {
        const envVars = this.cmd.getEnvVars(false);
        if (!envVars.length) {
            return "";
        }
        return this.label("Environment variables") + Table.from([
            ...envVars.map((envVar)=>[
                    envVar.names.map((name)=>blue(name)
                    ).join(", "),
                    highlightArgumentDetails(envVar.details, this.options.types),
                    red(bold("-")),
                    this.options.long ? dedent(envVar.description) : envVar.description.trim().split("\n", 1)[0], 
                ]
            ), 
        ]).padding([
            2,
            2,
            1
        ]).indent(this.indent * 2).maxColWidth([
            60,
            60,
            1,
            80
        ]).toString() + "\n";
    }
    generateExamples() {
        const examples = this.cmd.getExamples();
        if (!examples.length) {
            return "";
        }
        return this.label("Examples") + Table.from(examples.map((example)=>[
                dim(bold(`${capitalize(example.name)}:`)),
                dedent(example.description), 
            ]
        )).padding(1).indent(this.indent * 2).maxColWidth(150).toString() + "\n";
    }
    generateHints(option) {
        if (!this.options.hints) {
            return "";
        }
        const hints = [];
        option.required && hints.push(yellow(`required`));
        typeof option.default !== "undefined" && hints.push(bold(`Default: `) + inspect(option.default, this.options.colors));
        option.depends?.length && hints.push(yellow(bold(`Depends: `)) + italic(option.depends.map(getFlag).join(", ")));
        option.conflicts?.length && hints.push(red(bold(`Conflicts: `)) + italic(option.conflicts.map(getFlag).join(", ")));
        const type = this.cmd.getType(option.args[0]?.type)?.handler;
        if (type instanceof Type) {
            const possibleValues = type.values?.(this.cmd, this.cmd.getParent());
            if (possibleValues?.length) {
                hints.push(bold(`Values: `) + possibleValues.map((value)=>inspect(value, this.options.colors)
                ).join(", "));
            }
        }
        if (hints.length) {
            return `(${hints.join(", ")})`;
        }
        return "";
    }
    label(label) {
        return "\n" + " ".repeat(this.indent) + bold(`${label}:`) + "\n\n";
    }
    cmd;
}
function capitalize(string2) {
    return (string2?.charAt(0).toUpperCase() + string2.slice(1)) ?? "";
}
function inspect(value, colors) {
    return Deno.inspect(value, {
        depth: 1,
        colors,
        trailingComma: false
    });
}
function highlightArguments(argsDefinition, types = true) {
    if (!argsDefinition) {
        return "";
    }
    return parseArgumentsDefinition(argsDefinition, false, true).map((arg)=>typeof arg === "string" ? arg : highlightArgumentDetails(arg, types)
    ).join(" ");
}
function highlightArgumentDetails(arg, types = true) {
    let str = "";
    str += yellow(arg.optionalValue ? "[" : "<");
    let name = "";
    name += arg.name;
    if (arg.variadic) {
        name += "...";
    }
    name = magenta(name);
    str += name;
    if (types) {
        str += yellow(":");
        str += red(arg.type);
        if (arg.list) {
            str += green("[]");
        }
    }
    str += yellow(arg.optionalValue ? "]" : ">");
    return str;
}
class IntegerType extends Type {
    parse(type) {
        return integer(type);
    }
}
class Command {
    types = new Map();
    rawArgs = [];
    literalArgs = [];
    _name = "COMMAND";
    _parent;
    _globalParent;
    ver;
    desc = "";
    _usage;
    fn;
    options = [];
    commands = new Map();
    examples = [];
    envVars = [];
    aliases = [];
    completions = new Map();
    cmd = this;
    argsDefinition;
    isExecutable = false;
    throwOnError = false;
    _allowEmpty = false;
    _stopEarly = false;
    defaultCommand;
    _useRawArgs = false;
    args = [];
    isHidden = false;
    isGlobal = false;
    hasDefaults = false;
    _versionOption;
    _helpOption;
    _help;
    _shouldExit;
    _meta = {};
    _groupName;
    versionOption(flags, desc, opts) {
        this._versionOption = flags === false ? flags : {
            flags,
            desc,
            opts: typeof opts === "function" ? {
                action: opts
            } : opts
        };
        return this;
    }
    helpOption(flags, desc, opts) {
        this._helpOption = flags === false ? flags : {
            flags,
            desc,
            opts: typeof opts === "function" ? {
                action: opts
            } : opts
        };
        return this;
    }
    command(nameAndArguments, cmdOrDescription, override) {
        this.reset();
        const result = splitArguments(nameAndArguments);
        const name = result.flags.shift();
        const aliases = result.flags;
        if (!name) {
            throw new MissingCommandName();
        }
        if (this.getBaseCommand(name, true)) {
            if (!override) {
                throw new DuplicateCommandName(name);
            }
            this.removeCommand(name);
        }
        let description;
        let cmd;
        if (typeof cmdOrDescription === "string") {
            description = cmdOrDescription;
        }
        if (cmdOrDescription instanceof Command) {
            cmd = cmdOrDescription.reset();
        } else {
            cmd = new Command();
        }
        cmd._name = name;
        cmd._parent = this;
        if (description) {
            cmd.description(description);
        }
        if (result.typeDefinition) {
            cmd.arguments(result.typeDefinition);
        }
        aliases.forEach((alias)=>cmd.alias(alias)
        );
        this.commands.set(name, cmd);
        this.select(name);
        return this;
    }
    alias(alias) {
        if (this.cmd._name === alias || this.cmd.aliases.includes(alias)) {
            throw new DuplicateCommandAlias(alias);
        }
        this.cmd.aliases.push(alias);
        return this;
    }
    reset() {
        this._groupName = undefined;
        this.cmd = this;
        return this;
    }
    select(name) {
        const cmd = this.getBaseCommand(name, true);
        if (!cmd) {
            throw new CommandNotFound(name, this.getBaseCommands(true));
        }
        this.cmd = cmd;
        return this;
    }
    name(name) {
        this.cmd._name = name;
        return this;
    }
    version(version) {
        if (typeof version === "string") {
            this.cmd.ver = ()=>version
            ;
        } else if (typeof version === "function") {
            this.cmd.ver = version;
        }
        return this;
    }
    meta(name, value) {
        this.cmd._meta[name] = value;
        return this;
    }
    getMeta(name) {
        return typeof name === "undefined" ? this._meta : this._meta[name];
    }
    help(help) {
        if (typeof help === "string") {
            this.cmd._help = ()=>help
            ;
        } else if (typeof help === "function") {
            this.cmd._help = help;
        } else {
            this.cmd._help = (cmd, options)=>HelpGenerator.generate(cmd, {
                    ...help,
                    ...options
                })
            ;
        }
        return this;
    }
    description(description) {
        this.cmd.desc = description;
        return this;
    }
    usage(usage) {
        this.cmd._usage = usage;
        return this;
    }
    hidden() {
        this.cmd.isHidden = true;
        return this;
    }
    global() {
        this.cmd.isGlobal = true;
        return this;
    }
    executable() {
        this.cmd.isExecutable = true;
        return this;
    }
    arguments(args) {
        this.cmd.argsDefinition = args;
        return this;
    }
    action(fn) {
        this.cmd.fn = fn;
        return this;
    }
    allowEmpty(allowEmpty = true) {
        this.cmd._allowEmpty = allowEmpty;
        return this;
    }
    stopEarly(stopEarly = true) {
        this.cmd._stopEarly = stopEarly;
        return this;
    }
    useRawArgs(useRawArgs = true) {
        this.cmd._useRawArgs = useRawArgs;
        return this;
    }
    default(name) {
        this.cmd.defaultCommand = name;
        return this;
    }
    globalType(name, handler, options) {
        return this.type(name, handler, {
            ...options,
            global: true
        });
    }
    type(name, handler, options) {
        if (this.cmd.types.get(name) && !options?.override) {
            throw new DuplicateType(name);
        }
        this.cmd.types.set(name, {
            ...options,
            name,
            handler
        });
        if (handler instanceof Type && (typeof handler.complete !== "undefined" || typeof handler.values !== "undefined")) {
            const completeHandler = (cmd, parent)=>handler.complete?.(cmd, parent) || []
            ;
            this.complete(name, completeHandler, options);
        }
        return this;
    }
    globalComplete(name, complete, options) {
        return this.complete(name, complete, {
            ...options,
            global: true
        });
    }
    complete(name, complete, options) {
        if (this.cmd.completions.has(name) && !options?.override) {
            throw new DuplicateCompletion(name);
        }
        this.cmd.completions.set(name, {
            name,
            complete,
            ...options
        });
        return this;
    }
    throwErrors() {
        this.cmd.throwOnError = true;
        return this;
    }
    noExit() {
        this.cmd._shouldExit = false;
        this.throwErrors();
        return this;
    }
    shouldThrowErrors() {
        return this.cmd.throwOnError || !!this.cmd._parent?.shouldThrowErrors();
    }
    shouldExit() {
        return (this.cmd._shouldExit ?? this.cmd._parent?.shouldExit()) ?? true;
    }
    globalOption(flags, desc, opts) {
        if (typeof opts === "function") {
            return this.option(flags, desc, {
                value: opts,
                global: true
            });
        }
        return this.option(flags, desc, {
            ...opts,
            global: true
        });
    }
    group(name) {
        this.cmd._groupName = name;
        return this;
    }
    option(flags, desc, opts) {
        if (typeof opts === "function") {
            return this.option(flags, desc, {
                value: opts
            });
        }
        const result = splitArguments(flags);
        const args = result.typeDefinition ? parseArgumentsDefinition(result.typeDefinition) : [];
        const option = {
            ...opts,
            name: "",
            description: desc,
            args,
            flags: result.flags,
            equalsSign: result.equalsSign,
            typeDefinition: result.typeDefinition,
            groupName: this._groupName
        };
        if (option.separator) {
            for (const arg of args){
                if (arg.list) {
                    arg.separator = option.separator;
                }
            }
        }
        for (const part of option.flags){
            const arg = part.trim();
            const isLong = /^--/.test(arg);
            const name = isLong ? arg.slice(2) : arg.slice(1);
            if (this.cmd.getBaseOption(name, true)) {
                if (opts?.override) {
                    this.removeOption(name);
                } else {
                    throw new DuplicateOptionName(name);
                }
            }
            if (!option.name && isLong) {
                option.name = name;
            } else if (!option.aliases) {
                option.aliases = [
                    name
                ];
            } else {
                option.aliases.push(name);
            }
        }
        if (option.prepend) {
            this.cmd.options.unshift(option);
        } else {
            this.cmd.options.push(option);
        }
        return this;
    }
    example(name, description) {
        if (this.cmd.hasExample(name)) {
            throw new DuplicateExample(name);
        }
        this.cmd.examples.push({
            name,
            description
        });
        return this;
    }
    globalEnv(name, description, options) {
        return this.env(name, description, {
            ...options,
            global: true
        });
    }
    env(name, description, options) {
        const result = splitArguments(name);
        if (!result.typeDefinition) {
            result.typeDefinition = "<value:boolean>";
        }
        if (result.flags.some((envName)=>this.cmd.getBaseEnvVar(envName, true)
        )) {
            throw new DuplicateEnvironmentVariable(name);
        }
        const details = parseArgumentsDefinition(result.typeDefinition);
        if (details.length > 1) {
            throw new EnvironmentVariableSingleValue(name);
        } else if (details.length && details[0].optionalValue) {
            throw new EnvironmentVariableOptionalValue(name);
        } else if (details.length && details[0].variadic) {
            throw new EnvironmentVariableVariadicValue(name);
        }
        this.cmd.envVars.push({
            name: result.flags[0],
            names: result.flags,
            description,
            type: details[0].type,
            details: details.shift(),
            ...options
        });
        return this;
    }
    async parse(args = Deno.args) {
        try {
            this.reset();
            this.registerDefaults();
            this.rawArgs = args;
            if (args.length > 0) {
                const subCommand = this.getCommand(args[0], true);
                if (subCommand) {
                    subCommand._globalParent = this;
                    return subCommand.parse(this.rawArgs.slice(1));
                }
            }
            if (this.isExecutable) {
                await this.executeExecutable(this.rawArgs);
                return {
                    options: {},
                    args: [],
                    cmd: this,
                    literal: []
                };
            } else if (this._useRawArgs) {
                const env = await this.parseEnvVars();
                return this.execute(env, ...this.rawArgs);
            } else {
                const env = await this.parseEnvVars();
                const { actionOption , flags , unknown , literal  } = this.parseFlags(this.rawArgs, env);
                this.literalArgs = literal;
                const options = {
                    ...env,
                    ...flags
                };
                const params = this.parseArguments(unknown, options);
                if (actionOption) {
                    await actionOption.action.call(this, options, ...params);
                    if (actionOption.standalone) {
                        return {
                            options,
                            args: params,
                            cmd: this,
                            literal: this.literalArgs
                        };
                    }
                }
                return this.execute(options, ...params);
            }
        } catch (error) {
            if (error instanceof Error) {
                throw this.error(error);
            } else {
                throw this.error(new Error(`[non-error-thrown] ${error}`));
            }
        }
    }
    registerDefaults() {
        if (this.hasDefaults || this.getParent()) {
            return this;
        }
        this.hasDefaults = true;
        this.reset();
        !this.types.has("string") && this.type("string", new StringType(), {
            global: true
        });
        !this.types.has("number") && this.type("number", new NumberType(), {
            global: true
        });
        !this.types.has("integer") && this.type("integer", new IntegerType(), {
            global: true
        });
        !this.types.has("boolean") && this.type("boolean", new BooleanType(), {
            global: true
        });
        !this.types.has("file") && this.type("file", new FileType(), {
            global: true
        });
        if (!this._help) {
            this.help({
                hints: true,
                types: false
            });
        }
        if (this._versionOption !== false && (this._versionOption || this.ver)) {
            this.option(this._versionOption?.flags || "-V, --version", this._versionOption?.desc || "Show the version number for this program.", {
                standalone: true,
                prepend: true,
                action: async function() {
                    const __long = this.getRawArgs().includes(`--${versionOption.name}`);
                    if (__long) {
                        await this.checkVersion();
                        this.showLongVersion();
                    } else {
                        this.showVersion();
                    }
                    this.exit();
                },
                ...this._versionOption?.opts ?? {}
            });
            const versionOption = this.options[0];
        }
        if (this._helpOption !== false) {
            this.option(this._helpOption?.flags || "-h, --help", this._helpOption?.desc || "Show this help.", {
                standalone: true,
                global: true,
                prepend: true,
                action: async function() {
                    const __long = this.getRawArgs().includes(`--${helpOption.name}`);
                    await this.checkVersion();
                    this.showHelp({
                        long: __long
                    });
                    this.exit();
                },
                ...this._helpOption?.opts ?? {}
            });
            const helpOption = this.options[0];
        }
        return this;
    }
    async execute(options, ...args) {
        if (this.fn) {
            await this.fn(options, ...args);
        } else if (this.defaultCommand) {
            const cmd = this.getCommand(this.defaultCommand, true);
            if (!cmd) {
                throw new DefaultCommandNotFound(this.defaultCommand, this.getCommands());
            }
            cmd._globalParent = this;
            await cmd.execute(options, ...args);
        }
        return {
            options,
            args,
            cmd: this,
            literal: this.literalArgs
        };
    }
    async executeExecutable(args) {
        const command7 = this.getPath().replace(/\s+/g, "-");
        await Deno.permissions.request({
            name: "run",
            command: command7
        });
        try {
            const process = Deno.run({
                cmd: [
                    command7,
                    ...args
                ]
            });
            const status = await process.status();
            if (!status.success) {
                Deno.exit(status.code);
            }
        } catch (error) {
            if (error instanceof Deno.errors.NotFound) {
                throw new CommandExecutableNotFound(command7);
            }
            throw error;
        }
    }
    parseFlags(args, env) {
        try {
            let actionOption;
            const result = parseFlags(args, {
                stopEarly: this._stopEarly,
                allowEmpty: this._allowEmpty,
                flags: this.getOptions(true),
                ignoreDefaults: env,
                parse: (type)=>this.parseType(type)
                ,
                option: (option)=>{
                    if (!actionOption && option.action) {
                        actionOption = option;
                    }
                }
            });
            return {
                ...result,
                actionOption
            };
        } catch (error) {
            if (error instanceof ValidationError) {
                throw new ValidationError1(error.message);
            }
            throw error;
        }
    }
    parseType(type1) {
        const typeSettings = this.getType(type1.type);
        if (!typeSettings) {
            throw new UnknownType(type1.type, this.getTypes().map((type)=>type.name
            ));
        }
        return typeSettings.handler instanceof Type ? typeSettings.handler.parse(type1) : typeSettings.handler(type1);
    }
    async parseEnvVars() {
        const envVars = this.getEnvVars(true);
        const result = {};
        if (!envVars.length) {
            return result;
        }
        const hasEnvPermissions = (await Deno.permissions.query({
            name: "env"
        })).state === "granted";
        for (const env of envVars){
            const name1 = hasEnvPermissions && env.names.find((name)=>!!Deno.env.get(name)
            );
            if (name1) {
                const propertyName = underscoreToCamelCase(env.prefix ? env.names[0].replace(new RegExp(`^${env.prefix}`), "") : env.names[0]);
                result[propertyName] = this.parseType({
                    label: "Environment variable",
                    type: env.type,
                    name: name1,
                    value: Deno.env.get(name1) ?? ""
                });
                if (env.value && typeof result[propertyName] !== "undefined") {
                    result[propertyName] = env.value(result[propertyName]);
                }
            } else if (env.required) {
                throw new MissingRequiredEnvVar(env);
            }
        }
        return result;
    }
    parseArguments(args, flags) {
        const params = [];
        args = args.slice(0);
        if (!this.hasArguments()) {
            if (args.length) {
                if (this.hasCommands(true)) {
                    throw new UnknownCommand(args[0], this.getCommands());
                } else {
                    throw new NoArgumentsAllowed(this.getPath());
                }
            }
        } else {
            if (!args.length) {
                const required = this.getArguments().filter((expectedArg)=>!expectedArg.optionalValue
                ).map((expectedArg)=>expectedArg.name
                );
                if (required.length) {
                    const flagNames = Object.keys(flags);
                    const hasStandaloneOption = !!flagNames.find((name)=>this.getOption(name, true)?.standalone
                    );
                    if (!hasStandaloneOption) {
                        throw new MissingArguments(required);
                    }
                }
            } else {
                for (const expectedArg of this.getArguments()){
                    if (!args.length) {
                        if (expectedArg.optionalValue) {
                            break;
                        }
                        throw new MissingArgument(`Missing argument: ${expectedArg.name}`);
                    }
                    let arg;
                    if (expectedArg.variadic) {
                        arg = args.splice(0, args.length).map((value)=>this.parseType({
                                label: "Argument",
                                type: expectedArg.type,
                                name: expectedArg.name,
                                value
                            })
                        );
                    } else {
                        arg = this.parseType({
                            label: "Argument",
                            type: expectedArg.type,
                            name: expectedArg.name,
                            value: args.shift()
                        });
                    }
                    if (typeof arg !== "undefined") {
                        params.push(arg);
                    }
                }
                if (args.length) {
                    throw new TooManyArguments(args);
                }
            }
        }
        return params;
    }
    error(error) {
        if (this.shouldThrowErrors() || !(error instanceof ValidationError1)) {
            return error;
        }
        this.showHelp();
        console.error(red(`  ${bold("error")}: ${error.message}\n`));
        Deno.exit(error instanceof ValidationError1 ? error.exitCode : 1);
    }
    getName() {
        return this._name;
    }
    getParent() {
        return this._parent;
    }
    getGlobalParent() {
        return this._globalParent;
    }
    getMainCommand() {
        return this._parent?.getMainCommand() ?? this;
    }
    getAliases() {
        return this.aliases;
    }
    getPath() {
        return this._parent ? this._parent.getPath() + " " + this._name : this._name;
    }
    getArgsDefinition() {
        return this.argsDefinition;
    }
    getArgument(name) {
        return this.getArguments().find((arg)=>arg.name === name
        );
    }
    getArguments() {
        if (!this.args.length && this.argsDefinition) {
            this.args = parseArgumentsDefinition(this.argsDefinition);
        }
        return this.args;
    }
    hasArguments() {
        return !!this.argsDefinition;
    }
    getVersion() {
        return this.getVersionHandler()?.call(this, this);
    }
    getVersionHandler() {
        return this.ver ?? this._parent?.getVersionHandler();
    }
    getDescription() {
        return typeof this.desc === "function" ? this.desc = this.desc() : this.desc;
    }
    getUsage() {
        return this._usage ?? this.getArgsDefinition();
    }
    getShortDescription() {
        return getDescription(this.getDescription(), true);
    }
    getRawArgs() {
        return this.rawArgs;
    }
    getLiteralArgs() {
        return this.literalArgs;
    }
    showVersion() {
        console.log(this.getVersion());
    }
    getLongVersion() {
        return `${bold(this.getMainCommand().getName())} ${blue(this.getVersion() ?? "")}` + Object.entries(this.getMeta()).map(([k, v])=>`\n${bold(k)} ${blue(v)}`
        ).join("");
    }
    showLongVersion() {
        console.log(this.getLongVersion());
    }
    showHelp(options) {
        console.log(this.getHelp(options));
    }
    getHelp(options) {
        this.registerDefaults();
        return this.getHelpHandler().call(this, this, options ?? {});
    }
    getHelpHandler() {
        return this._help ?? this._parent?.getHelpHandler();
    }
    exit(code2 = 0) {
        if (this.shouldExit()) {
            Deno.exit(code2);
        }
    }
    async checkVersion() {
        const mainCommand = this.getMainCommand();
        const upgradeCommand = mainCommand.getCommand("upgrade");
        if (isUpgradeCommand(upgradeCommand)) {
            const latestVersion = await upgradeCommand.getLatestVersion();
            const currentVersion = mainCommand.getVersion();
            if (currentVersion !== latestVersion) {
                mainCommand.version(`${currentVersion}  ${bold(yellow(`(New version available: ${latestVersion}. Run '${mainCommand.getName()} upgrade' to upgrade to the latest version!)`))}`);
            }
        }
    }
    hasOptions(hidden) {
        return this.getOptions(hidden).length > 0;
    }
    getOptions(hidden) {
        return this.getGlobalOptions(hidden).concat(this.getBaseOptions(hidden));
    }
    getBaseOptions(hidden) {
        if (!this.options.length) {
            return [];
        }
        return hidden ? this.options.slice(0) : this.options.filter((opt)=>!opt.hidden
        );
    }
    getGlobalOptions(hidden) {
        const getOptions = (cmd, options = [], names = [])=>{
            if (cmd) {
                if (cmd.options.length) {
                    cmd.options.forEach((option)=>{
                        if (option.global && !this.options.find((opt)=>opt.name === option.name
                        ) && names.indexOf(option.name) === -1 && (hidden || !option.hidden)) {
                            names.push(option.name);
                            options.push(option);
                        }
                    });
                }
                return getOptions(cmd._parent, options, names);
            }
            return options;
        };
        return getOptions(this._parent);
    }
    hasOption(name, hidden) {
        return !!this.getOption(name, hidden);
    }
    getOption(name, hidden) {
        return this.getBaseOption(name, hidden) ?? this.getGlobalOption(name, hidden);
    }
    getBaseOption(name, hidden) {
        const option1 = this.options.find((option)=>option.name === name
        );
        return option1 && (hidden || !option1.hidden) ? option1 : undefined;
    }
    getGlobalOption(name, hidden) {
        if (!this._parent) {
            return;
        }
        const option = this._parent.getBaseOption(name, hidden);
        if (!option || !option.global) {
            return this._parent.getGlobalOption(name, hidden);
        }
        return option;
    }
    removeOption(name) {
        const index = this.options.findIndex((option)=>option.name === name
        );
        if (index === -1) {
            return;
        }
        return this.options.splice(index, 1)[0];
    }
    hasCommands(hidden) {
        return this.getCommands(hidden).length > 0;
    }
    getCommands(hidden) {
        return this.getGlobalCommands(hidden).concat(this.getBaseCommands(hidden));
    }
    getBaseCommands(hidden) {
        const commands = Array.from(this.commands.values());
        return hidden ? commands : commands.filter((cmd)=>!cmd.isHidden
        );
    }
    getGlobalCommands(hidden) {
        const getCommands = (cmd1, commands = [], names = [])=>{
            if (cmd1) {
                if (cmd1.commands.size) {
                    cmd1.commands.forEach((cmd)=>{
                        if (cmd.isGlobal && this !== cmd && !this.commands.has(cmd._name) && names.indexOf(cmd._name) === -1 && (hidden || !cmd.isHidden)) {
                            names.push(cmd._name);
                            commands.push(cmd);
                        }
                    });
                }
                return getCommands(cmd1._parent, commands, names);
            }
            return commands;
        };
        return getCommands(this._parent);
    }
    hasCommand(name, hidden) {
        return !!this.getCommand(name, hidden);
    }
    getCommand(name, hidden) {
        return this.getBaseCommand(name, hidden) ?? this.getGlobalCommand(name, hidden);
    }
    getBaseCommand(name, hidden) {
        for (const cmd of this.commands.values()){
            if (cmd._name === name || cmd.aliases.includes(name)) {
                return cmd && (hidden || !cmd.isHidden) ? cmd : undefined;
            }
        }
    }
    getGlobalCommand(name, hidden) {
        if (!this._parent) {
            return;
        }
        const cmd = this._parent.getBaseCommand(name, hidden);
        if (!cmd?.isGlobal) {
            return this._parent.getGlobalCommand(name, hidden);
        }
        return cmd;
    }
    removeCommand(name) {
        const command8 = this.getBaseCommand(name, true);
        if (command8) {
            this.commands.delete(command8._name);
        }
        return command8;
    }
    getTypes() {
        return this.getGlobalTypes().concat(this.getBaseTypes());
    }
    getBaseTypes() {
        return Array.from(this.types.values());
    }
    getGlobalTypes() {
        const getTypes = (cmd, types = [], names = [])=>{
            if (cmd) {
                if (cmd.types.size) {
                    cmd.types.forEach((type)=>{
                        if (type.global && !this.types.has(type.name) && names.indexOf(type.name) === -1) {
                            names.push(type.name);
                            types.push(type);
                        }
                    });
                }
                return getTypes(cmd._parent, types, names);
            }
            return types;
        };
        return getTypes(this._parent);
    }
    getType(name) {
        return this.getBaseType(name) ?? this.getGlobalType(name);
    }
    getBaseType(name) {
        return this.types.get(name);
    }
    getGlobalType(name) {
        if (!this._parent) {
            return;
        }
        const cmd = this._parent.getBaseType(name);
        if (!cmd?.global) {
            return this._parent.getGlobalType(name);
        }
        return cmd;
    }
    getCompletions() {
        return this.getGlobalCompletions().concat(this.getBaseCompletions());
    }
    getBaseCompletions() {
        return Array.from(this.completions.values());
    }
    getGlobalCompletions() {
        const getCompletions = (cmd, completions = [], names = [])=>{
            if (cmd) {
                if (cmd.completions.size) {
                    cmd.completions.forEach((completion)=>{
                        if (completion.global && !this.completions.has(completion.name) && names.indexOf(completion.name) === -1) {
                            names.push(completion.name);
                            completions.push(completion);
                        }
                    });
                }
                return getCompletions(cmd._parent, completions, names);
            }
            return completions;
        };
        return getCompletions(this._parent);
    }
    getCompletion(name) {
        return this.getBaseCompletion(name) ?? this.getGlobalCompletion(name);
    }
    getBaseCompletion(name) {
        return this.completions.get(name);
    }
    getGlobalCompletion(name) {
        if (!this._parent) {
            return;
        }
        const completion = this._parent.getBaseCompletion(name);
        if (!completion?.global) {
            return this._parent.getGlobalCompletion(name);
        }
        return completion;
    }
    hasEnvVars(hidden) {
        return this.getEnvVars(hidden).length > 0;
    }
    getEnvVars(hidden) {
        return this.getGlobalEnvVars(hidden).concat(this.getBaseEnvVars(hidden));
    }
    getBaseEnvVars(hidden) {
        if (!this.envVars.length) {
            return [];
        }
        return hidden ? this.envVars.slice(0) : this.envVars.filter((env)=>!env.hidden
        );
    }
    getGlobalEnvVars(hidden) {
        const getEnvVars = (cmd, envVars = [], names = [])=>{
            if (cmd) {
                if (cmd.envVars.length) {
                    cmd.envVars.forEach((envVar)=>{
                        if (envVar.global && !this.envVars.find((env)=>env.names[0] === envVar.names[0]
                        ) && names.indexOf(envVar.names[0]) === -1 && (hidden || !envVar.hidden)) {
                            names.push(envVar.names[0]);
                            envVars.push(envVar);
                        }
                    });
                }
                return getEnvVars(cmd._parent, envVars, names);
            }
            return envVars;
        };
        return getEnvVars(this._parent);
    }
    hasEnvVar(name, hidden) {
        return !!this.getEnvVar(name, hidden);
    }
    getEnvVar(name, hidden) {
        return this.getBaseEnvVar(name, hidden) ?? this.getGlobalEnvVar(name, hidden);
    }
    getBaseEnvVar(name, hidden) {
        const envVar = this.envVars.find((env)=>env.names.indexOf(name) !== -1
        );
        return envVar && (hidden || !envVar.hidden) ? envVar : undefined;
    }
    getGlobalEnvVar(name, hidden) {
        if (!this._parent) {
            return;
        }
        const envVar = this._parent.getBaseEnvVar(name, hidden);
        if (!envVar?.global) {
            return this._parent.getGlobalEnvVar(name, hidden);
        }
        return envVar;
    }
    hasExamples() {
        return this.examples.length > 0;
    }
    getExamples() {
        return this.examples;
    }
    hasExample(name) {
        return !!this.getExample(name);
    }
    getExample(name) {
        return this.examples.find((example)=>example.name === name
        );
    }
}
function isUpgradeCommand(command9) {
    return command9 instanceof Command && "getLatestVersion" in command9;
}
class BashCompletionsGenerator {
    static generate(cmd) {
        return new BashCompletionsGenerator(cmd).generate();
    }
    constructor(cmd){
        this.cmd = cmd;
    }
    generate() {
        const path2 = this.cmd.getPath();
        const version = this.cmd.getVersion() ? ` v${this.cmd.getVersion()}` : "";
        return `#!/usr/bin/env bash
# bash completion support for ${path2}${version}

_${replaceSpecialChars(path2)}() {
  local word cur prev listFiles
  local -a opts
  COMPREPLY=()
  cur="\${COMP_WORDS[COMP_CWORD]}"
  prev="\${COMP_WORDS[COMP_CWORD-1]}"
  cmd="_"
  opts=()
  listFiles=0

  _${replaceSpecialChars(this.cmd.getName())}_complete() {
    local action="$1"; shift
    mapfile -t values < <( ${this.cmd.getName()} completions complete "\${action}" "\${@}" )
    for i in "\${values[@]}"; do
      opts+=("$i")
    done
  }

  _${replaceSpecialChars(this.cmd.getName())}_expand() {
    [ "$cur" != "\${cur%\\\\}" ] && cur="$cur\\\\"
  
    # expand ~username type directory specifications
    if [[ "$cur" == \\~*/* ]]; then
      eval cur=$cur
      
    elif [[ "$cur" == \\~* ]]; then
      cur=\${cur#\\~}
      COMPREPLY=( $( compgen -P '~' -u $cur ) )
      return \${#COMPREPLY[@]}
    fi
  }

  _${replaceSpecialChars(this.cmd.getName())}_file_dir() {
    listFiles=1
    local IFS=$'\\t\\n' xspec #glob
    _${replaceSpecialChars(this.cmd.getName())}_expand || return 0
  
    if [ "\${1:-}" = -d ]; then
      COMPREPLY=( \${COMPREPLY[@]:-} $( compgen -d -- $cur ) )
      #eval "$glob"    # restore glob setting.
      return 0
    fi
  
    xspec=\${1:+"!*.$1"}	# set only if glob passed in as $1
    COMPREPLY=( \${COMPREPLY[@]:-} $( compgen -f -X "$xspec" -- "$cur" ) \
          $( compgen -d -- "$cur" ) )
  }

  ${this.generateCompletions(this.cmd).trim()}

  for word in "\${COMP_WORDS[@]}"; do
    case "\${word}" in
      -*) ;;
      *)
        cmd_tmp="\${cmd}_\${word//[^[:alnum:]]/_}"
        if type "\${cmd_tmp}" &>/dev/null; then
          cmd="\${cmd_tmp}"
        fi
    esac
  done

  \${cmd}

  if [[ listFiles -eq 1 ]]; then
    return 0
  fi

  if [[ \${#opts[@]} -eq 0 ]]; then
    # shellcheck disable=SC2207
    COMPREPLY=($(compgen -f "\${cur}"))
    return 0
  fi

  local values
  values="$( printf "\\n%s" "\${opts[@]}" )"
  local IFS=$'\\n'
  # shellcheck disable=SC2207
  local result=($(compgen -W "\${values[@]}" -- "\${cur}"))
  if [[ \${#result[@]} -eq 0 ]]; then
    # shellcheck disable=SC2207
    COMPREPLY=($(compgen -f "\${cur}"))
  else
    # shellcheck disable=SC2207
    COMPREPLY=($(printf '%q\\n' "\${result[@]}"))
  fi

  return 0
}

complete -F _${replaceSpecialChars(path2)} -o bashdefault -o default ${path2}`;
    }
    generateCompletions(command10, path3 = "", index = 1) {
        path3 = (path3 ? path3 + " " : "") + command10.getName();
        const commandCompletions = this.generateCommandCompletions(command10, path3, index);
        const childCommandCompletions = command10.getCommands(false).filter((subCommand)=>subCommand !== command10
        ).map((subCommand)=>this.generateCompletions(subCommand, path3, index + 1)
        ).join("");
        return `${commandCompletions}

${childCommandCompletions}`;
    }
    generateCommandCompletions(command11, path4, index) {
        const flags = this.getFlags(command11);
        const childCommandNames = command11.getCommands(false).map((childCommand)=>childCommand.getName()
        );
        const completionsPath = ~path4.indexOf(" ") ? " " + path4.split(" ").slice(1).join(" ") : "";
        const optionArguments = this.generateOptionArguments(command11, completionsPath);
        const completionsCmd = this.generateCommandCompletionsCommand(command11, completionsPath);
        return `  __${replaceSpecialChars(path4)}() {
    opts=(${[
            ...flags,
            ...childCommandNames
        ].join(" ")})
    ${completionsCmd}
    if [[ \${cur} == -* || \${COMP_CWORD} -eq ${index} ]] ; then
      return 0
    fi
    ${optionArguments}
  }`;
    }
    getFlags(command12) {
        return command12.getOptions(false).map((option)=>option.flags
        ).flat();
    }
    generateOptionArguments(command13, completionsPath) {
        let opts = "";
        const options = command13.getOptions(false);
        if (options.length) {
            opts += 'case "${prev}" in';
            for (const option of options){
                const flags = option.flags.map((flag)=>flag.trim()
                ).join("|");
                const completionsCmd = this.generateOptionCompletionsCommand(command13, option.args, completionsPath, {
                    standalone: option.standalone
                });
                opts += `\n      ${flags}) ${completionsCmd} ;;`;
            }
            opts += "\n    esac";
        }
        return opts;
    }
    generateCommandCompletionsCommand(command14, path5) {
        const args = command14.getArguments();
        if (args.length) {
            const type = command14.getType(args[0].type);
            if (type && type.handler instanceof FileType) {
                return `_${replaceSpecialChars(this.cmd.getName())}_file_dir`;
            }
            return `_${replaceSpecialChars(this.cmd.getName())}_complete ${args[0].action}${path5}`;
        }
        return "";
    }
    generateOptionCompletionsCommand(command15, args, path6, opts) {
        if (args.length) {
            const type = command15.getType(args[0].type);
            if (type && type.handler instanceof FileType) {
                return `opts=(); _${replaceSpecialChars(this.cmd.getName())}_file_dir`;
            }
            return `opts=(); _${replaceSpecialChars(this.cmd.getName())}_complete ${args[0].action}${path6}`;
        }
        if (opts?.standalone) {
            return "opts=()";
        }
        return "";
    }
    cmd;
}
function replaceSpecialChars(str) {
    return str.replace(/[^a-zA-Z0-9]/g, "_");
}
class FishCompletionsGenerator {
    static generate(cmd) {
        return new FishCompletionsGenerator(cmd).generate();
    }
    constructor(cmd){
        this.cmd = cmd;
    }
    generate() {
        const path7 = this.cmd.getPath();
        const version = this.cmd.getVersion() ? ` v${this.cmd.getVersion()}` : "";
        return `#!/usr/bin/env fish
# fish completion support for ${path7}${version}

function __fish_${replaceSpecialChars1(this.cmd.getName())}_using_command
  set cmds ${getCommandFnNames(this.cmd).join(" ")}
  set words (commandline -opc)
  set cmd "_"
  for word in $words
    switch $word
      case '-*'
        continue
      case '*'
        set word (string replace -r -a '\\W' '_' $word)
        set cmd_tmp $cmd"_$word"
        if contains $cmd_tmp $cmds
          set cmd $cmd_tmp
        end
    end
  end
  if [ "$cmd" = "$argv[1]" ]
    return 0
  end
  return 1
end

${this.generateCompletions(this.cmd).trim()}`;
    }
    generateCompletions(command16) {
        const parent = command16.getParent();
        let result = ``;
        if (parent) {
            result += "\n" + this.complete(parent, {
                description: command16.getShortDescription(),
                arguments: command16.getName()
            });
        }
        const commandArgs = command16.getArguments();
        if (commandArgs.length) {
            result += "\n" + this.complete(command16, {
                arguments: commandArgs.length ? this.getCompletionCommand(command16, commandArgs[0]) : undefined
            });
        }
        for (const option of command16.getOptions(false)){
            result += "\n" + this.completeOption(command16, option);
        }
        for (const subCommand of command16.getCommands(false)){
            result += this.generateCompletions(subCommand);
        }
        return result;
    }
    completeOption(command17, option) {
        const shortOption = option.flags.find((flag)=>flag.length === 2
        )?.replace(/^(-)+/, "");
        const longOption = option.flags.find((flag)=>flag.length > 2
        )?.replace(/^(-)+/, "");
        return this.complete(command17, {
            description: getDescription(option.description),
            shortOption: shortOption,
            longOption: longOption,
            required: true,
            standalone: option.standalone,
            arguments: option.args.length ? this.getCompletionCommand(command17, option.args[0]) : undefined
        });
    }
    complete(command18, options) {
        const cmd = [
            "complete"
        ];
        cmd.push("-c", this.cmd.getName());
        cmd.push("-n", `'__fish_${replaceSpecialChars1(this.cmd.getName())}_using_command __${replaceSpecialChars1(command18.getPath())}'`);
        options.shortOption && cmd.push("-s", options.shortOption);
        options.longOption && cmd.push("-l", options.longOption);
        options.standalone && cmd.push("-x");
        cmd.push("-k");
        cmd.push("-f");
        if (options.arguments) {
            options.required && cmd.push("-r");
            cmd.push("-a", options.arguments);
        }
        options.description && cmd.push("-d", `'${getDescription(options.description, true)}'`);
        return cmd.join(" ");
    }
    getCompletionCommand(cmd, arg) {
        const type = cmd.getType(arg.type);
        if (type && type.handler instanceof FileType) {
            return `'(__fish_complete_path)'`;
        }
        return `'(${this.cmd.getName()} completions complete ${arg.action + " " + getCompletionsPath(cmd)})'`;
    }
    cmd;
}
function getCommandFnNames(cmd, cmds = []) {
    cmds.push(`__${replaceSpecialChars1(cmd.getPath())}`);
    cmd.getCommands(false).forEach((command19)=>{
        getCommandFnNames(command19, cmds);
    });
    return cmds;
}
function getCompletionsPath(command20) {
    return command20.getPath().split(" ").slice(1).join(" ");
}
function replaceSpecialChars1(str) {
    return str.replace(/[^a-zA-Z0-9]/g, "_");
}
class ZshCompletionsGenerator {
    actions;
    static generate(cmd) {
        return new ZshCompletionsGenerator(cmd).generate();
    }
    constructor(cmd){
        this.cmd = cmd;
        this.actions = new Map();
    }
    generate() {
        const path8 = this.cmd.getPath();
        const name = this.cmd.getName();
        const version = this.cmd.getVersion() ? ` v${this.cmd.getVersion()}` : "";
        return `#!/usr/bin/env zsh
# zsh completion support for ${path8}${version}

autoload -U is-at-least

# shellcheck disable=SC2154
(( $+functions[__${replaceSpecialChars2(name)}_complete] )) ||
function __${replaceSpecialChars2(name)}_complete {
  local name="$1"; shift
  local action="$1"; shift
  integer ret=1
  local -a values
  local expl lines
  _tags "$name"
  while _tags; do
    if _requested "$name"; then
      # shellcheck disable=SC2034
      lines="$(${name} completions complete "\${action}" "\${@}")"
      values=("\${(ps:\\n:)lines}")
      if (( \${#values[@]} )); then
        while _next_label "$name" expl "$action"; do
          compadd -S '' "\${expl[@]}" "\${values[@]}"
        done
      fi
    fi
  done
}

${this.generateCompletions(this.cmd).trim()}

# _${replaceSpecialChars2(path8)} "\${@}"

compdef _${replaceSpecialChars2(path8)} ${path8}`;
    }
    generateCompletions(command21, path9 = "") {
        if (!command21.hasCommands(false) && !command21.hasOptions(false) && !command21.hasArguments()) {
            return "";
        }
        path9 = (path9 ? path9 + " " : "") + command21.getName();
        return `# shellcheck disable=SC2154
(( $+functions[_${replaceSpecialChars2(path9)}] )) ||
function _${replaceSpecialChars2(path9)}() {` + (!command21.getParent() ? `
  local state` : "") + this.generateCommandCompletions(command21, path9) + this.generateSubCommandCompletions(command21, path9) + this.generateArgumentCompletions(command21, path9) + this.generateActions(command21) + `\n}\n\n` + command21.getCommands(false).filter((subCommand)=>subCommand !== command21
        ).map((subCommand)=>this.generateCompletions(subCommand, path9)
        ).join("");
    }
    generateCommandCompletions(command22, path10) {
        const commands = command22.getCommands(false);
        let completions = commands.map((subCommand)=>`'${subCommand.getName()}:${subCommand.getShortDescription()}'`
        ).join("\n      ");
        if (completions) {
            completions = `
    local -a commands
    # shellcheck disable=SC2034
    commands=(
      ${completions}
    )
    _describe 'command' commands`;
        }
        if (command22.hasArguments()) {
            const completionsPath = path10.split(" ").slice(1).join(" ");
            const arg = command22.getArguments()[0];
            const action = this.addAction(arg, completionsPath);
            if (action && command22.getCompletion(arg.action)) {
                completions += `\n    __${replaceSpecialChars2(this.cmd.getName())}_complete ${action.arg.name} ${action.arg.action} ${action.cmd}`;
            }
        }
        if (completions) {
            completions = `\n\n  function _commands() {${completions}\n  }`;
        }
        return completions;
    }
    generateSubCommandCompletions(command1, path11) {
        if (command1.hasCommands(false)) {
            const actions = command1.getCommands(false).map((command23)=>`${command23.getName()}) _${replaceSpecialChars2(path11 + " " + command23.getName())} ;;`
            ).join("\n      ");
            return `\n
  function _command_args() {
    case "\${words[1]}" in\n      ${actions}\n    esac
  }`;
        }
        return "";
    }
    generateArgumentCompletions(command24, path12) {
        this.actions.clear();
        const options = this.generateOptions(command24, path12);
        let argIndex = 0;
        let argsCommand = "\n\n  _arguments -w -s -S -C";
        if (command24.hasOptions()) {
            argsCommand += ` \\\n    ${options.join(" \\\n    ")}`;
        }
        if (command24.hasCommands(false) || command24.getArguments().filter((arg)=>command24.getCompletion(arg.action)
        ).length) {
            argsCommand += ` \\\n    '${++argIndex}:command:_commands'`;
        }
        if (command24.hasArguments() || command24.hasCommands(false)) {
            const args = [];
            for (const arg1 of command24.getArguments().slice(1)){
                const type = command24.getType(arg1.type);
                if (type && type.handler instanceof FileType) {
                    const fileCompletions = this.getFileCompletions(type);
                    if (arg1.variadic) {
                        argIndex++;
                        for(let i = 0; i < 5; i++){
                            args.push(`${argIndex + i}${arg1.optionalValue ? "::" : ":"}${arg1.name}:${fileCompletions}`);
                        }
                    } else {
                        args.push(`${++argIndex}${arg1.optionalValue ? "::" : ":"}${arg1.name}:${fileCompletions}`);
                    }
                } else {
                    const completionsPath = path12.split(" ").slice(1).join(" ");
                    const action = this.addAction(arg1, completionsPath);
                    args.push(`${++argIndex}${arg1.optionalValue ? "::" : ":"}${arg1.name}:->${action.name}`);
                }
            }
            argsCommand += args.map((arg)=>`\\\n    '${arg}'`
            ).join("");
            if (command24.hasCommands(false)) {
                argsCommand += ` \\\n    '*::sub command:->command_args'`;
            }
        }
        return argsCommand;
    }
    generateOptions(command25, path13) {
        const options = [];
        const cmdArgs = path13.split(" ");
        cmdArgs.shift();
        const completionsPath = cmdArgs.join(" ");
        const excludedFlags = command25.getOptions(false).map((option)=>option.standalone ? option.flags : false
        ).flat().filter((flag)=>typeof flag === "string"
        );
        for (const option1 of command25.getOptions(false)){
            options.push(this.generateOption(command25, option1, completionsPath, excludedFlags));
        }
        return options;
    }
    generateOption(command26, option, completionsPath, excludedOptions) {
        let excludedFlags = option.conflicts?.length ? [
            ...excludedOptions,
            ...option.conflicts.map((opt)=>"--" + opt.replace(/^--/, "")
            ), 
        ] : excludedOptions;
        excludedFlags = option.collect ? excludedFlags : [
            ...excludedFlags,
            ...option.flags, 
        ];
        let args = "";
        for (const arg of option.args){
            const type = command26.getType(arg.type);
            if (type && type.handler instanceof FileType) {
                const fileCompletions = this.getFileCompletions(type);
                args += `${arg.optionalValue ? "::" : ":"}${arg.name}:${fileCompletions}`;
            } else {
                const action = this.addAction(arg, completionsPath);
                args += `${arg.optionalValue ? "::" : ":"}${arg.name}:->${action.name}`;
            }
        }
        const description = getDescription(option.description, true).replace(/\[/g, "\\[").replace(/]/g, "\\]").replace(/"/g, '\\"').replace(/'/g, "'\"'\"'");
        const collect = option.collect ? "*" : "";
        const equalsSign = option.equalsSign ? "=" : "";
        const flags = option.flags.map((flag)=>`${flag}${equalsSign}`
        ).join(",");
        if (option.standalone) {
            return `'(- *)'{${collect}${flags}}'[${description}]${args}'`;
        } else {
            const excluded = excludedFlags.length ? `'(${excludedFlags.join(" ")})'` : "";
            if (collect || flags.length > 1) {
                return `${excluded}{${collect}${flags}}'[${description}]${args}'`;
            } else {
                return `${excluded}${flags}'[${description}]${args}'`;
            }
        }
    }
    getFileCompletions(type) {
        if (!(type.handler instanceof FileType)) {
            return "";
        }
        return "_files";
    }
    addAction(arg, cmd) {
        const action = `${arg.name}-${arg.action}`;
        if (!this.actions.has(action)) {
            this.actions.set(action, {
                arg: arg,
                label: `${arg.name}: ${arg.action}`,
                name: action,
                cmd
            });
        }
        return this.actions.get(action);
    }
    generateActions(command27) {
        let actions = [];
        if (this.actions.size) {
            actions = Array.from(this.actions).map(([name, action])=>`${name}) __${replaceSpecialChars2(this.cmd.getName())}_complete ${action.arg.name} ${action.arg.action} ${action.cmd} ;;`
            );
        }
        if (command27.hasCommands(false)) {
            actions.unshift(`command_args) _command_args ;;`);
        }
        if (actions.length) {
            return `\n\n  case "$state" in\n    ${actions.join("\n    ")}\n  esac`;
        }
        return "";
    }
    cmd;
}
function replaceSpecialChars2(str) {
    return str.replace(/[^a-zA-Z0-9]/g, "_");
}
const main = {
    ARROW_UP: "↑",
    ARROW_DOWN: "↓",
    ARROW_LEFT: "←",
    ARROW_RIGHT: "→",
    ARROW_UP_LEFT: "↖",
    ARROW_UP_RIGHT: "↗",
    ARROW_DOWN_RIGHT: "↘",
    ARROW_DOWN_LEFT: "↙",
    RADIO_ON: "◉",
    RADIO_OFF: "◯",
    TICK: "✔",
    CROSS: "✘",
    ELLIPSIS: "…",
    POINTER_SMALL: "›",
    LINE: "─",
    POINTER: "❯",
    INFO: "ℹ",
    TAB_LEFT: "⇤",
    TAB_RIGHT: "⇥",
    ESCAPE: "⎋",
    BACKSPACE: "⌫",
    PAGE_UP: "⇞",
    PAGE_DOWN: "⇟",
    ENTER: "↵",
    SEARCH: "⌕"
};
const win = {
    ...main,
    RADIO_ON: "(*)",
    RADIO_OFF: "( )",
    TICK: "√",
    CROSS: "×",
    POINTER_SMALL: "»"
};
const Figures = Deno.build.os === "windows" ? win : main;
const keyMap = {
    up: "ARROW_UP",
    down: "ARROW_DOWN",
    left: "ARROW_LEFT",
    right: "ARROW_RIGHT",
    pageup: "PAGE_UP",
    pagedown: "PAGE_DOWN",
    tab: "TAB_RIGHT",
    enter: "ENTER",
    return: "ENTER"
};
function getFiguresByKeys(keys) {
    const figures = [];
    for (const key of keys){
        const figure = Figures[keyMap[key]] ?? key;
        if (!figures.includes(figure)) {
            figures.push(figure);
        }
    }
    return figures;
}
const base64abc = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "+",
    "/", 
];
function encode(data) {
    const uint8 = typeof data === "string" ? new TextEncoder().encode(data) : data instanceof Uint8Array ? data : new Uint8Array(data);
    let result = "", i;
    const l = uint8.length;
    for(i = 2; i < l; i += 3){
        result += base64abc[uint8[i - 2] >> 2];
        result += base64abc[(uint8[i - 2] & 0x03) << 4 | uint8[i - 1] >> 4];
        result += base64abc[(uint8[i - 1] & 0x0f) << 2 | uint8[i] >> 6];
        result += base64abc[uint8[i] & 0x3f];
    }
    if (i === l + 1) {
        result += base64abc[uint8[i - 2] >> 2];
        result += base64abc[(uint8[i - 2] & 0x03) << 4];
        result += "==";
    }
    if (i === l) {
        result += base64abc[uint8[i - 2] >> 2];
        result += base64abc[(uint8[i - 2] & 0x03) << 4 | uint8[i - 1] >> 4];
        result += base64abc[(uint8[i - 1] & 0x0f) << 2];
        result += "=";
    }
    return result;
}
const ESC = "\x1B";
const CSI = `${ESC}[`;
const OSC = `${ESC}]`;
const SEP = ";";
const bel = "\u0007";
const cursorPosition = `${CSI}6n`;
function cursorTo(x, y) {
    if (typeof y !== "number") {
        return `${CSI}${x}G`;
    }
    return `${CSI}${y};${x}H`;
}
function cursorMove(x, y) {
    let ret = "";
    if (x < 0) {
        ret += `${CSI}${-x}D`;
    } else if (x > 0) {
        ret += `${CSI}${x}C`;
    }
    if (y < 0) {
        ret += `${CSI}${-y}A`;
    } else if (y > 0) {
        ret += `${CSI}${y}B`;
    }
    return ret;
}
function cursorUp(count = 1) {
    return `${CSI}${count}A`;
}
function cursorDown(count = 1) {
    return `${CSI}${count}B`;
}
function cursorForward(count = 1) {
    return `${CSI}${count}C`;
}
function cursorBackward(count = 1) {
    return `${CSI}${count}D`;
}
function cursorNextLine(count = 1) {
    return `${CSI}E`.repeat(count);
}
function cursorPrevLine(count = 1) {
    return `${CSI}F`.repeat(count);
}
const cursorLeft = `${CSI}G`;
const cursorHide = `${CSI}?25l`;
const cursorShow = `${CSI}?25h`;
const cursorSave = `${ESC}7`;
const cursorRestore = `${ESC}8`;
function scrollUp(count = 1) {
    return `${CSI}S`.repeat(count);
}
function scrollDown(count = 1) {
    return `${CSI}T`.repeat(count);
}
const eraseScreen = `${CSI}2J`;
function eraseUp(count = 1) {
    return `${CSI}1J`.repeat(count);
}
function eraseDown(count = 1) {
    return `${CSI}0J`.repeat(count);
}
const eraseLine = `${CSI}2K`;
const eraseLineEnd = `${CSI}0K`;
const eraseLineStart = `${CSI}1K`;
function eraseLines(count) {
    let clear = "";
    for(let i = 0; i < count; i++){
        clear += eraseLine + (i < count - 1 ? cursorUp() : "");
    }
    clear += cursorLeft;
    return clear;
}
const clearScreen = "\u001Bc";
const clearTerminal = Deno.build.os === "windows" ? `${eraseScreen}${CSI}0f` : `${eraseScreen}${CSI}3J${CSI}H`;
function link(text, url) {
    return [
        OSC,
        "8",
        SEP,
        SEP,
        url,
        bel,
        text,
        OSC,
        "8",
        SEP,
        SEP,
        bel, 
    ].join("");
}
function image(buffer, options) {
    let ret = `${OSC}1337;File=inline=1`;
    if (options?.width) {
        ret += `;width=${options.width}`;
    }
    if (options?.height) {
        ret += `;height=${options.height}`;
    }
    if (options?.preserveAspectRatio === false) {
        ret += ";preserveAspectRatio=0";
    }
    return ret + ":" + encode(buffer) + bel;
}
const mod = {
    bel: bel,
    cursorPosition: cursorPosition,
    cursorTo: cursorTo,
    cursorMove: cursorMove,
    cursorUp: cursorUp,
    cursorDown: cursorDown,
    cursorForward: cursorForward,
    cursorBackward: cursorBackward,
    cursorNextLine: cursorNextLine,
    cursorPrevLine: cursorPrevLine,
    cursorLeft: cursorLeft,
    cursorHide: cursorHide,
    cursorShow: cursorShow,
    cursorSave: cursorSave,
    cursorRestore: cursorRestore,
    scrollUp: scrollUp,
    scrollDown: scrollDown,
    eraseScreen: eraseScreen,
    eraseUp: eraseUp,
    eraseDown: eraseDown,
    eraseLine: eraseLine,
    eraseLineEnd: eraseLineEnd,
    eraseLineStart: eraseLineStart,
    eraseLines: eraseLines,
    clearScreen: clearScreen,
    clearTerminal: clearTerminal,
    link: link,
    image: image
};
function getCursorPosition({ stdin =Deno.stdin , stdout =Deno.stdout  } = {}) {
    const data = new Uint8Array(8);
    Deno.setRaw(stdin.rid, true);
    stdout.writeSync(new TextEncoder().encode(cursorPosition));
    stdin.readSync(data);
    Deno.setRaw(stdin.rid, false);
    const [y, x] = new TextDecoder().decode(data).match(/\[(\d+);(\d+)R/)?.slice(1, 3).map(Number) ?? [
        0,
        0
    ];
    return {
        x,
        y
    };
}
const tty = factory();
function factory(options) {
    let result = "";
    let stack = [];
    const stdout = options?.stdout ?? Deno.stdout;
    const stdin = options?.stdin ?? Deno.stdin;
    const tty1 = function(...args) {
        if (this) {
            update(args);
            stdout.writeSync(new TextEncoder().encode(result));
            return this;
        }
        return factory(args[0] ?? options);
    };
    tty1.text = function(text) {
        stack.push([
            text,
            []
        ]);
        update();
        stdout.writeSync(new TextEncoder().encode(result));
        return this;
    };
    tty1.getCursorPosition = ()=>getCursorPosition({
            stdout,
            stdin
        })
    ;
    const methodList = Object.entries(mod);
    for (const [name, method] of methodList){
        if (name === "cursorPosition") {
            continue;
        }
        Object.defineProperty(tty1, name, {
            get () {
                stack.push([
                    method,
                    []
                ]);
                return this;
            }
        });
    }
    return tty1;
    function update(args1) {
        if (!stack.length) {
            return;
        }
        if (args1) {
            stack[stack.length - 1][1] = args1;
        }
        result = stack.reduce((prev, [cur, args])=>prev + (typeof cur === "string" ? cur : cur.call(tty1, ...args))
        , "");
        stack = [];
    }
}
const KeyMap = {
    "[P": "f1",
    "[Q": "f2",
    "[R": "f3",
    "[S": "f4",
    "OP": "f1",
    "OQ": "f2",
    "OR": "f3",
    "OS": "f4",
    "[11~": "f1",
    "[12~": "f2",
    "[13~": "f3",
    "[14~": "f4",
    "[[A": "f1",
    "[[B": "f2",
    "[[C": "f3",
    "[[D": "f4",
    "[[E": "f5",
    "[15~": "f5",
    "[17~": "f6",
    "[18~": "f7",
    "[19~": "f8",
    "[20~": "f9",
    "[21~": "f10",
    "[23~": "f11",
    "[24~": "f12",
    "[A": "up",
    "[B": "down",
    "[C": "right",
    "[D": "left",
    "[E": "clear",
    "[F": "end",
    "[H": "home",
    "OA": "up",
    "OB": "down",
    "OC": "right",
    "OD": "left",
    "OE": "clear",
    "OF": "end",
    "OH": "home",
    "[1~": "home",
    "[2~": "insert",
    "[3~": "delete",
    "[4~": "end",
    "[5~": "pageup",
    "[6~": "pagedown",
    "[[5~": "pageup",
    "[[6~": "pagedown",
    "[7~": "home",
    "[8~": "end"
};
const KeyMapShift = {
    "[a": "up",
    "[b": "down",
    "[c": "right",
    "[d": "left",
    "[e": "clear",
    "[2$": "insert",
    "[3$": "delete",
    "[5$": "pageup",
    "[6$": "pagedown",
    "[7$": "home",
    "[8$": "end",
    "[Z": "tab"
};
const KeyMapCtrl = {
    "Oa": "up",
    "Ob": "down",
    "Oc": "right",
    "Od": "left",
    "Oe": "clear",
    "[2^": "insert",
    "[3^": "delete",
    "[5^": "pageup",
    "[6^": "pagedown",
    "[7^": "home",
    "[8^": "end"
};
const SpecialKeyMap = {
    "\r": "return",
    "\n": "enter",
    "\t": "tab",
    "\b": "backspace",
    "\x7f": "backspace",
    "\x1b": "escape",
    " ": "space"
};
const kEscape = "\x1b";
function parse(data) {
    let index = -1;
    const keys = [];
    const input = data instanceof Uint8Array ? new TextDecoder().decode(data) : data;
    const hasNext = ()=>input.length - 1 >= index + 1
    ;
    const next = ()=>input[++index]
    ;
    parseNext();
    return keys;
    function parseNext() {
        let ch = next();
        let s = ch;
        let escaped = false;
        const key = {
            name: undefined,
            sequence: undefined,
            code: undefined,
            ctrl: false,
            meta: false,
            shift: false
        };
        if (ch === kEscape && hasNext()) {
            escaped = true;
            s += ch = next();
            if (ch === kEscape) {
                s += ch = next();
            }
        }
        if (escaped && (ch === "O" || ch === "[")) {
            let code3 = ch;
            let modifier = 0;
            if (ch === "O") {
                s += ch = next();
                if (ch >= "0" && ch <= "9") {
                    modifier = (Number(ch) >> 0) - 1;
                    s += ch = next();
                }
                code3 += ch;
            } else if (ch === "[") {
                s += ch = next();
                if (ch === "[") {
                    code3 += ch;
                    s += ch = next();
                }
                const cmdStart = s.length - 1;
                if (ch >= "0" && ch <= "9") {
                    s += ch = next();
                    if (ch >= "0" && ch <= "9") {
                        s += ch = next();
                    }
                }
                if (ch === ";") {
                    s += ch = next();
                    if (ch >= "0" && ch <= "9") {
                        s += next();
                    }
                }
                const cmd = s.slice(cmdStart);
                let match;
                if (match = cmd.match(/^(\d\d?)(;(\d))?([~^$])$/)) {
                    code3 += match[1] + match[4];
                    modifier = (Number(match[3]) || 1) - 1;
                } else if (match = cmd.match(/^((\d;)?(\d))?([A-Za-z])$/)) {
                    code3 += match[4];
                    modifier = (Number(match[3]) || 1) - 1;
                } else {
                    code3 += cmd;
                }
            }
            key.ctrl = !!(modifier & 4);
            key.meta = !!(modifier & 10);
            key.shift = !!(modifier & 1);
            key.code = code3;
            if (code3 in KeyMap) {
                key.name = KeyMap[code3];
            } else if (code3 in KeyMapShift) {
                key.name = KeyMapShift[code3];
                key.shift = true;
            } else if (code3 in KeyMapCtrl) {
                key.name = KeyMapCtrl[code3];
                key.ctrl = true;
            } else {
                key.name = "undefined";
            }
        } else if (ch in SpecialKeyMap) {
            key.name = SpecialKeyMap[ch];
            key.meta = escaped;
        } else if (!escaped && ch <= "\x1a") {
            key.name = String.fromCharCode(ch.charCodeAt(0) + "a".charCodeAt(0) - 1);
            key.ctrl = true;
        } else if (/^[0-9A-Za-z]$/.test(ch)) {
            key.name = ch.toLowerCase();
            key.shift = /^[A-Z]$/.test(ch);
            key.meta = escaped;
        } else if (escaped) {
            key.name = ch.length ? undefined : "escape";
            key.meta = true;
        }
        key.sequence = s;
        if (s.length !== 0 && (key.name !== undefined || escaped)) {
            keys.push(key);
        } else if (charLengthAt(s, 0) === s.length) {
            keys.push(key);
        } else {
            throw new Error("Unrecognized or broken escape sequence");
        }
        if (hasNext()) {
            parseNext();
        }
    }
}
function charLengthAt(str, i) {
    const pos = str.codePointAt(i);
    if (typeof pos === "undefined") {
        return 1;
    }
    return pos >= 0x10000 ? 2 : 1;
}
const osType = (()=>{
    const { Deno  } = globalThis;
    if (typeof Deno?.build?.os === "string") {
        return Deno.build.os;
    }
    const { navigator  } = globalThis;
    if (navigator?.appVersion?.includes?.("Win") ?? false) {
        return "windows";
    }
    return "linux";
})();
const isWindows = osType === "windows";
const CHAR_FORWARD_SLASH = 47;
function assertPath(path14) {
    if (typeof path14 !== "string") {
        throw new TypeError(`Path must be a string. Received ${JSON.stringify(path14)}`);
    }
}
function isPosixPathSeparator(code4) {
    return code4 === 47;
}
function isPathSeparator(code5) {
    return isPosixPathSeparator(code5) || code5 === 92;
}
function isWindowsDeviceRoot(code6) {
    return code6 >= 97 && code6 <= 122 || code6 >= 65 && code6 <= 90;
}
function normalizeString(path15, allowAboveRoot, separator, isPathSeparator1) {
    let res = "";
    let lastSegmentLength = 0;
    let lastSlash = -1;
    let dots = 0;
    let code7;
    for(let i = 0, len = path15.length; i <= len; ++i){
        if (i < len) code7 = path15.charCodeAt(i);
        else if (isPathSeparator1(code7)) break;
        else code7 = CHAR_FORWARD_SLASH;
        if (isPathSeparator1(code7)) {
            if (lastSlash === i - 1 || dots === 1) {} else if (lastSlash !== i - 1 && dots === 2) {
                if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {
                    if (res.length > 2) {
                        const lastSlashIndex = res.lastIndexOf(separator);
                        if (lastSlashIndex === -1) {
                            res = "";
                            lastSegmentLength = 0;
                        } else {
                            res = res.slice(0, lastSlashIndex);
                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);
                        }
                        lastSlash = i;
                        dots = 0;
                        continue;
                    } else if (res.length === 2 || res.length === 1) {
                        res = "";
                        lastSegmentLength = 0;
                        lastSlash = i;
                        dots = 0;
                        continue;
                    }
                }
                if (allowAboveRoot) {
                    if (res.length > 0) res += `${separator}..`;
                    else res = "..";
                    lastSegmentLength = 2;
                }
            } else {
                if (res.length > 0) res += separator + path15.slice(lastSlash + 1, i);
                else res = path15.slice(lastSlash + 1, i);
                lastSegmentLength = i - lastSlash - 1;
            }
            lastSlash = i;
            dots = 0;
        } else if (code7 === 46 && dots !== -1) {
            ++dots;
        } else {
            dots = -1;
        }
    }
    return res;
}
function _format(sep3, pathObject) {
    const dir = pathObject.dir || pathObject.root;
    const base = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
    if (!dir) return base;
    if (dir === pathObject.root) return dir + base;
    return dir + sep3 + base;
}
const WHITESPACE_ENCODINGS = {
    "\u0009": "%09",
    "\u000A": "%0A",
    "\u000B": "%0B",
    "\u000C": "%0C",
    "\u000D": "%0D",
    "\u0020": "%20"
};
function encodeWhitespace(string3) {
    return string3.replaceAll(/[\s]/g, (c)=>{
        return WHITESPACE_ENCODINGS[c] ?? c;
    });
}
class DenoStdInternalError extends Error {
    constructor(message){
        super(message);
        this.name = "DenoStdInternalError";
    }
}
function assert(expr, msg = "") {
    if (!expr) {
        throw new DenoStdInternalError(msg);
    }
}
const sep = "\\";
const delimiter = ";";
function resolve(...pathSegments) {
    let resolvedDevice = "";
    let resolvedTail = "";
    let resolvedAbsolute = false;
    for(let i = pathSegments.length - 1; i >= -1; i--){
        let path16;
        const { Deno  } = globalThis;
        if (i >= 0) {
            path16 = pathSegments[i];
        } else if (!resolvedDevice) {
            if (typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a drive-letter-less path without a CWD.");
            }
            path16 = Deno.cwd();
        } else {
            if (typeof Deno?.env?.get !== "function" || typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a relative path without a CWD.");
            }
            path16 = Deno.cwd();
            if (path16 === undefined || path16.slice(0, 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\`) {
                path16 = `${resolvedDevice}\\`;
            }
        }
        assertPath(path16);
        const len = path16.length;
        if (len === 0) continue;
        let rootEnd = 0;
        let device = "";
        let isAbsolute1 = false;
        const code8 = path16.charCodeAt(0);
        if (len > 1) {
            if (isPathSeparator(code8)) {
                isAbsolute1 = true;
                if (isPathSeparator(path16.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for(; j < len; ++j){
                        if (isPathSeparator(path16.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        const firstPart = path16.slice(last, j);
                        last = j;
                        for(; j < len; ++j){
                            if (!isPathSeparator(path16.charCodeAt(j))) break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for(; j < len; ++j){
                                if (isPathSeparator(path16.charCodeAt(j))) break;
                            }
                            if (j === len) {
                                device = `\\\\${firstPart}\\${path16.slice(last)}`;
                                rootEnd = j;
                            } else if (j !== last) {
                                device = `\\\\${firstPart}\\${path16.slice(last, j)}`;
                                rootEnd = j;
                            }
                        }
                    }
                } else {
                    rootEnd = 1;
                }
            } else if (isWindowsDeviceRoot(code8)) {
                if (path16.charCodeAt(1) === 58) {
                    device = path16.slice(0, 2);
                    rootEnd = 2;
                    if (len > 2) {
                        if (isPathSeparator(path16.charCodeAt(2))) {
                            isAbsolute1 = true;
                            rootEnd = 3;
                        }
                    }
                }
            }
        } else if (isPathSeparator(code8)) {
            rootEnd = 1;
            isAbsolute1 = true;
        }
        if (device.length > 0 && resolvedDevice.length > 0 && device.toLowerCase() !== resolvedDevice.toLowerCase()) {
            continue;
        }
        if (resolvedDevice.length === 0 && device.length > 0) {
            resolvedDevice = device;
        }
        if (!resolvedAbsolute) {
            resolvedTail = `${path16.slice(rootEnd)}\\${resolvedTail}`;
            resolvedAbsolute = isAbsolute1;
        }
        if (resolvedAbsolute && resolvedDevice.length > 0) break;
    }
    resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, "\\", isPathSeparator);
    return resolvedDevice + (resolvedAbsolute ? "\\" : "") + resolvedTail || ".";
}
function normalize(path17) {
    assertPath(path17);
    const len = path17.length;
    if (len === 0) return ".";
    let rootEnd = 0;
    let device;
    let isAbsolute2 = false;
    const code9 = path17.charCodeAt(0);
    if (len > 1) {
        if (isPathSeparator(code9)) {
            isAbsolute2 = true;
            if (isPathSeparator(path17.charCodeAt(1))) {
                let j = 2;
                let last = j;
                for(; j < len; ++j){
                    if (isPathSeparator(path17.charCodeAt(j))) break;
                }
                if (j < len && j !== last) {
                    const firstPart = path17.slice(last, j);
                    last = j;
                    for(; j < len; ++j){
                        if (!isPathSeparator(path17.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for(; j < len; ++j){
                            if (isPathSeparator(path17.charCodeAt(j))) break;
                        }
                        if (j === len) {
                            return `\\\\${firstPart}\\${path17.slice(last)}\\`;
                        } else if (j !== last) {
                            device = `\\\\${firstPart}\\${path17.slice(last, j)}`;
                            rootEnd = j;
                        }
                    }
                }
            } else {
                rootEnd = 1;
            }
        } else if (isWindowsDeviceRoot(code9)) {
            if (path17.charCodeAt(1) === 58) {
                device = path17.slice(0, 2);
                rootEnd = 2;
                if (len > 2) {
                    if (isPathSeparator(path17.charCodeAt(2))) {
                        isAbsolute2 = true;
                        rootEnd = 3;
                    }
                }
            }
        }
    } else if (isPathSeparator(code9)) {
        return "\\";
    }
    let tail;
    if (rootEnd < len) {
        tail = normalizeString(path17.slice(rootEnd), !isAbsolute2, "\\", isPathSeparator);
    } else {
        tail = "";
    }
    if (tail.length === 0 && !isAbsolute2) tail = ".";
    if (tail.length > 0 && isPathSeparator(path17.charCodeAt(len - 1))) {
        tail += "\\";
    }
    if (device === undefined) {
        if (isAbsolute2) {
            if (tail.length > 0) return `\\${tail}`;
            else return "\\";
        } else if (tail.length > 0) {
            return tail;
        } else {
            return "";
        }
    } else if (isAbsolute2) {
        if (tail.length > 0) return `${device}\\${tail}`;
        else return `${device}\\`;
    } else if (tail.length > 0) {
        return device + tail;
    } else {
        return device;
    }
}
function isAbsolute(path18) {
    assertPath(path18);
    const len = path18.length;
    if (len === 0) return false;
    const code10 = path18.charCodeAt(0);
    if (isPathSeparator(code10)) {
        return true;
    } else if (isWindowsDeviceRoot(code10)) {
        if (len > 2 && path18.charCodeAt(1) === 58) {
            if (isPathSeparator(path18.charCodeAt(2))) return true;
        }
    }
    return false;
}
function join(...paths) {
    const pathsCount = paths.length;
    if (pathsCount === 0) return ".";
    let joined;
    let firstPart = null;
    for(let i = 0; i < pathsCount; ++i){
        const path19 = paths[i];
        assertPath(path19);
        if (path19.length > 0) {
            if (joined === undefined) joined = firstPart = path19;
            else joined += `\\${path19}`;
        }
    }
    if (joined === undefined) return ".";
    let needsReplace = true;
    let slashCount = 0;
    assert(firstPart != null);
    if (isPathSeparator(firstPart.charCodeAt(0))) {
        ++slashCount;
        const firstLen = firstPart.length;
        if (firstLen > 1) {
            if (isPathSeparator(firstPart.charCodeAt(1))) {
                ++slashCount;
                if (firstLen > 2) {
                    if (isPathSeparator(firstPart.charCodeAt(2))) ++slashCount;
                    else {
                        needsReplace = false;
                    }
                }
            }
        }
    }
    if (needsReplace) {
        for(; slashCount < joined.length; ++slashCount){
            if (!isPathSeparator(joined.charCodeAt(slashCount))) break;
        }
        if (slashCount >= 2) joined = `\\${joined.slice(slashCount)}`;
    }
    return normalize(joined);
}
function relative(from, to) {
    assertPath(from);
    assertPath(to);
    if (from === to) return "";
    const fromOrig = resolve(from);
    const toOrig = resolve(to);
    if (fromOrig === toOrig) return "";
    from = fromOrig.toLowerCase();
    to = toOrig.toLowerCase();
    if (from === to) return "";
    let fromStart = 0;
    let fromEnd = from.length;
    for(; fromStart < fromEnd; ++fromStart){
        if (from.charCodeAt(fromStart) !== 92) break;
    }
    for(; fromEnd - 1 > fromStart; --fromEnd){
        if (from.charCodeAt(fromEnd - 1) !== 92) break;
    }
    const fromLen = fromEnd - fromStart;
    let toStart = 0;
    let toEnd = to.length;
    for(; toStart < toEnd; ++toStart){
        if (to.charCodeAt(toStart) !== 92) break;
    }
    for(; toEnd - 1 > toStart; --toEnd){
        if (to.charCodeAt(toEnd - 1) !== 92) break;
    }
    const toLen = toEnd - toStart;
    const length = fromLen < toLen ? fromLen : toLen;
    let lastCommonSep = -1;
    let i = 0;
    for(; i <= length; ++i){
        if (i === length) {
            if (toLen > length) {
                if (to.charCodeAt(toStart + i) === 92) {
                    return toOrig.slice(toStart + i + 1);
                } else if (i === 2) {
                    return toOrig.slice(toStart + i);
                }
            }
            if (fromLen > length) {
                if (from.charCodeAt(fromStart + i) === 92) {
                    lastCommonSep = i;
                } else if (i === 2) {
                    lastCommonSep = 3;
                }
            }
            break;
        }
        const fromCode = from.charCodeAt(fromStart + i);
        const toCode = to.charCodeAt(toStart + i);
        if (fromCode !== toCode) break;
        else if (fromCode === 92) lastCommonSep = i;
    }
    if (i !== length && lastCommonSep === -1) {
        return toOrig;
    }
    let out = "";
    if (lastCommonSep === -1) lastCommonSep = 0;
    for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i){
        if (i === fromEnd || from.charCodeAt(i) === 92) {
            if (out.length === 0) out += "..";
            else out += "\\..";
        }
    }
    if (out.length > 0) {
        return out + toOrig.slice(toStart + lastCommonSep, toEnd);
    } else {
        toStart += lastCommonSep;
        if (toOrig.charCodeAt(toStart) === 92) ++toStart;
        return toOrig.slice(toStart, toEnd);
    }
}
function toNamespacedPath(path20) {
    if (typeof path20 !== "string") return path20;
    if (path20.length === 0) return "";
    const resolvedPath = resolve(path20);
    if (resolvedPath.length >= 3) {
        if (resolvedPath.charCodeAt(0) === 92) {
            if (resolvedPath.charCodeAt(1) === 92) {
                const code11 = resolvedPath.charCodeAt(2);
                if (code11 !== 63 && code11 !== 46) {
                    return `\\\\?\\UNC\\${resolvedPath.slice(2)}`;
                }
            }
        } else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {
            if (resolvedPath.charCodeAt(1) === 58 && resolvedPath.charCodeAt(2) === 92) {
                return `\\\\?\\${resolvedPath}`;
            }
        }
    }
    return path20;
}
function dirname(path21) {
    assertPath(path21);
    const len = path21.length;
    if (len === 0) return ".";
    let rootEnd = -1;
    let end = -1;
    let matchedSlash = true;
    let offset = 0;
    const code12 = path21.charCodeAt(0);
    if (len > 1) {
        if (isPathSeparator(code12)) {
            rootEnd = offset = 1;
            if (isPathSeparator(path21.charCodeAt(1))) {
                let j = 2;
                let last = j;
                for(; j < len; ++j){
                    if (isPathSeparator(path21.charCodeAt(j))) break;
                }
                if (j < len && j !== last) {
                    last = j;
                    for(; j < len; ++j){
                        if (!isPathSeparator(path21.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for(; j < len; ++j){
                            if (isPathSeparator(path21.charCodeAt(j))) break;
                        }
                        if (j === len) {
                            return path21;
                        }
                        if (j !== last) {
                            rootEnd = offset = j + 1;
                        }
                    }
                }
            }
        } else if (isWindowsDeviceRoot(code12)) {
            if (path21.charCodeAt(1) === 58) {
                rootEnd = offset = 2;
                if (len > 2) {
                    if (isPathSeparator(path21.charCodeAt(2))) rootEnd = offset = 3;
                }
            }
        }
    } else if (isPathSeparator(code12)) {
        return path21;
    }
    for(let i = len - 1; i >= offset; --i){
        if (isPathSeparator(path21.charCodeAt(i))) {
            if (!matchedSlash) {
                end = i;
                break;
            }
        } else {
            matchedSlash = false;
        }
    }
    if (end === -1) {
        if (rootEnd === -1) return ".";
        else end = rootEnd;
    }
    return path21.slice(0, end);
}
function basename(path22, ext = "") {
    if (ext !== undefined && typeof ext !== "string") {
        throw new TypeError('"ext" argument must be a string');
    }
    assertPath(path22);
    let start = 0;
    let end = -1;
    let matchedSlash = true;
    let i;
    if (path22.length >= 2) {
        const drive = path22.charCodeAt(0);
        if (isWindowsDeviceRoot(drive)) {
            if (path22.charCodeAt(1) === 58) start = 2;
        }
    }
    if (ext !== undefined && ext.length > 0 && ext.length <= path22.length) {
        if (ext.length === path22.length && ext === path22) return "";
        let extIdx = ext.length - 1;
        let firstNonSlashEnd = -1;
        for(i = path22.length - 1; i >= start; --i){
            const code13 = path22.charCodeAt(i);
            if (isPathSeparator(code13)) {
                if (!matchedSlash) {
                    start = i + 1;
                    break;
                }
            } else {
                if (firstNonSlashEnd === -1) {
                    matchedSlash = false;
                    firstNonSlashEnd = i + 1;
                }
                if (extIdx >= 0) {
                    if (code13 === ext.charCodeAt(extIdx)) {
                        if (--extIdx === -1) {
                            end = i;
                        }
                    } else {
                        extIdx = -1;
                        end = firstNonSlashEnd;
                    }
                }
            }
        }
        if (start === end) end = firstNonSlashEnd;
        else if (end === -1) end = path22.length;
        return path22.slice(start, end);
    } else {
        for(i = path22.length - 1; i >= start; --i){
            if (isPathSeparator(path22.charCodeAt(i))) {
                if (!matchedSlash) {
                    start = i + 1;
                    break;
                }
            } else if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
        }
        if (end === -1) return "";
        return path22.slice(start, end);
    }
}
function extname(path23) {
    assertPath(path23);
    let start = 0;
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let preDotState = 0;
    if (path23.length >= 2 && path23.charCodeAt(1) === 58 && isWindowsDeviceRoot(path23.charCodeAt(0))) {
        start = startPart = 2;
    }
    for(let i = path23.length - 1; i >= start; --i){
        const code14 = path23.charCodeAt(i);
        if (isPathSeparator(code14)) {
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i + 1;
        }
        if (code14 === 46) {
            if (startDot === -1) startDot = i;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        return "";
    }
    return path23.slice(startDot, end);
}
function format(pathObject) {
    if (pathObject === null || typeof pathObject !== "object") {
        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
    }
    return _format("\\", pathObject);
}
function parse1(path24) {
    assertPath(path24);
    const ret = {
        root: "",
        dir: "",
        base: "",
        ext: "",
        name: ""
    };
    const len = path24.length;
    if (len === 0) return ret;
    let rootEnd = 0;
    let code15 = path24.charCodeAt(0);
    if (len > 1) {
        if (isPathSeparator(code15)) {
            rootEnd = 1;
            if (isPathSeparator(path24.charCodeAt(1))) {
                let j = 2;
                let last = j;
                for(; j < len; ++j){
                    if (isPathSeparator(path24.charCodeAt(j))) break;
                }
                if (j < len && j !== last) {
                    last = j;
                    for(; j < len; ++j){
                        if (!isPathSeparator(path24.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for(; j < len; ++j){
                            if (isPathSeparator(path24.charCodeAt(j))) break;
                        }
                        if (j === len) {
                            rootEnd = j;
                        } else if (j !== last) {
                            rootEnd = j + 1;
                        }
                    }
                }
            }
        } else if (isWindowsDeviceRoot(code15)) {
            if (path24.charCodeAt(1) === 58) {
                rootEnd = 2;
                if (len > 2) {
                    if (isPathSeparator(path24.charCodeAt(2))) {
                        if (len === 3) {
                            ret.root = ret.dir = path24;
                            return ret;
                        }
                        rootEnd = 3;
                    }
                } else {
                    ret.root = ret.dir = path24;
                    return ret;
                }
            }
        }
    } else if (isPathSeparator(code15)) {
        ret.root = ret.dir = path24;
        return ret;
    }
    if (rootEnd > 0) ret.root = path24.slice(0, rootEnd);
    let startDot = -1;
    let startPart = rootEnd;
    let end = -1;
    let matchedSlash = true;
    let i = path24.length - 1;
    let preDotState = 0;
    for(; i >= rootEnd; --i){
        code15 = path24.charCodeAt(i);
        if (isPathSeparator(code15)) {
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i + 1;
        }
        if (code15 === 46) {
            if (startDot === -1) startDot = i;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        if (end !== -1) {
            ret.base = ret.name = path24.slice(startPart, end);
        }
    } else {
        ret.name = path24.slice(startPart, startDot);
        ret.base = path24.slice(startPart, end);
        ret.ext = path24.slice(startDot, end);
    }
    if (startPart > 0 && startPart !== rootEnd) {
        ret.dir = path24.slice(0, startPart - 1);
    } else ret.dir = ret.root;
    return ret;
}
function fromFileUrl(url) {
    url = url instanceof URL ? url : new URL(url);
    if (url.protocol != "file:") {
        throw new TypeError("Must be a file URL.");
    }
    let path25 = decodeURIComponent(url.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
    if (url.hostname != "") {
        path25 = `\\\\${url.hostname}${path25}`;
    }
    return path25;
}
function toFileUrl(path26) {
    if (!isAbsolute(path26)) {
        throw new TypeError("Must be an absolute path.");
    }
    const [, hostname, pathname] = path26.match(/^(?:[/\\]{2}([^/\\]+)(?=[/\\](?:[^/\\]|$)))?(.*)/);
    const url = new URL("file:///");
    url.pathname = encodeWhitespace(pathname.replace(/%/g, "%25"));
    if (hostname != null && hostname != "localhost") {
        url.hostname = hostname;
        if (!url.hostname) {
            throw new TypeError("Invalid hostname.");
        }
    }
    return url;
}
const mod1 = {
    sep: sep,
    delimiter: delimiter,
    resolve: resolve,
    normalize: normalize,
    isAbsolute: isAbsolute,
    join: join,
    relative: relative,
    toNamespacedPath: toNamespacedPath,
    dirname: dirname,
    basename: basename,
    extname: extname,
    format: format,
    parse: parse1,
    fromFileUrl: fromFileUrl,
    toFileUrl: toFileUrl
};
const sep1 = "/";
const delimiter1 = ":";
function resolve1(...pathSegments) {
    let resolvedPath = "";
    let resolvedAbsolute = false;
    for(let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--){
        let path27;
        if (i >= 0) path27 = pathSegments[i];
        else {
            const { Deno  } = globalThis;
            if (typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a relative path without a CWD.");
            }
            path27 = Deno.cwd();
        }
        assertPath(path27);
        if (path27.length === 0) {
            continue;
        }
        resolvedPath = `${path27}/${resolvedPath}`;
        resolvedAbsolute = path27.charCodeAt(0) === CHAR_FORWARD_SLASH;
    }
    resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, "/", isPosixPathSeparator);
    if (resolvedAbsolute) {
        if (resolvedPath.length > 0) return `/${resolvedPath}`;
        else return "/";
    } else if (resolvedPath.length > 0) return resolvedPath;
    else return ".";
}
function normalize1(path28) {
    assertPath(path28);
    if (path28.length === 0) return ".";
    const isAbsolute1 = path28.charCodeAt(0) === 47;
    const trailingSeparator = path28.charCodeAt(path28.length - 1) === 47;
    path28 = normalizeString(path28, !isAbsolute1, "/", isPosixPathSeparator);
    if (path28.length === 0 && !isAbsolute1) path28 = ".";
    if (path28.length > 0 && trailingSeparator) path28 += "/";
    if (isAbsolute1) return `/${path28}`;
    return path28;
}
function isAbsolute1(path29) {
    assertPath(path29);
    return path29.length > 0 && path29.charCodeAt(0) === 47;
}
function join1(...paths) {
    if (paths.length === 0) return ".";
    let joined;
    for(let i = 0, len = paths.length; i < len; ++i){
        const path30 = paths[i];
        assertPath(path30);
        if (path30.length > 0) {
            if (!joined) joined = path30;
            else joined += `/${path30}`;
        }
    }
    if (!joined) return ".";
    return normalize1(joined);
}
function relative1(from, to) {
    assertPath(from);
    assertPath(to);
    if (from === to) return "";
    from = resolve1(from);
    to = resolve1(to);
    if (from === to) return "";
    let fromStart = 1;
    const fromEnd = from.length;
    for(; fromStart < fromEnd; ++fromStart){
        if (from.charCodeAt(fromStart) !== 47) break;
    }
    const fromLen = fromEnd - fromStart;
    let toStart = 1;
    const toEnd = to.length;
    for(; toStart < toEnd; ++toStart){
        if (to.charCodeAt(toStart) !== 47) break;
    }
    const toLen = toEnd - toStart;
    const length = fromLen < toLen ? fromLen : toLen;
    let lastCommonSep = -1;
    let i = 0;
    for(; i <= length; ++i){
        if (i === length) {
            if (toLen > length) {
                if (to.charCodeAt(toStart + i) === 47) {
                    return to.slice(toStart + i + 1);
                } else if (i === 0) {
                    return to.slice(toStart + i);
                }
            } else if (fromLen > length) {
                if (from.charCodeAt(fromStart + i) === 47) {
                    lastCommonSep = i;
                } else if (i === 0) {
                    lastCommonSep = 0;
                }
            }
            break;
        }
        const fromCode = from.charCodeAt(fromStart + i);
        const toCode = to.charCodeAt(toStart + i);
        if (fromCode !== toCode) break;
        else if (fromCode === 47) lastCommonSep = i;
    }
    let out = "";
    for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i){
        if (i === fromEnd || from.charCodeAt(i) === 47) {
            if (out.length === 0) out += "..";
            else out += "/..";
        }
    }
    if (out.length > 0) return out + to.slice(toStart + lastCommonSep);
    else {
        toStart += lastCommonSep;
        if (to.charCodeAt(toStart) === 47) ++toStart;
        return to.slice(toStart);
    }
}
function toNamespacedPath1(path31) {
    return path31;
}
function dirname1(path32) {
    assertPath(path32);
    if (path32.length === 0) return ".";
    const hasRoot = path32.charCodeAt(0) === 47;
    let end = -1;
    let matchedSlash = true;
    for(let i = path32.length - 1; i >= 1; --i){
        if (path32.charCodeAt(i) === 47) {
            if (!matchedSlash) {
                end = i;
                break;
            }
        } else {
            matchedSlash = false;
        }
    }
    if (end === -1) return hasRoot ? "/" : ".";
    if (hasRoot && end === 1) return "//";
    return path32.slice(0, end);
}
function basename1(path33, ext = "") {
    if (ext !== undefined && typeof ext !== "string") {
        throw new TypeError('"ext" argument must be a string');
    }
    assertPath(path33);
    let start = 0;
    let end = -1;
    let matchedSlash = true;
    let i;
    if (ext !== undefined && ext.length > 0 && ext.length <= path33.length) {
        if (ext.length === path33.length && ext === path33) return "";
        let extIdx = ext.length - 1;
        let firstNonSlashEnd = -1;
        for(i = path33.length - 1; i >= 0; --i){
            const code16 = path33.charCodeAt(i);
            if (code16 === 47) {
                if (!matchedSlash) {
                    start = i + 1;
                    break;
                }
            } else {
                if (firstNonSlashEnd === -1) {
                    matchedSlash = false;
                    firstNonSlashEnd = i + 1;
                }
                if (extIdx >= 0) {
                    if (code16 === ext.charCodeAt(extIdx)) {
                        if (--extIdx === -1) {
                            end = i;
                        }
                    } else {
                        extIdx = -1;
                        end = firstNonSlashEnd;
                    }
                }
            }
        }
        if (start === end) end = firstNonSlashEnd;
        else if (end === -1) end = path33.length;
        return path33.slice(start, end);
    } else {
        for(i = path33.length - 1; i >= 0; --i){
            if (path33.charCodeAt(i) === 47) {
                if (!matchedSlash) {
                    start = i + 1;
                    break;
                }
            } else if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
        }
        if (end === -1) return "";
        return path33.slice(start, end);
    }
}
function extname1(path34) {
    assertPath(path34);
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let preDotState = 0;
    for(let i = path34.length - 1; i >= 0; --i){
        const code17 = path34.charCodeAt(i);
        if (code17 === 47) {
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i + 1;
        }
        if (code17 === 46) {
            if (startDot === -1) startDot = i;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        return "";
    }
    return path34.slice(startDot, end);
}
function format1(pathObject) {
    if (pathObject === null || typeof pathObject !== "object") {
        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
    }
    return _format("/", pathObject);
}
function parse2(path35) {
    assertPath(path35);
    const ret = {
        root: "",
        dir: "",
        base: "",
        ext: "",
        name: ""
    };
    if (path35.length === 0) return ret;
    const isAbsolute2 = path35.charCodeAt(0) === 47;
    let start;
    if (isAbsolute2) {
        ret.root = "/";
        start = 1;
    } else {
        start = 0;
    }
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let i = path35.length - 1;
    let preDotState = 0;
    for(; i >= start; --i){
        const code18 = path35.charCodeAt(i);
        if (code18 === 47) {
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i + 1;
        }
        if (code18 === 46) {
            if (startDot === -1) startDot = i;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        if (end !== -1) {
            if (startPart === 0 && isAbsolute2) {
                ret.base = ret.name = path35.slice(1, end);
            } else {
                ret.base = ret.name = path35.slice(startPart, end);
            }
        }
    } else {
        if (startPart === 0 && isAbsolute2) {
            ret.name = path35.slice(1, startDot);
            ret.base = path35.slice(1, end);
        } else {
            ret.name = path35.slice(startPart, startDot);
            ret.base = path35.slice(startPart, end);
        }
        ret.ext = path35.slice(startDot, end);
    }
    if (startPart > 0) ret.dir = path35.slice(0, startPart - 1);
    else if (isAbsolute2) ret.dir = "/";
    return ret;
}
function fromFileUrl1(url) {
    url = url instanceof URL ? url : new URL(url);
    if (url.protocol != "file:") {
        throw new TypeError("Must be a file URL.");
    }
    return decodeURIComponent(url.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
}
function toFileUrl1(path36) {
    if (!isAbsolute1(path36)) {
        throw new TypeError("Must be an absolute path.");
    }
    const url = new URL("file:///");
    url.pathname = encodeWhitespace(path36.replace(/%/g, "%25").replace(/\\/g, "%5C"));
    return url;
}
const mod2 = {
    sep: sep1,
    delimiter: delimiter1,
    resolve: resolve1,
    normalize: normalize1,
    isAbsolute: isAbsolute1,
    join: join1,
    relative: relative1,
    toNamespacedPath: toNamespacedPath1,
    dirname: dirname1,
    basename: basename1,
    extname: extname1,
    format: format1,
    parse: parse2,
    fromFileUrl: fromFileUrl1,
    toFileUrl: toFileUrl1
};
const path = isWindows ? mod1 : mod2;
const { join: join2 , normalize: normalize2  } = path;
const path1 = isWindows ? mod1 : mod2;
const { basename: basename2 , delimiter: delimiter2 , dirname: dirname2 , extname: extname2 , format: format2 , fromFileUrl: fromFileUrl2 , isAbsolute: isAbsolute2 , join: join3 , normalize: normalize3 , parse: parse3 , relative: relative2 , resolve: resolve2 , sep: sep2 , toFileUrl: toFileUrl2 , toNamespacedPath: toNamespacedPath2 ,  } = path1;
class GenericPrompt {
    static injectedValue;
    settings;
    tty = tty;
    indent;
    cursor = {
        x: 0,
        y: 0
    };
    #value;
    #lastError;
    #isFirstRun = true;
    #encoder = new TextEncoder();
    static inject(value) {
        GenericPrompt.injectedValue = value;
    }
    constructor(settings){
        this.settings = {
            ...settings,
            keys: {
                submit: [
                    "enter",
                    "return"
                ],
                ...settings.keys ?? {}
            }
        };
        this.indent = this.settings.indent ?? " ";
    }
    async prompt() {
        try {
            return await this.#execute();
        } finally{
            this.tty.cursorShow();
        }
    }
    clear() {
        this.tty.cursorLeft.eraseDown();
    }
    #execute = async ()=>{
        if (typeof GenericPrompt.injectedValue !== "undefined" && this.#lastError) {
            throw new Error(await this.error());
        }
        await this.render();
        this.#lastError = undefined;
        if (!await this.read()) {
            return this.#execute();
        }
        if (typeof this.#value === "undefined") {
            throw new Error("internal error: failed to read value");
        }
        this.clear();
        const successMessage = this.success(this.#value);
        if (successMessage) {
            console.log(successMessage);
        }
        GenericPrompt.injectedValue = undefined;
        this.tty.cursorShow();
        return this.#value;
    };
    async render() {
        const result = await Promise.all([
            this.message(),
            this.body?.(),
            this.footer(), 
        ]);
        const content = result.filter(Boolean).join("\n");
        const lines = content.split("\n");
        const columns = getColumns();
        const linesCount = columns ? lines.reduce((prev, next)=>{
            const length = stripColor(next).length;
            return prev + (length > columns ? Math.ceil(length / columns) : 1);
        }, 0) : content.split("\n").length;
        const y = linesCount - this.cursor.y - 1;
        if (!this.#isFirstRun || this.#lastError) {
            this.clear();
        }
        this.#isFirstRun = false;
        if (Deno.build.os === "windows") {
            console.log(content);
            this.tty.cursorUp();
        } else {
            Deno.stdout.writeSync(this.#encoder.encode(content));
        }
        if (y) {
            this.tty.cursorUp(y);
        }
        this.tty.cursorTo(this.cursor.x);
    }
    async read() {
        if (typeof GenericPrompt.injectedValue !== "undefined") {
            const value = GenericPrompt.injectedValue;
            await this.#validateValue(value);
        } else {
            const events = await this.#readKey();
            if (!events.length) {
                return false;
            }
            for (const event of events){
                await this.handleEvent(event);
            }
        }
        return typeof this.#value !== "undefined";
    }
    submit() {
        return this.#validateValue(this.getValue());
    }
    message() {
        return `${this.settings.indent}${this.settings.prefix}` + bold(this.settings.message) + this.defaults();
    }
    defaults() {
        let defaultMessage = "";
        if (typeof this.settings.default !== "undefined" && !this.settings.hideDefault) {
            defaultMessage += dim(` (${this.format(this.settings.default)})`);
        }
        return defaultMessage;
    }
    success(value) {
        return `${this.settings.indent}${this.settings.prefix}` + bold(this.settings.message) + this.defaults() + " " + this.settings.pointer + " " + green(this.format(value));
    }
    footer() {
        return this.error() ?? this.hint();
    }
    error() {
        return this.#lastError ? this.settings.indent + red(bold(`${Figures.CROSS} `) + this.#lastError) : undefined;
    }
    hint() {
        return this.settings.hint ? this.settings.indent + italic(blue(dim(`${Figures.POINTER} `) + this.settings.hint)) : undefined;
    }
    setErrorMessage(message) {
        this.#lastError = message;
    }
    async handleEvent(event) {
        switch(true){
            case event.name === "c" && event.ctrl:
                this.clear();
                this.tty.cursorShow();
                Deno.exit(130);
                return;
            case this.isKey(this.settings.keys, "submit", event):
                await this.submit();
                break;
        }
    }
    #readKey = async ()=>{
        const data = await this.#readChar();
        return data.length ? parse(data) : [];
    };
    #readChar = async ()=>{
        const buffer = new Uint8Array(8);
        const isTty = Deno.isatty(Deno.stdin.rid);
        if (isTty) {
            Deno.setRaw(Deno.stdin.rid, true, {
                cbreak: this.settings.cbreak === true
            });
        }
        const nread = await Deno.stdin.read(buffer);
        if (isTty) {
            Deno.setRaw(Deno.stdin.rid, false);
        }
        if (nread === null) {
            return buffer;
        }
        return buffer.subarray(0, nread);
    };
    #transformValue = (value)=>{
        return this.settings.transform ? this.settings.transform(value) : this.transform(value);
    };
    #validateValue = async (value)=>{
        if (!value && typeof this.settings.default !== "undefined") {
            this.#value = this.settings.default;
            return;
        }
        this.#value = undefined;
        this.#lastError = undefined;
        const validation = await (this.settings.validate ? this.settings.validate(value) : this.validate(value));
        if (validation === false) {
            this.#lastError = `Invalid answer.`;
        } else if (typeof validation === "string") {
            this.#lastError = validation;
        } else {
            this.#value = this.#transformValue(value);
        }
    };
    isKey(keys, name, event) {
        const keyNames = keys?.[name];
        return typeof keyNames !== "undefined" && (typeof event.name !== "undefined" && keyNames.indexOf(event.name) !== -1 || typeof event.sequence !== "undefined" && keyNames.indexOf(event.sequence) !== -1);
    }
}
function getColumns() {
    try {
        return Deno.consoleSize(Deno.stdout.rid).columns;
    } catch (_error) {
        return null;
    }
}
class GenericInput extends GenericPrompt {
    inputValue = "";
    inputIndex = 0;
    constructor(settings){
        super({
            ...settings,
            keys: {
                moveCursorLeft: [
                    "left"
                ],
                moveCursorRight: [
                    "right"
                ],
                deleteCharLeft: [
                    "backspace"
                ],
                deleteCharRight: [
                    "delete"
                ],
                ...settings.keys ?? {}
            }
        });
    }
    getCurrentInputValue() {
        return this.inputValue;
    }
    message() {
        const message = super.message() + " " + this.settings.pointer + " ";
        this.cursor.x = stripColor(message).length + this.inputIndex + 1;
        return message + this.input();
    }
    input() {
        return underline(this.inputValue);
    }
    highlight(value, color1 = dim, color2 = blue) {
        value = value.toString();
        const inputLowerCase = this.getCurrentInputValue().toLowerCase();
        const valueLowerCase = value.toLowerCase();
        const index = valueLowerCase.indexOf(inputLowerCase);
        const matched = value.slice(index, index + inputLowerCase.length);
        return index >= 0 ? color1(value.slice(0, index)) + color2(matched) + color1(value.slice(index + inputLowerCase.length)) : value;
    }
    async handleEvent(event) {
        switch(true){
            case event.name === "c" && event.ctrl:
                this.clear();
                this.tty.cursorShow();
                Deno.exit(130);
                return;
            case this.isKey(this.settings.keys, "moveCursorLeft", event):
                this.moveCursorLeft();
                break;
            case this.isKey(this.settings.keys, "moveCursorRight", event):
                this.moveCursorRight();
                break;
            case this.isKey(this.settings.keys, "deleteCharRight", event):
                this.deleteCharRight();
                break;
            case this.isKey(this.settings.keys, "deleteCharLeft", event):
                this.deleteChar();
                break;
            case this.isKey(this.settings.keys, "submit", event):
                await this.submit();
                break;
            default:
                if (event.sequence && !event.meta && !event.ctrl) {
                    this.addChar(event.sequence);
                }
        }
    }
    addChar(__char) {
        this.inputValue = this.inputValue.slice(0, this.inputIndex) + __char + this.inputValue.slice(this.inputIndex);
        this.inputIndex++;
    }
    moveCursorLeft() {
        if (this.inputIndex > 0) {
            this.inputIndex--;
        }
    }
    moveCursorRight() {
        if (this.inputIndex < this.inputValue.length) {
            this.inputIndex++;
        }
    }
    deleteChar() {
        if (this.inputIndex > 0) {
            this.inputIndex--;
            this.deleteCharRight();
        }
    }
    deleteCharRight() {
        if (this.inputIndex < this.inputValue.length) {
            this.inputValue = this.inputValue.slice(0, this.inputIndex) + this.inputValue.slice(this.inputIndex + 1);
        }
    }
}
class GenericList extends GenericInput {
    options = this.settings.options;
    listIndex = this.getListIndex();
    listOffset = this.getPageOffset(this.listIndex);
    static separator(label = "------------") {
        return {
            value: label,
            disabled: true
        };
    }
    static mapOption(option) {
        return {
            value: option.value,
            name: typeof option.name === "undefined" ? option.value : option.name,
            disabled: !!option.disabled
        };
    }
    constructor(settings){
        super({
            ...settings,
            keys: {
                previous: settings.search ? [
                    "up"
                ] : [
                    "up",
                    "u",
                    "p",
                    "8"
                ],
                next: settings.search ? [
                    "down"
                ] : [
                    "down",
                    "d",
                    "n",
                    "2"
                ],
                previousPage: [
                    "pageup",
                    "left"
                ],
                nextPage: [
                    "pagedown",
                    "right"
                ],
                ...settings.keys ?? {}
            }
        });
    }
    match() {
        const input = this.getCurrentInputValue().toLowerCase();
        if (!input.length) {
            this.options = this.settings.options.slice();
        } else {
            this.options = this.settings.options.filter((option)=>match(option.name) || option.name !== option.value && match(option.value)
            ).sort((a, b)=>distance(a.name, input) - distance(b.name, input)
            );
        }
        this.listIndex = Math.max(0, Math.min(this.options.length - 1, this.listIndex));
        this.listOffset = Math.max(0, Math.min(this.options.length - this.getListHeight(), this.listOffset));
        function match(value) {
            return stripColor(value).toLowerCase().includes(input);
        }
    }
    message() {
        let message = `${this.settings.indent}${this.settings.prefix}` + bold(this.settings.message) + this.defaults();
        if (this.settings.search) {
            message += " " + this.settings.searchLabel + " ";
        }
        this.cursor.x = stripColor(message).length + this.inputIndex + 1;
        return message + this.input();
    }
    body() {
        return this.getList() + this.getInfo();
    }
    getInfo() {
        if (!this.settings.info) {
            return "";
        }
        const selected = this.listIndex + 1;
        const actions = [
            [
                "Next",
                getFiguresByKeys(this.settings.keys?.next ?? [])
            ],
            [
                "Previous",
                getFiguresByKeys(this.settings.keys?.previous ?? [])
            ],
            [
                "Next Page",
                getFiguresByKeys(this.settings.keys?.nextPage ?? [])
            ],
            [
                "Previous Page",
                getFiguresByKeys(this.settings.keys?.previousPage ?? []), 
            ],
            [
                "Submit",
                getFiguresByKeys(this.settings.keys?.submit ?? [])
            ], 
        ];
        return "\n" + this.settings.indent + blue(Figures.INFO) + bold(` ${selected}/${this.options.length} `) + actions.map((cur)=>`${cur[0]}: ${bold(cur[1].join(", "))}`
        ).join(", ");
    }
    getList() {
        const list = [];
        const height = this.getListHeight();
        for(let i = this.listOffset; i < this.listOffset + height; i++){
            list.push(this.getListItem(this.options[i], this.listIndex === i));
        }
        if (!list.length) {
            list.push(this.settings.indent + dim("  No matches..."));
        }
        return list.join("\n");
    }
    getListHeight() {
        return Math.min(this.options.length, this.settings.maxRows || this.options.length);
    }
    getListIndex(value) {
        return Math.max(0, typeof value === "undefined" ? this.options.findIndex((item)=>!item.disabled
        ) || 0 : this.options.findIndex((item)=>item.value === value
        ) || 0);
    }
    getPageOffset(index) {
        if (index === 0) {
            return 0;
        }
        const height = this.getListHeight();
        return Math.floor(index / height) * height;
    }
    getOptionByValue(value) {
        return this.options.find((option)=>option.value === value
        );
    }
    read() {
        if (!this.settings.search) {
            this.tty.cursorHide();
        }
        return super.read();
    }
    async handleEvent(event) {
        switch(true){
            case this.isKey(this.settings.keys, "previous", event):
                this.selectPrevious();
                break;
            case this.isKey(this.settings.keys, "next", event):
                this.selectNext();
                break;
            case this.isKey(this.settings.keys, "nextPage", event):
                this.selectNextPage();
                break;
            case this.isKey(this.settings.keys, "previousPage", event):
                this.selectPreviousPage();
                break;
            default:
                await super.handleEvent(event);
        }
    }
    moveCursorLeft() {
        if (this.settings.search) {
            super.moveCursorLeft();
        }
    }
    moveCursorRight() {
        if (this.settings.search) {
            super.moveCursorRight();
        }
    }
    deleteChar() {
        if (this.settings.search) {
            super.deleteChar();
        }
    }
    deleteCharRight() {
        if (this.settings.search) {
            super.deleteCharRight();
            this.match();
        }
    }
    addChar(__char) {
        if (this.settings.search) {
            super.addChar(__char);
            this.match();
        }
    }
    selectPrevious() {
        if (this.options.length < 2) {
            return;
        }
        if (this.listIndex > 0) {
            this.listIndex--;
            if (this.listIndex < this.listOffset) {
                this.listOffset--;
            }
            if (this.options[this.listIndex].disabled) {
                this.selectPrevious();
            }
        } else {
            this.listIndex = this.options.length - 1;
            this.listOffset = this.options.length - this.getListHeight();
            if (this.options[this.listIndex].disabled) {
                this.selectPrevious();
            }
        }
    }
    selectNext() {
        if (this.options.length < 2) {
            return;
        }
        if (this.listIndex < this.options.length - 1) {
            this.listIndex++;
            if (this.listIndex >= this.listOffset + this.getListHeight()) {
                this.listOffset++;
            }
            if (this.options[this.listIndex].disabled) {
                this.selectNext();
            }
        } else {
            this.listIndex = this.listOffset = 0;
            if (this.options[this.listIndex].disabled) {
                this.selectNext();
            }
        }
    }
    selectPreviousPage() {
        if (this.options?.length) {
            const height = this.getListHeight();
            if (this.listOffset >= height) {
                this.listIndex -= height;
                this.listOffset -= height;
            } else if (this.listOffset > 0) {
                this.listIndex -= this.listOffset;
                this.listOffset = 0;
            }
        }
    }
    selectNextPage() {
        if (this.options?.length) {
            const height = this.getListHeight();
            if (this.listOffset + height + height < this.options.length) {
                this.listIndex += height;
                this.listOffset += height;
            } else if (this.listOffset + height < this.options.length) {
                const offset = this.options.length - height;
                this.listIndex += offset - this.listOffset;
                this.listOffset = offset;
            }
        }
    }
}
class Checkbox extends GenericList {
    static inject(value) {
        GenericPrompt.inject(value);
    }
    static prompt(options) {
        return new this({
            pointer: blue(Figures.POINTER_SMALL),
            prefix: yellow("? "),
            indent: " ",
            listPointer: blue(Figures.POINTER),
            maxRows: 10,
            searchLabel: blue(Figures.SEARCH),
            minOptions: 0,
            maxOptions: Infinity,
            check: green(Figures.TICK),
            uncheck: red(Figures.CROSS),
            ...options,
            keys: {
                check: [
                    "space"
                ],
                ...options.keys ?? {}
            },
            options: Checkbox.mapOptions(options)
        }).prompt();
    }
    static separator(label) {
        return {
            ...super.separator(label),
            icon: false
        };
    }
    static mapOptions(options) {
        return options.options.map((item)=>typeof item === "string" ? {
                value: item
            } : item
        ).map((item)=>({
                ...this.mapOption(item),
                checked: typeof item.checked === "undefined" && options.default && options.default.indexOf(item.value) !== -1 ? true : !!item.checked,
                icon: typeof item.icon === "undefined" ? true : item.icon
            })
        );
    }
    getListItem(item, isSelected) {
        let line = this.settings.indent;
        line += isSelected ? this.settings.listPointer + " " : "  ";
        if (item.icon) {
            let check = item.checked ? this.settings.check + " " : this.settings.uncheck + " ";
            if (item.disabled) {
                check = dim(check);
            }
            line += check;
        } else {
            line += "  ";
        }
        line += `${isSelected && !item.disabled ? this.highlight(item.name, (val)=>val
        ) : this.highlight(item.name)}`;
        return line;
    }
    getValue() {
        return this.settings.options.filter((item)=>item.checked
        ).map((item)=>item.value
        );
    }
    async handleEvent(event) {
        switch(true){
            case this.isKey(this.settings.keys, "check", event):
                this.checkValue();
                break;
            default:
                await super.handleEvent(event);
        }
    }
    checkValue() {
        const item = this.options[this.listIndex];
        if (item.disabled) {
            this.setErrorMessage("This option is disabled and cannot be changed.");
        } else {
            item.checked = !item.checked;
        }
    }
    validate(value) {
        const isValidValue = Array.isArray(value) && value.every((val)=>typeof val === "string" && val.length > 0 && this.settings.options.findIndex((option)=>option.value === val
            ) !== -1
        );
        if (!isValidValue) {
            return false;
        }
        if (value.length < this.settings.minOptions) {
            return `The minimum number of options is ${this.settings.minOptions} but got ${value.length}.`;
        }
        if (value.length > this.settings.maxOptions) {
            return `The maximum number of options is ${this.settings.maxOptions} but got ${value.length}.`;
        }
        return true;
    }
    transform(value) {
        return value.map((val)=>val.trim()
        );
    }
    format(value) {
        return value.map((val)=>this.getOptionByValue(val)?.name ?? val
        ).join(", ");
    }
}
Deno.build.os === "windows" ? "\\" : "/";
class Secret extends GenericInput {
    static prompt(options) {
        if (typeof options === "string") {
            options = {
                message: options
            };
        }
        return new this({
            pointer: blue(Figures.POINTER_SMALL),
            prefix: yellow("? "),
            indent: " ",
            label: "Password",
            hidden: false,
            minLength: 0,
            maxLength: Infinity,
            ...options
        }).prompt();
    }
    static inject(value) {
        GenericPrompt.inject(value);
    }
    input() {
        return underline(this.settings.hidden ? "" : "*".repeat(this.inputValue.length));
    }
    read() {
        if (this.settings.hidden) {
            this.tty.cursorHide();
        }
        return super.read();
    }
    validate(value) {
        if (typeof value !== "string") {
            return false;
        }
        if (value.length < this.settings.minLength) {
            return `${this.settings.label} must be longer then ${this.settings.minLength} but has a length of ${value.length}.`;
        }
        if (value.length > this.settings.maxLength) {
            return `${this.settings.label} can't be longer then ${this.settings.maxLength} but has a length of ${value.length}.`;
        }
        return true;
    }
    transform(value) {
        return value;
    }
    format(value) {
        return this.settings.hidden ? "*".repeat(8) : "*".repeat(value.length);
    }
    getValue() {
        return this.inputValue;
    }
}
class Select extends GenericList {
    listIndex = this.getListIndex(this.settings.default);
    static inject(value) {
        GenericPrompt.inject(value);
    }
    static prompt(options) {
        return new this({
            pointer: blue(Figures.POINTER_SMALL),
            prefix: yellow("? "),
            indent: " ",
            listPointer: blue(Figures.POINTER),
            maxRows: 10,
            searchLabel: blue(Figures.SEARCH),
            ...options,
            options: Select.mapOptions(options)
        }).prompt();
    }
    static mapOptions(options) {
        return options.options.map((item)=>typeof item === "string" ? {
                value: item
            } : item
        ).map((item)=>this.mapOption(item)
        );
    }
    input() {
        return underline(blue(this.inputValue));
    }
    getListItem(item, isSelected) {
        let line = this.settings.indent;
        line += isSelected ? `${this.settings.listPointer} ` : "  ";
        line += `${isSelected && !item.disabled ? this.highlight(item.name, (val)=>val
        ) : this.highlight(item.name)}`;
        return line;
    }
    getValue() {
        return this.options[this.listIndex]?.value ?? this.settings.default;
    }
    validate(value) {
        return typeof value === "string" && value.length > 0 && this.options.findIndex((option)=>option.value === value
        ) !== -1;
    }
    transform(value) {
        return value.trim();
    }
    format(value) {
        return this.getOptionByValue(value)?.name ?? value;
    }
}
const command = await new Command().name("bcup").version("0.0.0").description("Commandline interface for the Buttercup password manager").command("export", "Export a buttercup vault\n\
WARNING: The export an arbitrary, non-standard JSON format for now.").arguments("<vault_file:string> <output_file:string>").action(async (_, ...args)=>{
    const vaultFilePath = args[0];
    const exportFilePath = args[1];
    const vaultContents = await Deno.readTextFile(vaultFilePath);
    const password = await Secret.prompt("Vault Password");
    const dataSourceCredentials = __VIRTUAL_FILE$1.Credentials.fromDatasource({
        type: "file",
        content: vaultContents
    });
    const dataSource = new __VIRTUAL_FILE$1.TextDatasource(dataSourceCredentials);
    const loaded = await dataSource.load(__VIRTUAL_FILE$1.Credentials.fromPassword(password));
    const vault = await __VIRTUAL_FILE$1.Vault.createFromHistory(loaded.history);
    const exportData = {
        groups: []
    };
    vault.getGroups()[0];
    const exportGroup = (group)=>{
        const g = {
            title: group.getTitle(),
            groups: [],
            entries: []
        };
        for (const entry of group.getEntries()){
            g.entries.push(entry.getProperties());
        }
        for (const subGroup of group.getGroups()){
            g.groups.push(exportGroup(subGroup));
        }
        return g;
    };
    for (const group1 of vault.getGroups()){
        exportData.groups.push(exportGroup(group1));
    }
    await Deno.writeTextFile(exportFilePath, JSON.stringify(exportData));
});
if (Deno.args.length == 0) {
    command.showHelp();
} else {
    command.parse(Deno.args);
}
